/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/bin/java -Didea.launcher.port=7535 "-Didea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin" -Dfile.encoding=UTF-8 -classpath "/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/lib/tools.jar:/Users/houbinbin/IT/code/jsoup-demo/target/classes:/Users/houbinbin/.m2/repository/org/jsoup/jsoup/1.10.2/jsoup-1.10.2.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar" com.intellij.rt.execution.application.AppMain com.ryo.jsoup.demo.HelloTest
<rss version="2.0"><channel><title>Echo blog</title><link>https://houbb.github.io</link><description>Endless Miss, Once Echo</description><language/><copyright/><pubdate/><item><title>RSS</title><description>RSS 侯宾宾      rss      Tool      2017-02-11 RSS 语法 RSS <channel> RSS <item> RSS RSS 指 Really Simple Syndication（真正简易联合）。 RSS 使您有能力聚合（syndicate）网站的内容 RSS 定义了非常简单的方法来共享和查看标题和内容 RSS 文件可被自动更新 RSS 允许为不同的网站进行视图的个性化 RSS 使用 XML 编写 语法 RSS 2.0 的语法很简单，也很严格。 RSS 如何工作 RSS 用于在网站间分享信息。 使用 RSS，您在名为聚合器的公司注册您的内容。 步骤之一是，创建一个 RSS 文档，然后使用 .xml 后缀来保存它。然后把此文件上传到您的网站。接下来，通过一个 RSS 聚合器来注册。 每天，聚合器都会到被注册的网站搜索 RSS 文档，校验其链接，并显示有关 feed 的信息，这样客户就能够链接到使他们产生兴趣的文档。 RSS 实例 RSS 文档使用一种简单的自我描述的语法。 <?xml version="1.0" encoding="ISO-8859-1" ?>
<rss version="2.0">

<channel>
  <title>W3Schools Home Page</title>
  <link>http://www.w3schools.com</link>
  <description>Free web building tutorials</description>
  <item>
    <title>RSS Tutorial</title>
    <link>http://www.w3schools.com/rss</link>
    <description>New RSS tutorial on W3Schools</description>
  </item>
  <item>
    <title>XML Tutorial</title>
    <link>http://www.w3schools.com/xml</link>
    <description>New XML tutorial on W3Schools</description>
  </item>
</channel>

</rss>
 文档中的第一行：XML 声明 - 定义了文档中使用的 XML 版本和字符编码。此例子遵守 1.0 规范，并使用 ISO-8859-1 (Latin-1/West European) 字符集。 下一行是标识此文档是一个 RSS 文档的 RSS 声明（此例是 RSS version 2.0）。 下一行含有 <channel> 元素。此元素用于描述 RSS feed。
<channel> 元素有三个必需的子元素：
<title> - 定义频道的标题。（比如 w3school 首页）
<link> - 定义到达频道的超链接。（比如 www.w3school.com.cn）
<description> - 描述此频道（比如免费的网站建设教程）
每个 <channel> 元素可拥有一个或多个 <item> 元素。
每个 <item> 元素可定义 RSS feed 中的一篇文章或 "story"。
<item> 元素拥有三个必需的子元素：
<title> - 定义项目的标题。（比如 RSS 教程）
<link> - 定义到达项目的超链接。（比如 http://www.w3school.com.cn/rss）
<description> - 描述此项目（比如 w3school 的 RSS 教程）
最后，后面的两行关闭 <channel> 和 <rss> 元素。
 注释 在 RSS 中书写注释的语法与 HTML 的语法类似： <!-- This is an RSS comment -->
 因为 RSS 也是 XML，请记住： 所有的元素必许拥有关闭标签 元素对大小写敏感 元素必需被正确地嵌套 属性值必须带引号 RSS <channel> 元素可描述 RSS feed。 以下三个元素是必须的子元素: <title> - 定义频道的标题。（比如 w3school 首页）
<link> - 定义到达频道的超链接。（比如 www.w3school.com.cn）
<description> - 描述此频道（比如免费的网站建设教程）
 ELEM Desc <category> 可选的。为 feed 定义所属的一个或多个种类。 <cloud> 可选的。注册进程，以获得 feed 更新的立即通知。 <copyright> 可选。告知版权资料。 <description> 必需的。描述频道。 <docs> 可选的。规定指向当前 RSS 文件所用格式说明的 URL。 <generator> 可选的。规定用于生成 feed 的程序。 <image> 可选的。在聚合器呈现某个 feed 时，显示一个图像。 <language> 可选的。规定编写 feed 所用的语言。 <lastBuildDate> 可选的。定义 feed 内容的最后修改日期。 <link> 必需的。定义指向频道的超链接。 <managingEditor> 可选的。定义 feed 内容编辑的电子邮件地址。 <pubDate> 可选的。为 feed 的内容定义最后发布日期。 <rating> 可选的。feed 的 PICS 级别。 <skipDays> 可选的。规定忽略 feed 更新的天。 <skipHours> 可选的。规定忽略 feed 更新的小时。 <textInput> 可选的。规定应当与 feed 一同显示的文本输入域。 <title> 必需的。定义频道的标题。 <ttl> 可选的。指定从 feed 源更新此 feed 之前，feed 可被缓存的分钟数。 <webMaster> 可选的。定义此 feed 的 web 管理员的电子邮件地址。 RSS <item> 元素可定义 RSS feed 中的一篇文章或 “story”。 以下三个元素是必须的子元素: <title> - 定义频道的标题。（比如 w3school 首页）
<link> - 定义到达频道的超链接。（比如 www.w3school.com.cn）
<description> - 描述此频道（比如免费的网站建设教程）
 ELEM Desc <author> 可选的。规定项目作者的电子邮件地址。 <category> 可选的。定义项目所属的一个或多个类别。 <comments> 可选的。允许项目连接到有关此项目的注释（文件）。 <description> 必需的。描述此项目。 <enclosure> 可选的。允许将一个媒体文件导入一个项中。 <guid> 可选的。为项目定义一个唯一的标识符。 <link> 必需的。定义指向此项目的超链接。 <pubDate> 可选的。定义此项目的最后发布日期。 <source> 可选的。为此项目指定一个第三方来源。 <title> 必需的。定义此项目的标题。</description><link>https://houbb.github.io/2017/02/11/rss</link><article>侯宾宾</article><guid/><pubDate>2017-02-11</pubDate></item><item><title>Gitlab</title><description>Gitlab 侯宾宾      gitlab      Tool      2017-01-13 Gitlab Quick Start 个人是个开源主义者。但是有时不是涉及到个人利益而是公司利益时。。。还是选择Gitlab放一下自己写的小DEMO。 以后将使用自己搭建的 phabricator。 Gitlab GitLab unifies issues, code review, CI and CD into a single UI. 顺便一提,此作者项目管理方面还不错。有时间可以看看。 manage blog Group & Project & User 也可以直接使用 github 通过 OAuth 登录。很方便。 Quick Start New Group https://gitlab.com/think-less
 New Project https://gitlab.com/think-less/script-generator.git
 Add SSH $ pwd
/Users/houbinbin/.ssh
$ ls
id_rsa		id_rsa.pub	known_hosts
 upload id_rsa.pub will be okay. Usage Command line instructions Git global setup git config --global user.name "houbb"
git config --global user.email "1060732496@qq.com"
 Create a new repository git clone git@gitlab.com:think-less/script-generator.git
cd script-generator
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master
 Existing folder or Git repository cd existing_folder
git init
git remote add origin git@gitlab.com:think-less/script-generator.git
git add .
git commit
git push -u origin master</description><link>https://houbb.github.io/2017/01/13/gitlab</link><article>侯宾宾</article><guid/><pubDate>2017-01-13</pubDate></item><item><title>FTP</title><description>FTP 侯宾宾      ftp      Tool      2016-12-31 FTP Ftp Java code FTP 环境: Ubuntu 14.04 blog zh_CN ubuntu14.04 Install 全新安装：apt-get install vsftpd
重新安装:apt-get --reinstall install vsftpd
卸载并清除配置文件：apt-get --purge remove vsftpd
 Start & Restart $   service vsftpd start
$   service vsftpd restart
 注意: 网上文章很多有提及/etc/init.d/vsftpd start 之类的启动方式。但是这个目录下我不存在 vsftpd. 这个目录确实有: /etc/init/vsftpd.conf vsftpd 已經進化為 Upstart job
設定檔放在
/etc/init/vsftpd.conf
 Create ftp user 1.此用户只是用来使用ftp服务的 2.此用户不可登录服务器 3.此用户不能访问ftp指定文件夹之外的文件 (1) 创建一个用户ftp0 useradd -d /home/ftp0 -m ftp0
 (2) 修改ftp0的密码 passwd ftp0
 Config /etc/vsftpd.conf anonymous_enable=NO         # 不允许匿名访问
write_enable=YES            # 允许写
local_enable=YES            # 允许本地主机访问
chroot_local_user=YES       # 只能访问自身的目录，此处有坑，需加上下面一行
 报错误信息: “500 OOPS: vsftpd: refusing to run with writable root inside chroot()”
 从2.3.5之后，vsftpd增强了安全检查，如果用户被限定在了其主目录下，则该用户的主目录不能再具有写权限了！如果检查发现还有写权限，就会报该错误。 (1) 启用了chroot的话，根目录要设置为不可写 chmod a-w /home/ftp0
 (2) 或者添加一句话 allow_writeable_chroot=YES #允许写自身的目录
 可是添加这句话可能会导致服务重启失败。。。 无奈之下。。。chroot_local_user=YES这句话暂时不加。 让用户不能登录 $   usermod -s /sbin/nologin ftp0
 after all these, restart the ftp service: # service vsftpd restart
vsftpd stop/waiting
vsftpd start/pre-start, process 10305
# service vsftpd status
vsftpd start/running, process 10305
 Test # ftp
ftp> open 192.168.2.108
Connected to 192.168.2.108.
220 (vsFTPd 3.0.2)
Name (192.168.2.108:hbb): ftp0
331 Please specify the password.
Password:
530 Login incorrect.
Login failed.
 需要 vi /etc/shells, 最后一行添加: /sbin/nologin
 重新测试: # ftp
ftp> open 192.168.2.108
Connected to 192.168.2.108.
220 (vsFTPd 3.0.2)
Name (192.168.2.108:hbb): ftp0
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
 21 端口查看: netstat -npltu | grep 21
tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN      11398/vsftpd
 Ftp Java code Java 测试代码 package com.ryo.ftp;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPReply;

import java.io.File;
import java.io.FileInputStream;

/** * @author houbinbin * @on 17/1/1 */
public class FTPTest {

    private FTPClient ftp;

    /** * @param path 上传到ftp服务器哪个路径下 * @param addr 地址 * @param port 端口号 * @param username 用户名 * @param password 密码 * @return * @throws Exception */
    private boolean connect(String path, String addr, int port, String username, String password) throws Exception {
        boolean result = false;
        ftp = new FTPClient();
        int reply;
        ftp.connect(addr, port);
        ftp.login(username, password);
        ftp.setFileType(FTPClient.BINARY_FILE_TYPE);
        reply = ftp.getReplyCode();
        if (!FTPReply.isPositiveCompletion(reply)) {
            ftp.disconnect();
            return result;
        }
        ftp.changeWorkingDirectory(path);
        result = true;
        return result;
    }

    /** * @param file 上传的文件或文件夹 * @throws Exception */
    private void upload(File file) throws Exception {
        if (file.isDirectory()) {
            ftp.makeDirectory(file.getName());
            ftp.changeWorkingDirectory(file.getName());
            String[] files = file.list();
            for (int i = 0; i < files.length; i++) {
                File file1 = new File(file.getPath() + "\\" + files[i]);
                if (file1.isDirectory()) {
                    upload(file1);
                    ftp.changeToParentDirectory();
                } else {
                    File file2 = new File(file.getPath() + "\\" + files[i]);
                    FileInputStream input = new FileInputStream(file2);
                    ftp.storeFile(file2.getName(), input);
                    input.close();
                }
            }
        } else {
            File file2 = new File(file.getPath());
            FileInputStream input = new FileInputStream(file2);
            ftp.storeFile(file2.getName(), input);
            input.close();
        }
    }

    //测试即使指定其他用户的文件夹,还要没有写的权限也无法上传。
    public static void main(String[] args) throws Exception {
        FTPTest t = new FTPTest();
        t.connect("/home/ftp0/", "192.168.2.108", 21, "ftp0", "123456");
        File file = new File("/Users/houbinbin/Downloads/ftptest.txt");
        t.upload(file);
    }

}</description><link>https://houbb.github.io/2016/12/31/ftp</link><article>侯宾宾</article><guid/><pubDate>2016-12-31</pubDate></item><item><title>Apache2</title><description>Apache2 侯宾宾      apache      Tool      2016-12-31 Apache2 Tips Apache2 这个故事还是先从删除讲起。 remove blog zh_CN restart 1、Remove apache $   sudo apt-get remove apache2
$   sudo apt-get --purge remove apache2
$   sudo apt-get autoremove apache2
 2、Remove config files $   sudo find /etc -name "*apache*" |xargs  rm -rf
$   sudo rm -rf /var/www
$   sudo rm -rf /etc/libapache2-mod-jk
$   sudo rm -rf /etc/init.d/apache2
$   sudo rm -rf /etc/apache2
 3、Remove relative dpkg -l |grep apache2|awk '{print $2}'|xargs dpkg -P
 Purge is required to remove all the config files - if you delete the config files but only remove the package, then this is remembered & missing config files are not reinstalled by default. 4、Reinstall apache $   sudo apt-get install apache2
 5、Usage 重启建议使用 root 重启,否则有事会重启失败。 产生的启动和停止文件是：/etc/init.d/apache2

启动：sudo apache2ctl -k start

停止：sudo apache2ctl -k stop

重新启动：sudo apache2ctl -k restart

配置文件保存在：/etc/apache2
 install zh_CN Tips error $   sudo service apache2 restart
 get an error: Job for apache2.service failed. See "systemctl status apache2.service" and "journalctl -xe" for details.
 use $   apache2ctl configtest
 It will highlight the error. Correct it. rewrite mode rewrite zh_CN $ sudo a2enmod rewrite
 error log /var/log/apache2/error.log</description><link>https://houbb.github.io/2016/12/31/apache2</link><article>侯宾宾</article><guid/><pubDate>2016-12-31</pubDate></item><item><title>Nginx</title><description>Nginx 侯宾宾      nginx      Tool      2016-12-22 nginx Nginx in Ubuntu nginx nginx is an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server, originally written by Igor Sysoev. tengine zh_CN 学习则以 tengine 为主。 Nginx in Ubuntu blog zh_CN update $   sudo apt-get update
 Install openssl $   sudo apt-get install openssl
 Install PCRE $   sudo apt-get install libpcre3 libpcre3-dev
 Install zlib $   sudo apt-get install zlib1g-dev
 Download nginx $   sudo apt-get install nginx

$   service nginx
 config nginx 如果你安装了 Apache ，并且此时 Apache 在运行，那么请先修改一下配置文件 sudo vim /etc/nginx/sites-available/default
 修改如下: server {
  #修改这里 我将 80 改为 88
 listen 88 default_server;
  #还有这里 同样改为你想要的监听端口
 listen [::]:88 default_server ipv6only=on;
 Usage # nginx -c /etc/nginx/nginx.conf
关闭 nginx

# nginx -s stop
重读配置文件

# nginx -s reload
# pkill -HUP nginx
重新打开日志文件

# nginx -s reopen
# pkill -USR1 nginx
还可以下载 nginx RPM 包中的 /etc/init.d/nginx 文件，修改路径后即可使用：

# service nginx {start|stop|status|restart|reload|configtest|}</description><link>https://houbb.github.io/2016/12/22/nginx</link><article>侯宾宾</article><guid/><pubDate>2016-12-22</pubDate></item><item><title>Swagger</title><description>Swagger 侯宾宾      swagger      Tool      2016-12-22 Swagger With SpringBoot With SpringMvc Swagger Swagger is a powerful open source framework backed by a large ecosystem of tools that helps you design, build, document, and consume your RESTful APIs. With SpringBoot You can get the full project demo from swagger-springboot. springboot-blog zh_CN File Struct may like this: .
|____main
| |____java
| | |____com
| | | |____ryo
| | | | |____Application.java
| | | | |____controller
| | | | | |____HelloWorld.java
| | | | |____Swagger2.java
| |____resources
| | |____application.properties
| | |____log4j2.xml
| | |____README.md

 Create SpringBoot Project->Import Swagger: Import Swagger->Config Swagger: 1、 Create SpringBoot Project Import springboot jars in pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>springboot</artifactId>
    <version>1.0.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>

        <!--spring-boot-->
        <spring-boot.version>1.3.5.RELEASE</spring-boot.version>

        <log4j.version>2.6</log4j.version>
    </properties>

    <dependencies>
        <!--spring-boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!--log4j-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
 2、Import swagger jars <dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-swagger2</artifactId>
    <version>2.2.2</version>
</dependency>
<dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-swagger-ui</artifactId>
    <version>2.2.2</version>
</dependency>
 3、Config and use Application.java package com.ryo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/** * Created by houbinbin on 16/6/5. */
@SpringBootApplication
public class Application {
    public static void main(String args[]) {
        SpringApplication.run(Application.class, args);
    }
}
 HelloWorld.java package com.ryo.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/** * Created by houbinbin on 16/6/19. */
@RestController
@RequestMapping("hello")
@Api(value = "hello", description = "spring boot 初步测试")
public class HelloWorld {

    @ApiOperation(value="hello", notes="初步使用啦啦啦")
    @RequestMapping(method = RequestMethod.GET)
    public String hello() {
        return "SUCCESS";
    }
}
 application.properties server.port=180080
 4、 Start the application Maven Projects->${project}->Plugins->spring-boot->spring-boot:run  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2016-12-25 15:29:50.066  INFO 4095 --- [           main] com.ryo.Application                      : Starting Application on houbinbindeMacBook-Pro.local with PID 4095 (/Users/houbinbin/IT/code/springboot/target/classes started by houbinbin in /Users/houbinbin/IT/code/springboot)
2016-12-25 15:29:50.069  INFO 4095 --- [           main] com.ryo.Application                      : No active profile set, falling back to default profiles: default
...
2016-12-25 15:29:52.688  INFO 4095 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 18080 (http)
2016-12-25 15:29:52.692  INFO 4095 --- [           main] com.ryo.Application                      : Started Application in 3.094 seconds (JVM running for 5.262)
 Visit in the browser With SpringMvc You can get the full project demo from swagger-springmvc. blog zh_CN blog zh_CN The file struct may like this: .
|____main
| |____java
| | |____com
| | | |____ryo
| | | | |____swagger
| | | | | |____demo
| | | | | | |____controller
| | | | | | | |____UserController.java
| | | | | | |____model
| | | | | | | |____User.java
| | | | | | |____MySwaggerConfig.java
| | | | | | |____vo
| | | | | | | |____Result.java
| |____resources
| | |____app-beans.xml
| | |____app-mvc.xml
| | |____app.xml
| | |____log4j2.xml
| |____webapp
| | |____WEB-INF
| | | |____web.xml
|____test
| |____java
 1、 pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>swagger-demo</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>

        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <plugin-maven-surefire.version>2.18.1</plugin-maven-surefire.version>
        <plugin-maven-compiler.version>3.3</plugin-maven-compiler.version>

        <spring.version>4.2.6.RELEASE</spring.version>
        <servlet.version>3.1.0</servlet.version>
        <jackson.version>2.4.4</jackson.version>
        <swagger2.version>2.5.0</swagger2.version>

        <log4j2.version>2.6</log4j2.version>
    </properties>

    <dependencies>
        <!--spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--web-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--============= springfox-swagger smallest dependency start ==========-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!--============= springfox-swagger smallest dependency end ==========-->

        <!--log4j2-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.name}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat.version}</version>
                <configuration>
                    <port>18080</port>
                    <path>/</path>
                    <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin-maven-surefire.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin-maven-compiler.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
 2、Java files Result.java public class Result implements Serializable {
    // 0成功
    private int code;
    // 返回消息，成功为“success”，失败为具体失败信息
    private String message;
    // 返回数据
    private Object data;

    //...
}
 User.java public class User {
    private int userId;
    private String name;
    private int age;
    //...
}
 UserController.java @Api(value = "User控制器")
@Controller
@RequestMapping("/user")
public class UserController {

    @ApiOperation(value = "根据用户id查询用户信息", httpMethod = "GET", produces = "application/json")
    @ApiResponse(code = 200, message = "success", response = Result.class)
    @ResponseBody
    @RequestMapping(value = "queryUserById", method = RequestMethod.GET, produces = "application/json")
    public Result queryUserById(@ApiParam(name = "userId", required = true, value = "用户Id") @RequestParam("userId") int userId, HttpServletRequest request) {
        User user = new User(userId, "haoyifen", 24);
        Result result = new Result();
        result.setCode(0);
        result.setData(user);
        result.setMessage("success");
        return result;
    }
}
 MySwaggerConfig.java Simplest: @Configuration
@EnableSwagger2
public class MySwaggerConfig {
}
 3、Resources app-beans.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="false">

    <bean class="com.ryo.swagger.demo.MySwaggerConfig"/>

</beans>
 app-mvc.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/mvc
	         http://www.springframework.org/schema/mvc/spring-mvc.xsd
	         http://www.springframework.org/schema/context
	         http://www.springframework.org/schema/context/spring-context.xsd">


    <mvc:annotation-driven/>
    <context:component-scan base-package="com.ryo.swagger.demo"/>
    <mvc:default-servlet-handler/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".ftl"/>
    </bean>

</beans>
 app.xml <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="app-beans.xml"/>
    <import resource="app-mvc.xml"/>

</beans>
 log4j2.xml <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="off" monitorInterval="1800">
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t] %logger{36}:%L - %msg%n"/>
        </Console>
    </Appenders>

    <Loggers>
        <Root level="INFO">
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
 ```web.xml`` <?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <!--装入spring配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:app.xml</param-value>
    </context-param>

    <!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- 以Listener方式启动spring -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!--编码过滤器-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 前端控制器的配置 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value></param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
 4、Start and visit</description><link>https://houbb.github.io/2016/12/22/swagger</link><article>侯宾宾</article><guid/><pubDate>2016-12-22</pubDate></item><item><title>Cat</title><description>Cat 侯宾宾      cat      Tool      2016-12-16 Cat 消息树 完整的消息树 可视化消息树 分布式消息树 Quick Start 部署埋点 客户端集成 Cat Cat 基于Java开发的实时应用监控平台，包括实时应用监控，业务监控 cat zh_CN CAT支持的监控消息类型包括： Transaction 适合记录跨越系统边界的程序访问行为,比如远程调用，数据库调用，也适合执行时间较长的业务逻辑监控，Transaction用来记录一段代码的执行时间和次数。 Event 用来记录一件事发生的次数，比如记录系统异常，它和transaction相比缺少了时间的统计，开销比transaction要小。 Heartbeat 表示程序内定期产生的统计信息, 如CPU%, MEM%, 连接池状态, 系统负载等。 Metric 用于记录业务指标、指标可能包含对一个指标记录次数、记录平均值、记录总和，业务指标最低统计粒度为1分钟。 Trace 用于记录基本的trace信息，类似于log4j的info信息，这些信息仅用于查看一些相关信息 消息树 CAT监控系统将每次URL、Service的请求内部执行情况都封装为一个完整的消息树、消息树可能包括Transaction、Event、Heartbeat、Metric和Trace信息。 完整的消息树 可视化消息树 分布式消息树 【一台机器调用另外一台机器】 Quick Start 1、 Download $   git clone https://github.com/dianping/cat
 2、 Install $   mvn clean install -DskipTests
 3、Config cat env $   mvn cat:install

[INFO] Preparing Cat environment...
Please input jdbc url:[jdbc:mysql://127.0.0.1:3306]jdbc:mysql://127.0.0.1:3306
Please input username:root
Please input password:[]123456
[INFO] jdbc.url: jdbc:mysql://127.0.0.1:3306
[INFO] jdbc.user: root
[INFO] jdbc.password: 123456
[INFO] Connecting to database(jdbc:mysql://127.0.0.1:3306) ...
[INFO] Connected to database(jdbc:mysql://127.0.0.1:3306)
[INFO] Creating database(cat) ...
[INFO] Database(cat) is created successfully
[INFO] Creating tables ...
[INFO] Tables are created successfully
 4、 privilege of /data/appdatas/cat and /data/applogs/cat /data/appdatas/cat 目录是存放cat-home 配置文件的相对地址 /data/applogs/cat 目录是存放cat-home 的log日志 Error [ERROR] Don't have privilege to read/write /data/appdatas/cat, please  manually make this directory
 create and set privilege $   sudo mkdir /data/appdatas/cat
$   sudo mkdir /data/applogs/cat
$   sudo chmod 777 /data/appdatas/cat
$   sudo chmod 777 /data/applogs/cat
 5、 Re-Config cat env houbinbindeMacBook-Pro:cat houbinbin$ pwd
/Users/houbinbin/it/code/cat
[INFO] Preparing Cat environment...
Please input jdbc url:[jdbc:mysql://127.0.0.1:3306]jdbc:mysql://127.0.0.1:3306
Please input username:root
Please input password:[]123456
[INFO] jdbc.url: jdbc:mysql://127.0.0.1:3306
[INFO] jdbc.user: root
[INFO] jdbc.password: 123456
[INFO] Connecting to database(jdbc:mysql://127.0.0.1:3306) ...
[INFO] Connected to database(jdbc:mysql://127.0.0.1:3306)
[INFO] Creating database(cat) ...
[INFO] Database 'cat' already exists, drop it first...
[INFO] Database 'cat' has dropped
[INFO] Database(cat) is created successfully
[INFO] Creating tables ...
[INFO] Tables are created successfully
[INFO] Generating the configuration files to /data/appdatas/cat ...
[INFO] Configuration files are generated successfully
[INFO] Preparing Cat environment ... DONE
[INFO] Use following command line to start local Cat server:
[INFO]    cd cat-home; mvn jetty:run
[INFO] Please open http://localhost:2281/cat in your browser
 6、 Run cat $ cd cat-home
$ mvn jetty:run
 Visit Input http://localhost:2281/cat in your browser: 默认用户名密码: root/123456
 部署埋点 blog 注意!!!: 必须使用JDK1.7, JDK1.8 虽然可以跑。但是最后会报错。 再次提醒：如果安装了多个版本的jdk，编译前先将jdk版本切换到jdk 1.7(包括编译成功后，运行时也要jdk 1.7环境)　 支持JDK1.8 文档见: (【文档】-》【部署文档】) http://localhost:2281/cat/r/home?op=view&docName=deploy
 blog zh_CN blog zh_CN 为了测试,暂时本地简单启动一个服务, 假设为我们的app(localhost:18080)(ps:后来发现8081和nexus冲突,就改了下端口。)。 1) 设置cat服务/data/appdatas/cat/client.xml 暂时本地做测试。不做集成。 <?xml version="1.0" encoding="utf-8"?>

<config mode="client" xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:noNamespaceSchemaLocation="config.xsd">
        <servers>
                <!-- Local mode for development -->
                <server ip="127.0.0.1" port="2280" http-port="2281" />
        </servers>
</config>
 2) 配置服务端的数据库配置datasources.xml，文件路径/data/appdatas/cat/datasources.xml,需要替换对应的线上配置 上面的对应cat服务数据库。下面的为我们的app数据库。 <?xml version="1.0" encoding="utf-8"?>

<data-sources>
        <data-source id="cat">
                <maximum-pool-size>3</maximum-pool-size>
                <connection-timeout>1s</connection-timeout>
                <idle-timeout>10m</idle-timeout>
                <statement-cache-size>1000</statement-cache-size>
                <properties>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url><![CDATA[jdbc:mysql://127.0.0.1:3306/cat]]></url>
                        <user>root</user>
                        <password>123456</password>
                        <connectionProperties><![CDATA[useUnicode=true&autoReconnect=true]]></connectionProperties>
                </properties>
        </data-source>
        <data-source id="app">
                <maximum-pool-size>3</maximum-pool-size>
                <connection-timeout>1s</connection-timeout>
                <idle-timeout>10m</idle-timeout>
                <statement-cache-size>1000</statement-cache-size>
                <properties>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url><![CDATA[jdbc:mysql://127.0.0.1:3306/blog]]></url>
                        <user>root</user>
                        <password>123456</password>
                        <connectionProperties><![CDATA[useUnicode=true&autoReconnect=true]]></connectionProperties>
                </properties>
        </data-source>
</data-sources>
 3) 配置服务端的server.xml，文件路径/data/appdatas/cat/server.xml 简单配置如下: <?xml version="1.0" encoding="utf-8"?>

<!-- Configuration for development environment-->
<config local-mode="false" hdfs-machine="false" job-machine="true" alert-machine="false">

        <storage  local-base-dir="/data/appdatas/cat/bucket/" max-hdfs-storage-time="15" local-report-storage-time="7" local-logivew-storage-time="7">

        </storage>

        <console default-domain="Cat" show-cat-domain="true">
                <remote-servers>127.0.0.1:2281</remote-servers>
        </console>

</config>
 4) 路由配置, 默认用户 catadmin/catadmin http://127.0.0.1:2281/cat/s/config?op=routerConfigUpdate
 默认进入【全局告警配置】-》【客户端路由】,修改内容如下: <?xml version="1.0" encoding="utf-8"?>
<router-config backup-server="127.0.0.1" backup-server-port="2280">
   <default-server id="127.0.0.1" weight="1.0" port="2280" enable="true"/>
</router-config>
 客户端集成 项目中需要引入 cat-client-XXX.jar and cat-core-XXX.jar。这两个jar包如果想使用maven怎么得到呢? 本地使用: cat 项目直接 mvn clean install 会将 jar 安装到本地。 将cat视为自己的项目,直接打包到nexus上。 支持广泛使用: jar上传到 nexus 上。 blog pom.xml 添加: <dependency>
  <groupId>com.dianping.cat</groupId>
  <artifactId>cat-core</artifactId>
  <version>1.4.0</version>
</dependency>

<dependency>
  <groupId>com.dianping.cat</groupId>
  <artifactId>cat-client</artifactId>
  <version>1.4.0</version>
</dependency>
 1) Web.xml中新增filter 注：如果项目是对外不提供URL访问，比如GroupService，仅仅提供Pigeon服务，则不需要。 Filter放在url-rewrite-filter 之后的第一个，如果不是会导致URL的个数无限多，比如search/1/2,search/2/3等等，无法监控，后端存储压力也变大。 暂时跳过。 <filter>
    <filter-name>cat-filter</filter-name>
    <filter-class>com.dianping.cat.servlet.CatFilter</filter-class>
</filter>
<filter-mapping>
    <filter-name>cat-filter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
 2) 设置domain (cat-core 1.1.3之后版本，优先读取A配置) A) 在资源文件中新建app.properties文件 在resources资源文件META-INF下，注意是src/main/resources/META-INF/文件夹， 而不是webapps下的那个META-INF,添加app.properties，加上domain配置，如： app.name=blog
 B) 在资源文件中新建client.xml文件 在resources资源文件META-INF下，新建cat文件夹，注意是src/main/resources/META-INF/cat/client.xml文件， 而不是webapps下的那个META-INF,domain id表示项目名称此处为CMDB申请的名字，比如 <config mode="client">
    <domain id="tuangou-web"/>
</config>
 3) /data/appdatas/cat/client.xml <?xml version="1.0" encoding="utf-8"?>

<config mode="client" xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:noNamespaceSchemaLocation="config.xsd">
        <servers>
                <!-- Local mode for development -->
                <server ip="127.0.0.1" port="2280" http-port="2281" />

                <domain id="blog" enabled="true"/>
        </servers>
</config>
 4) 与 Log4j2 集成 log4j2.xml <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="off" monitorInterval="1800">
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t] %logger{36}:%L - %msg%n"/>
        </Console>

        <!--cat log-->
        <appender name="CatAppender" class="com.dianping.cat.log4j.CatAppender"/>
    </Appenders>

    <Loggers>
        <Root level="INFO">
            <AppenderRef ref="CatAppender"/>
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
 Error 启动后一直报错如下: java.lang.RuntimeException: Unable to get instance of Logger, please make sure the environment was setup correctly!
    org.unidal.initialization.DefaultModuleContext.<init>(DefaultModuleContext.java:28)
    com.dianping.cat.Cat.initialize(Cat.java:91)
    com.dianping.cat.Cat.initialize(Cat.java:87)
    com.dianping.cat.Cat.checkAndInitialize(Cat.java:45)
    com.dianping.cat.Cat.getManager(Cat.java:72)
    com.dianping.cat.servlet.CatFilter$CatHandler$1.handle(CatFilter.java:104)
    com.dianping.cat.servlet.CatFilter$Context.handle(CatFilter.java:406)
    com.dianping.cat.servlet.CatFilter.doFilter(CatFilter.java:53)
root cause
 根据如下可知,应该是mvn-tomcat-plugin造成的冲突,就改成了jetty插件。亲测可行。 ISSUE 699</description><link>https://houbb.github.io/2016/12/16/cat</link><article>侯宾宾</article><guid/><pubDate>2016-12-16</pubDate></item><item><title>Port</title><description>Port 侯宾宾      port      Tool      2016-11-29 Port 端口占用情况 Port 各端口分配, 个人整理设计。 Port Server Default port 80 Apache 80 1234 Phabricator   2181 zookeeper 2181 2280 CAT server 2280 2281 CAT tomcat 2281 4000 jekyll 4000 6379 Redis 6379 8081 Sonatype Nexus 8081 8888 tomcat 8080 9000 SonarQube 9000 5601 kibana 5601 9200 elasticsearch 9200 7000 logstash 7000 端口占用情况 lsof -i:XXX 查看 sudo netstat -apn | grep XXX 查看 ps -aux | grep XXX 详细信息 ps -ef | grep XXX 根据分类条件查询信息</description><link>https://houbb.github.io/2016/11/29/port</link><article>侯宾宾</article><guid/><pubDate>2016-11-29</pubDate></item><item><title>Fitnesse</title><description>Fitnesse 侯宾宾      fitnesse      Tools      2016-11-07 Fitnesse Hello World Fitnesse The fully integrated standalone wiki and acceptance testing framework fitnesse Hello World intro-demo zh_CN Download the fitnesse-standalone.jar Start start fitnesse on port 7979 D:\Tools\fitnesse>java -jar fitnesse-standalone.jar -p 7979
十一月 10, 2016 3:36:46 下午 fitnesse.ConfigurationParameter loadProperties
信息: No configuration file found (D:\Tools\fitnesse\plugins.properties)
Bootstrapping FitNesse, the fully integrated standalone wiki and acceptance testing framework.
root page: fitnesse.wiki.fs.WikiFilePage: FitNesseRoot
logger: none
authenticator: fitnesse.authentication.PromiscuousAuthenticator
page factory: fitnesse.html.template.PageFactory
page theme: bootstrap
Unpacking new version of FitNesse resources. Please be patient...
**********************************************************
Files have been updated to a new version.
Please read the release notes on
http://localhost:7979/FitNesse.ReleaseNotes
to find out about the new features and fixes.
**********************************************************
Starting FitNesse on port: 7979
 visit localhost:7979
 Edit page 根据第一句提示，直接点击【Edit】，然后在最后添加页面名称如【MyFirstPage】后保存。命名规则WikiWord有说明。 返回即可看见添加的页面。 Test in Mac Start houbinbindeMacBook-Pro:fitnesse houbinbin$ ls
fitnesse-standalone.jar
houbinbindeMacBook-Pro:fitnesse houbinbin$ pwd
/Users/houbinbin/it/tools/fitnesse
houbinbindeMacBook-Pro:fitnesse houbinbin$ java -jar fitnesse-standalone.jar -p 7979
十一月 10, 2016 10:17:24 下午 fitnesse.ConfigurationParameter loadProperties
信息: No configuration file found (/Users/houbinbin/IT/tools/fitnesse/plugins.properties)
Bootstrapping FitNesse, the fully integrated standalone wiki and acceptance testing framework.
root page: fitnesse.wiki.fs.WikiFilePage: FitNesseRoot
logger: none
authenticator: fitnesse.authentication.PromiscuousAuthenticator
page factory: fitnesse.html.template.PageFactory
page theme: bootstrap
Unpacking new version of FitNesse resources. Please be patient...
**********************************************************
Files have been updated to a new version.
Please read the release notes on
http://localhost:7979/FitNesse.ReleaseNotes
to find out about the new features and fixes.
**********************************************************
Starting FitNesse on port: 7979

 Add Page MyFirstPage 1、Set the type of page into test in tools/properties 2、Edit page, add content like this: !define TEST_SYSTEM {slim}
!path /Users/houbinbin/IT/tools/fitnesse/fitnesse-standalone.jar
!path /Users/houbinbin/it/tools/fitnesse/
!|HelloWorld|
|sayHello?|
|Hello|
 内容详解: Line 1: 使用FitNesse的slim模块，也就是使用网页的形式描述测试用例 Line 2: fitnesse-standalone.jar jar文件路径。 Line 3: HelloWorld.class class文件存放路径。 HelloWorld.java public class HelloWorld {
  public String sayHello(){
    return "Hello";
  }
}
 通过命令,编译后获得 $   javac HelloWorld.java
 Line 4: 引入HelloWorld类 Line 5: 方法名称,带有?说明此方法为返回值,Line 6 为对应的返回值。如果只是age,则会调用对应setAge() 方法,下一行为设置的值。 Test 点击页面【Test】,结果如下 Test Pages: 1 right, 0 wrong, 0 ignored, 0 exceptions     Assertions: 1 right, 0 wrong, 0 ignored, 0 exceptions (0.530 seconds)</description><link>https://houbb.github.io/2016/11/07/fitnesse</link><article>侯宾宾</article><guid/><pubDate>2016-11-07</pubDate></item><item><title>YAML</title><description>YAML 侯宾宾      yaml      Config      2016-10-26 YAML Object Array Primitive Type String Quote YAML YAML is a human friendly data serialization standard for all programming languages. zh_cn 大小写敏感 使用缩进表示层级关系 缩进时不允许使用Tab键，只允许使用空格。 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可 # 表示注释，从这个字符一直到行尾，都会被解析器忽略 Test Object Use : to split, right side must has blank. name: ryo
 in js: { name: 'ryo' }
 Or like this person: {name: ryo, age: 21}
 in js: { person: { name: 'ryo', age: 21 } }
 Array Start with -, like this - apple
- box
- cat
- dog
 in js: [ 'apple', 'box', 'cat', 'dog' ]
 The sub-member of array can sign like this -
  - apple
  - box
  - cat
 in js: [ [ 'apple', 'box', 'cat' ] ]
 Inline nation array: [apple, box]
 in js: { array: [ 'apple', 'box' ] }
 Multi use array and object: names:
 - Ryo
 - Kyo
 - May
animations:
 - Key: Kanon
 - Key: ReWrite
 - Key: CLANNAD
 in js: { names: [ 'Ryo', 'Kyo', 'May' ],
  animations: [ { Key: 'Kanon' }, { Key: 'ReWrite' }, { Key: 'CLANNAD' } ] }
 Primitive Type Number age: 12
 in js: { age: 12 }
 Bool Use true or false isTrue: false
 in js: { isTrue: false }
 Null null use ~ to express memory: ~
 in js: { memory: null }
 Time time use ISO8601 type: time: 2016-10-26t21:59:43.10-05:00
 in js: { time: Thu Oct 27 2016 10:59:43 GMT+0800 (CST) }
 Date date use multi iso8601 year, month, day date: 1970-01-01
 in js: { date: Thu Jan 01 1970 08:00:00 GMT+0800 (CST) }
 YMAL can use !! to force the type name: !!str ryo
age: !!int '56'
 in js: { name: 'ryo', age: 56 }
 String String default is no need use `` str: this is a string demo
 in js: { str: 'this is a string demo' }
 If there has space or special word in your string, use ’‘ or ”“ name: "hou: ryo"
 in js: { name: 'hou: ryo' }
 The diff between ’‘ and ”“ is: special word in ’‘ will be transfer, but in ”“ will not double quote: "long \n long story"
single quote: 'long \n long story'
 in js: { 'double quote': 'long \n long story',
  'single quote': 'long \\n long story' }
 单引号之中如果还有单引号，必须连续使用两个单引号转义。 name: 'mary''s song'
 in js: { name: 'mary\'s song' }
 字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格 long string
 a
 ha
 ha
 in js: 'long string a ha ha'
 多行字符串可以使用|保留换行符，也可以使用>折叠换行 this: |
 angle
 beats
that: >
 little
 busters
 in js: { this: 'angle\nbeats\n', that: 'little busters\n' }
 +表示保留文字块末尾的换行，-表示删除字符串末尾的换行 one: |
 Spring

two: |+
 Summer


three: |-
 Autumn

 in js: { one: 'Spring\n', two: 'Summer\n\n\n', three: 'Autumn' }
 String can insert HTML string with html: |

 <p class="red">
     red
 </p>
 in js: { 'string with html': '\n<p class="red">\n red\n</p>\n' }
 Quote You can use like this: Author: &author
  name: ryo
  age: 11

Blog:
  info: learn note
  <<: *author

Artile:
  info: sth just like
  <<: *author
 in js: { Author: { name: 'ryo', age: 11 },
  Blog: { info: 'learn note', name: 'ryo', age: 11 },
  Artile: { info: 'sth just like', name: 'ryo', age: 11 } }</description><link>https://houbb.github.io/2016/10/26/yaml</link><article>侯宾宾</article><guid/><pubDate>2016-10-26</pubDate></item><item><title>Rancher</title><description>Rancher 侯宾宾      rancher      Tools      2016-10-26 Rancher Quick Start Rancher Rancher is an open source software platform that enables organizations to run containers in production. With Rancher, organizations no longer have to build a container services platform from scratch using a distinct set of open source technologies. Rancher supplies the entire software stack needed to manage containers in production. Quick Start Env Prepare->Install: Install->Show Log: Show Log->Visit: Env Prepare Provision a Linux host with 64-bit Ubuntu 16.04, which must have a kernel of 3.10+. You can use your laptop, a virtual machine, or a physical server. Please make sure the Linux host has at least 1GB memory. Install Docker onto the host. Install Rancher sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server
 it will download what it need, just wait…(^_^) Unable to find image 'rancher/server:latest' locally


latest: Pulling from rancher/server

96c6a1f3c3b0: Pull complete
ed40d4bcb313: Pull complete
b171f9dbc13b: Pull complete
ccfc4df4fbba: Pull complete
9e4d5a1238bb: Downloading [====================>                              ] 51.36 MB/126.7 MB
f986ba0d224d: Download complete
303d9649bb89: Download complete
56825bfb5bb7: Download complete
86a35696481e: Download complete
eb2848176ff4: Download complete
fabbcc718243: Download complete
35489637da84: Download complete
5c005e2df0e8: Download complete
64ba16c4c9f4: Downloading [============>                                      ] 23.25 MB/93.9 MB
 many years later… Run the Server houbinbindeMacBook-Pro:~ houbinbin$ sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server
64c8c24bcd22622b309ee086e80f193c9923fbfef42c2245481f19aa3e3b2f08
 see the log sudo docker logs -f 64c8c24bcd22622b309ee086e80f193c9923fbfef42c2245481f19aa3e3b2f08

...
14:53:53.707 [main] INFO  ConsoleStatus - [DONE ] [49188ms] Startup Succeeded, Listening on port 8081
time="2016-10-26T14:53:54Z" level=info msg="Starting websocket proxy. Listening on [:8080], Proxying to cattle API at [localhost:8081], Monitoring parent pid [8]
...
 Visit Enter localhost:8080 in browser, and you may see Get the IP of rancher-server container $   houbinbindeMacBook-Pro:~ houbinbin$ docker inspect --format '' rancher-server

    172.17.0.2
 ADD HOSTS Click Infrastructure, into Hosts page, click Add Host We will only be adding the Rancher server host itself. Click Save. By default, the Custom option will be selected, which provides the Docker command to launch the Rancher agent container. There will also be options for cloud providers, which Rancher uses Docker Machine to launch hosts. 1、Add the IP of rancher-server container in Something else http://172.17.0.2:8080
 2、Copy and run this: sudo docker run -d --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.0.2 http://localhost:8080/v1/scripts/F6FA7D73AD9CEDEFDFFC:1477494000000:sDaoXvLMo7ZYn9rEmf0CLplZ2iI
 and it may like this: Unable to find image 'rancher/agent:v1.0.2' locally
v1.0.2: Pulling from rancher/agent
5a132a7e7af1: Downloading [============================================>      ] 57.85 MB/65.69 MB
fd2731e4c50c: Download complete
28a2f68d1120: Download complete
a3ed95caeb02: Download complete
7fa4fac65171: Downloading [=>                                                 ] 2.162 MB/97.48 MB
33de63de5fdb: Download complete
d00b3b942272: Download complete
 many years later… Error In Mac, may get error like this: Digest: sha256:b0b532d1e891534779d0eb1a01a5717ebfff9ac024db4412ead87d834ba92544
Status: Downloaded newer image for rancher/agent:v1.0.2
88e97942429d406bea7912ecf58f752c3c3e605c8bc1390bc169aaa17c498537
docker: Error response from daemon: Mounts denied:
The path /var/lib/rancher
is not shared from OS X and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> File Sharing.
See https://docs.docker.com/docker-for-mac/osxfs/#namespaces for more info.
...
 Get more from here, we can change the the command like this in Mac sudo docker run -d --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /Users/houbinbin/docker/rancher/var/lib/rancher:/var/lib/rancher rancher/agent:v1.0.2 http://172.17.0.2:8080/v1/scripts/ABD244B661452F490C0E:1477533600000:fD9nnKGL4a15IGh9CDoM14ZLLo4

3bdf3d044694c30923c7b492b1b19f7e0596aa7355bc4b6b04eac99d6c230956
 When you click Close on the Rancher UI, you will be directed back to the Infrastructure -> Hosts view. In a couple of minutes, the host will automatically appear. It may like this: Create a Container through UI 1、Navigate to Stacks, click the Add Stack, provide a name and description. then, click Create 2、Enter into one stack, click Add Service, provide a name and just use default to Create it.</description><link>https://houbb.github.io/2016/10/26/rancher</link><article>侯宾宾</article><guid/><pubDate>2016-10-26</pubDate></item><item><title>Rocketmq</title><description>Rocketmq 侯宾宾      mq      Apache      2016-10-25 Message Queue MQConfig Run demo Quick Start Test In Mac Message Queue 消息队列（Message Queue，简称 MQ）是阿里巴巴集团中间件技术部自主研发的专业消息中间件。产品基于高可用分布式集群技术， 提供消息发布订阅、消息轨迹查询、定时（延时）消息、资源统计、监控报警等一系列消息云服务，是企业级互联网架构的核心产品。 为分布式应用系统提供异步解耦、削峰填谷的能力，同时具备海量消息堆积、高吞吐、可靠重试等互联网应用所需的特性。 mq Active MQ Service->Request MQ Resource: Request MQ Resource->Send Msg By SDK: Send Msg By SDK->Consumer Msg: Active Service 1、 开通服务 阿里云主页-》产品-》互联网中间件-》RocketMQ-》开通 2、 下载demo git clone git@github.com:lollipopjin/Aliware-MQ-demo.git
 3、IDEA 导入项目并添加 maven 支持。 4、管理平台 (1) TOPIC管理-》发布Topic 定义一个topic: MQ_TEST_DEMO_TOPIC 备注: MQ_TEST (2) TOPIC管理-》发布Topic-》申请发布 Producer ID: PID_RYO_MQ_TEST
 (3) TOPIC管理-》发布Topic-》申请订阅 Consumer ID: CID_RYO_MQ_TEST
 MQConfig 创建Access Key-》 (1) AccessKey (2) SecretKey Run demo 将MqConfig.java中数据修改为设置的值。直接运行 main 方法。 Quick Start quick start 需要 64bit OS, best to have Linux/Unix/Mac;
64bit JDK 1.6+;
Maven 3.x
Git
Screen
 JDK houbinbindeMacBook-Pro:aliyun-ons-client-java houbinbin$ java -version
java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
 Download and install Download rocketmq download from this https://github.com/alibaba/RocketMQ/releases, now tag is 3.5.8 $ ls
RocketMQ-3.5.8		RocketMQ-3.5.8.tar.gz
 Install $ pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.5.8

$ bash instal.sh
...
 then we get  To refactor, move this assembly into a child project and use the flag <useAllReactorProjects>true</useAllReactorProjects> in each moduleSet.
[INFO] Building tar: /Users/houbinbin/IT/tools/rocketMQ/RocketMQ-3.5.8/target/alibaba-rocketmq-broker.tar.gz
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] rocketmq-all 3.5.8 ................................. SUCCESS [ 48.565 s]
[INFO] rocketmq-remoting 3.5.8 ............................ SUCCESS [  1.772 s]
[INFO] rocketmq-common 3.5.8 .............................. SUCCESS [  1.348 s]
[INFO] rocketmq-client 3.5.8 .............................. SUCCESS [  1.522 s]
[INFO] rocketmq-store 3.5.8 ............................... SUCCESS [  0.815 s]
[INFO] rocketmq-srvutil 3.5.8 ............................. SUCCESS [  0.139 s]
[INFO] rocketmq-broker 3.5.8 .............................. SUCCESS [  0.951 s]
[INFO] rocketmq-tools 3.5.8 ............................... SUCCESS [  0.889 s]
[INFO] rocketmq-namesrv 3.5.8 ............................. SUCCESS [  0.373 s]
[INFO] rocketmq-example 3.5.8 ............................. SUCCESS [  0.392 s]
[INFO] rocketmq-filtersrv 3.5.8 ........................... SUCCESS [  0.337 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 59.323 s
[INFO] Finished at: 2017-01-02T18:21:01+08:00
[INFO] Final Memory: 52M/1042M
[INFO] ------------------------------------------------------------------------
 环境配置 Make sure the following environment variable is properly setup: JAVA_HOME Now setup ROCKETMQ_HOME environment variable: cd devenv

echo "ROCKETMQ_HOME=`pwd`" >> ~/.bash_profile
 make it work at once: source ~/.bash_profile
 Launch RocketMQ Name Server and Broker 确保在devenv目录下: $ cd bin
$ pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.5.8/devenv/bin
 Start Name Server screen bash mqnamesrv
 现实是可能会遇到这个: $ screen bash mqnamesrv
[screen is terminating]
 screen is terminating 执行以下命令(暂时提权): su
 使用 screen 命令进入, 运行: $   bash mqnamesrv
 then sh-3.2# bash mqnamesrv
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=320m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.
The Name Server boot success. serializeType=JSON
 If you see “The Name Server boot success. serializeType=JSON”, this means name server starts successfully. Press Ctrl + A, then D to detach the session. sh-3.2# screen
[detached]
 Start Broker sh-3.2# screen
sh-3.2# pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.5.8/devenv/bin
sh-3.2# bash mqbroker -n localhost:9876
cp: /var/root/rmq_bk_gc.log: No such file or directory
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=320m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.
Java HotSpot(TM) 64-Bit Server VM warning: Cannot open file /var/root/tmpfs/logs/gc.log due to No such file or directory

The broker[houbinbindeMacBook-Pro.local, 192.168.2.102:10911] boot success. serializeType=JSON and name server is localhost:9876
 If you see output like the following: The broker[lizhanhui-Lenovo, 172.30.30.233:10911] boot success. serializeType=JSON and name server is localhost:9876 your broker then runs successfully. Send & Receive MSG Before sending/receiving messages, we need to tell clients where name servers are located. RocketMQ provides multiple ways to achieve this. For simplicity, we use environment variable NAMESRV_ADDR $   export NAMESRV_ADDR=localhost:9876
 Test In Mac 3.4.6 demo zh_CN blog zh_CN rocketmq console zh_CN 分布式 Download download from this https://github.com/alibaba/RocketMQ/archive/v3.4.6.tar.gz, now tag is 3.4.6 $ pwd
/Users/houbinbin/it/tools/rocketMQ
$ ls
RocketMQ-3.4.6		RocketMQ-3.4.6.tar.gz
 Install $ pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.4.6
$ bash install.sh

...
 添加可执行权限 $   pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.4.6/bin
$ chmod +x mqadmin mqbroker mqfiltersrv mqshutdown  mqnamesrv
 NameServer 默认端口为9876, 进入 devenv/bin 目录 $ pwd
/Users/houbinbin/it/tools/rocketMQ/RocketMQ-3.4.6/devenv/bin

$   sudo nohup sh mqnamesrv > ~/logs/ons.log &
 log将打印在~/logs/ons.log 不出意外的话,应该会报错如下: ERROR: Please set the JAVA_HOME variable in your environment, We need java(x64)! !!
 mac error 这个是阿里内部直接定义的,可以将 runserver.sh 中的以下内容注释掉(前提是确实正确的配置了JDK),并将JAVA直接写死为当前JAVA_HOME houbinbindeMacBook-Pro:bin houbinbin$ which java
/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/bin/java
 runserver.sh #!/bin/sh

#===========================================================================================
# Java Environment Setting
#===========================================================================================
error_exit ()
{
    echo "ERROR: $1 !!"
    exit 1
}

#[ ! -e "$JAVA_HOME/bin/java" ] && JAVA_HOME=$HOME/jdk/java
#[ ! -e "$JAVA_HOME/bin/java" ] && JAVA_HOME=/opt/taobao/java
#[ ! -e "$JAVA_HOME/bin/java" ] && error_exit "Please set the JAVA_HOME variable in your environment, We need java(x64)!"

#export JAVA_HOME
export JAVA="/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/bin/java"
export BASE_DIR=$(dirname $0)/..
export CLASSPATH=.:${BASE_DIR}/conf:${CLASSPATH}

#===========================================================================================
# JVM Configuration
#===========================================================================================
JAVA_OPT="${JAVA_OPT} -server -Xms4g -Xmx4g -Xmn2g -XX:PermSize=128m -XX:MaxPermSize=320m"
JAVA_OPT="${JAVA_OPT} -XX:+UseConcMarkSweepGC -XX:+UseCMSCompactAtFullCollection -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+CMSClassUnloadingEnabled -XX:SurvivorRatio=8 -XX:+DisableExplicitGC"
JAVA_OPT="${JAVA_OPT} -verbose:gc -Xloggc:${HOME}/rmq_srv_gc.log -XX:+PrintGCDetails"
JAVA_OPT="${JAVA_OPT} -XX:-OmitStackTraceInFastThrow"
JAVA_OPT="${JAVA_OPT} -Djava.ext.dirs=${BASE_DIR}/lib"
#JAVA_OPT="${JAVA_OPT} -Xdebug -Xrunjdwp:transport=dt_socket,address=9555,server=y,suspend=n"
JAVA_OPT="${JAVA_OPT} -cp ${CLASSPATH}"

$JAVA ${JAVA_OPT} $@
 重新执行: log如下,则证明启动成功。 Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=320m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.
The Name Server boot success. serializeType=JSON
 shutdown  mqshutdown namesrv
 mq broker 启动这个之前,需要制定出 NameServer地址: $   export NAMESRV_ADDR=127.0.0.1:9876
 start $   nohup sh  mqbroker > ~/logs/ons.log &
 log 如下: Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=320m; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.
The broker[houbinbindeMacBook-Pro.local, 192.168.2.102:10911] boot success. serializeType=JSON and name server is 127.0.0.1:9876
 shutdown sudo bash mqshutdown broker
 启动后简单查看端口占用信息如下: houbinbindeMacBook-Pro:bin houbinbin$ sudo lsof -i:9876
COMMAND  PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
java    1556 root   56u  IPv6 0xba83a0ce19f11035      0t0  TCP *:sd (LISTEN)
houbinbindeMacBook-Pro:bin houbinbin$ sudo lsof -i:10911
COMMAND  PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
java    1591 houbinbin   88u  IPv6 0xba83a0ce19f0ea95      0t0  TCP *:10911 (LISTEN)
 Maven Project You can get the whole project from here. The project struct may like this: |____src
| |____main
| | |____java
| | | |____com
| | | | |____ryo
| | | | | |____rocket
| | | | | | |____demo
| | | | | | | |____common
| | | | | | | | |____consumer
| | | | | | | | | |____Consumer.java
| | | | | | | | |____productor
| | | | | | | | | |____Productor.java
| | |____resources
| | | |____log4j.properties
 pom.xml <dependencies>

    <!--rocketmq-->
    <dependency>
        <groupId>com.alibaba.rocketmq</groupId>
        <artifactId>rocketmq-client</artifactId>
        <version>${rocketmq.version}</version>
    </dependency>

    <dependency>
        <groupId>com.alibaba.rocketmq</groupId>
        <artifactId>rocketmq-common</artifactId>
        <version>${rocketmq.version}</version>
    </dependency>

    <dependency>
        <groupId>com.alibaba.rocketmq</groupId>
        <artifactId>rocketmq-remoting</artifactId>
        <version>${rocketmq.version}</version>
    </dependency>


    <!--log-->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>1.7.7</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.7</version>
    </dependency>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
</dependencies>
 log4j.properties log4j.rootLogger=warn, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%t] %d{MM-dd HH:mm:ss,SSS} - %m%n
 Consumer.java /** * @author houbinbin * @on 17/1/2 */
public class Productor {

    public static void main(String[] args) {

        DefaultMQProducer producer = new DefaultMQProducer("Producer");
        producer.setNamesrvAddr("127.0.0.1:9876");

        try {

            producer.start();

            Message message = new Message("PushTopic", "push", "1", "Just fot test.".getBytes());
            SendResult result = producer.send(message);
            System.out.println("id:" + result.getMsgId() + " result:" + result.getSendStatus());

            message = new Message("PushTopic", "push", "3", "Just fot test.".getBytes());

            result = producer.send(message);
            System.out.println("id:" + result.getMsgId() + " result:" + result.getSendStatus());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            producer.shutdown();
        }
    }
}
 运行LOG如下: id:C0A8026600002A9F000000000000011A result:SEND_OK
id:C0A8026600002A9F00000000000001A7 result:SEND_OK
 Consumer.java /** * @author houbinbin * @on 17/1/4 */
public class Consumer {

    public static void main(String[] args) {
        DefaultMQPushConsumer consumer = new DefaultMQPushConsumer("PushConsumer");
        consumer.setNamesrvAddr("127.0.0.1:9876");

        try {
            // 订阅PushTopic下的Tag未push的消息
            consumer.subscribe("PushTopic", "push");
            // 程序第一次启动从消息队列头取数据
            consumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_FIRST_OFFSET);
            consumer.registerMessageListener(new MessageListenerConcurrently() {
                @Override
                public ConsumeConcurrentlyStatus consumeMessage(List<MessageExt> msgs, ConsumeConcurrentlyContext context) {
                    Message message = msgs.get(0);
                    System.err.println(message.toString());
                    return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;
                }
            });
            consumer.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
 运行LOG如下: MessageExt [queueId=1, storeSize=141, queueOffset=1, sysFlag=0, bornTimestamp=1483460812589, bornHost=/192.168.2.102:54835, storeTimestamp=1483460812590, storeHost=/192.168.2.102:10911, msgId=C0A8026600002A9F00000000000001A7, commitLogOffset=423, bodyCRC=1329428386, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message [topic=PushTopic, flag=0, properties={MIN_OFFSET=0, MAX_OFFSET=2, KEYS=3, WAIT=true, TAGS=push}, body=14]]
MessageExt [queueId=0, storeSize=141, queueOffset=1, sysFlag=0, bornTimestamp=1483460812558, bornHost=/192.168.2.102:54835, storeTimestamp=1483460812575, storeHost=/192.168.2.102:10911, msgId=C0A8026600002A9F000000000000011A, commitLogOffset=282, bodyCRC=1329428386, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message [topic=PushTopic, flag=0, properties={MIN_OFFSET=0, MAX_OFFSET=2, KEYS=1, WAIT=true, TAGS=push}, body=14]]
 RocketMQ Console Download it, or use $ git clone https://github.com/rocketmq/rocketmq-console
 This fork is compatible with RocketMQ 3.2.6 install $ pwd
/Users/houbinbin/it/tools/rocketMQ/rocketmq-console
$ mvn clean install
 get war in target package $ pwd
/Users/houbinbin/it/tools/rocketMQ/rocketmq-console/target
$ ls
classes					generated-sources			maven-archiver				rocketmq-console-SNAPSHOT-1.0		rocketmq-console-SNAPSHOT-1.0.war
 mv into tomcat and renamed into ROOT.war $ cp rocketmq-console-SNAPSHOT-1.0.war ~/it/tools/tomcat/tomcat8/webapps/ROOT.war
 start tomcat $   cd ~/it/tool/tomcat/tomcat8/bin
$   ./startup.sh
 visit in the browser localhost:8888
 you may see (1) 你是幸运的,顺利走到这一步。 (2) 你是不幸的,console目前进度较慢。使用时需要自己改造此项目。干巴爹!</description><link>https://houbb.github.io/2016/10/25/rocketmq</link><article>侯宾宾</article><guid/><pubDate>2016-10-25</pubDate></item><item><title>SSH</title><description>SSH 侯宾宾      ssh      Linux      2016-10-23 SSH SYNOPSIS DESCRIPTION SSH 免密登录 SSH 内网穿透技术 将内网服务器设置为外网可以访问 SSH ssh SYNOPSIS ssh	[-1246AaCfGgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec] [-D [bind_address:]port] [-E log_file] [-e escape_char] 
[-F configfile] [-I pkcs11] [-i identity_file] [-J [user@]host[:port]] [-L address] [-l login_name] [-m mac_spec] [-O ctl_cmd] 
[-o option] [-p port] [-Q query_option] [-R address] [-S ctl_path] [-W host:port] [-w local_tun[:remote_tun]] 
[user@]hostname [command]
 DESCRIPTION ssh (SSH client) is a program for logging into a remote machine and for executing commands on a remote machine. It is intended to provide secure encrypted communications between two untrusted hosts over an insecure network. X11 connections, arbitrary TCP ports and UNIX-domain sockets can also be forwarded over the secure channel. The simple demo $   ssh root@139.196.28.125
 ssh connects and logs into the specified hostname (with optional user name). The user must prove his/her identity to the remote machine using one of several methods (see below). If command is specified, it is executed on the remote host instead of a login shell. If command is specified, it is executed on the remote host instead of a login shell. The options are as follows: opt description -1 Forces ssh to try protocol version 1 only. -2 Forces ssh to try protocol version 2 only. -4 Forces ssh to use IPv4 addresses only. -5 Forces ssh to use IPv6 addresses only. SSH 免密登录 If you want login B in A without password, you can do it like this: 1、generate ssh key in A ssh-keygen -t rsa
 It may has three times input, just enter directly. It will generate id_rsa and id_rsa.pub in .ssh 2、Import A’s id_rsa.pub into B ssh-copy .ssh/id_rsa.pub root@139.196.28.125
 If A not install ssh-copy, we can do it like this copy id_rsa.pub to B houbinbindeMacBook-Pro:.ssh houbinbin$ scp ~/.ssh/id_rsa.pub root@139.196.28.125:id_rsa.pub
root@139.196.28.125's password:
id_rsa.pub
 import it to B’s .ssh/authorized_keys cat id_rsa.pub > .ssh/authorized_keys
 If the the user you login has no .ssh, create it: root@iZuf60ahcky4k4nfv470juZ:~# pwd
/root
root@iZuf60ahcky4k4nfv470juZ:~# mkdir .ssh
 3、login test houbinbindeMacBook-Pro:~ houbinbin$ ./ali.sh
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
New release '16.04.1 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


Welcome to aliyun Elastic Compute Service!

root@iZuf60ahcky4k4nfv470juZ:~#
 SSH 内网穿透技术 假设已有: 一台公网主机(B) 可以联公网的主机的主机A、C 问: 如何让C访问A呢? 思路 1、C可以直接访问B,A可以访问B,所以要通过B作为二者沟通的桥梁。 2、当我们使用C访问B时,如何让B把消息传递给A呢?(SSH) 实现 A来征服 ssh -N -f -R 2323:127.0.0.1:22 139.196.28.125
 作用：告诉139.196.28.125（B）， 如果有人请求你的2323端口， 你就把这个请求转到我（A）的22号端口 -N: 告诉B， 我这个命令你什么也不要做， 只需要做转发就行了 -f：让这条命令在A的后台执行（不会因为关掉命令窗口而断开链接） -R: 格式-R X:Y:Z， 作用是做端口映射， 把远程机器的端口X映射（转发）到本地机器Y的Z端口 C来见证 1、C访问B ssh root@139.196.28.125
 2、访问指定端口 让B访问自己的2323端口,等于直接访问A的22端口(22为默认ssh端口) ssh -p 2323 root@localhost
 将内网服务器设置为外网可以访问 指定转发脚本: conn.sh # kill ssh

echo "kill all ssh..."
ps -ef | grep ssh | grep -v sshd | cut -c 9-15 | xargs kill -9

# ssh

ssh -C -f -N -g -L  8080:42.196.156.22:18080 -p 12222 houbinbin@42.196.156.22
ssh -C -f -N -g -L  8081:42.196.156.22:18081 -p 12222 houbinbin@42.196.156.22
ssh -C -f -N -g -L  9000:42.196.156.22:19000 -p 12222 houbinbin@42.196.156.22
ssh -C -f -N -g -L  80:42.196.156.22:10080 -p 12222 houbinbin@42.196.156.22
 定时执行: # crontab -e
 添加内容如下: # 每小时进行一次转发重连

0 */1 * * * /root/shell/conn.sh</description><link>https://houbb.github.io/2016/10/23/ssh</link><article>侯宾宾</article><guid/><pubDate>2016-10-23</pubDate></item><item><title>Redis</title><description>Redis 侯宾宾      redis      NoSQL      2016-10-23 Redis Install in Mac Install in windows Jedis Jedis pool Spring-Redis 分布式 Redis Redis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs and geospatial indexes with radius queries. zh_CN Install in Mac 1、Download and Install $ wget http://download.redis.io/releases/redis-3.0.6.tar.gz
$ tar xzf redis-3.0.6.tar.gz
$ mv redis-3.0.6 redis
$ cd redis
$ make
$ make test
$ make install
 2、Edit redis.conf Open the redis.conf file, and find this line dir ./, set it the path you want redis to save data. Here is my dir /Users/houbinbin/redis/redis_data

bind 127.0.0.1      //本地访问
requirepass 123456  //访问密码
 3、 Start redis-server $   src/redis-server redis.conf

$   src/redis-server redis.conf &   //后台-配置文件运行
 after start you can see houbinbindeMacBook-Pro:redis-3.2.3 houbinbin$ 17137:M 23 Oct 09:46:21.924 * Increased maximum number of open files to 10032 (it was originally set to 256).
                _._
           _.-``__ ''-._
      _.-``    `.  `_.  ''-._           Redis 3.2.3 (00000000/0) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 17137
  `-._    `-._  `-./  _.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |           http://redis.io
  `-._    `-._`-.__.-'_.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |
  `-._    `-._`-.__.-'_.-'    _.-'
      `-._    `-.__.-'    _.-'
          `-._        _.-'
              `-.__.-'

17137:M 23 Oct 09:46:21.929 # Server started, Redis version 3.2.3
17137:M 23 Oct 09:46:21.930 * The server is now ready to accept connections on port 6379
 test is connect success $   redis-cli -a 123456 ping

PONG
 Error redis-cli Could not connect to Redis at 127.0.0.1:6379: Connection refused $   redis-server /Users/houbinbin/redis/redis-3.2.3/redis.conf
$   redis-cli
 4、 Test connection Use redis-client to connect to redis-server. $   cd /Users/houbinbin/redis/redis-3.0.6
$   src/redis-cli -a 123456
 127.0.0.1:6379> set houbinbin hi
OK
127.0.0.1:6379> get houbinbin
"hi"
 5、 Shutdown redis-server (error) NOAUTH Authentication required. 无奈之下,杀进程。 
 常规关闭方式: $   127.0.0.1:6379> shutdown
not connected>


$   redis-cli -a 123456 shutdown    //关闭后台
 6、 Set password set find #requirepass foobared in file redis.conf, change like this requirepass redis
 7、 Uninstall redis remove redis-* package under /usr/local/bin $   sudo rm -rf redis-*
 Install in windows Redis is not supported on Windows by the official website. So, you can use Cygwin to get that Linux feeling on Windows. install 1、Download Download the setup-x86_64.exe and run it. Next, Next … How zh_CN Util you meet this. We need gcc and make under the Devel, click the Skip and choose the right version to install. gcc $   C complier upgrade helper           --not found

$   gcc-core

$   gcc-g++

$   gdb: The GUN Debugger
 make $   make: The GUN version of 'make' utility
 The process of install will cost a lot time. One hour later. 2、 Check Let’s check the compile environment. $   gcc -v

使用内建 specs。
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-cygwin/5.4.0/lto-wrapper.exe
目标：x86_64-pc-cygwin
配置为：...
线程模型：posix
gcc 版本 5.4.0 (GCC)


$   make -v

GNU Make 4.2.1
为 x86_64-unknown-cygwin 编译
Copyright (C) 1988-2016 Free Software Foundation, Inc.
许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本<http://gnu.org/licenses/gpl.html>。
本软件是自由软件：您可以自由修改和重新发布它。
在法律允许的范围内没有其他保证。
 3、 Edit File redis.h Open the redis.h under the path of {YourRedisPath}/src. add these code at the first line. #ifndef SA_ONSTACK #define SA_ONSTACK 0 #endif object.c Open the object.c under the path of {YourRedisPath}/src. add these code at the first line. #define strtold(a,b) ((long double)strtold((a), (b))) But, the redis-3.2.1 seems has no need to edit. 4、 Install Open your redis source package. $   cd redis

$   ls
00-RELEASENOTES  COPYING  Makefile   redis.conf       runtest-sentinel  tests
BUGS             deps     MANIFESTO  runtest          sentinel.conf     utils
CONTRIBUTING     INSTALL  README.md  runtest-cluster  src
 compile the depends jar. $   cd deps
$   make lua hiredis linenoise

(cd hiredis && make clean) > /dev/null || true
(cd linenoise && make clean) > /dev/null || true
(cd lua && make clean) > /dev/null || true
(cd geohash-int && make clean) > /dev/null || true
(cd jemalloc && [ -f Makefile ] && make distclean) > /dev/null || true
(rm -f .make-*)
(echo "" > .make-cflags)
(echo "" > .make-ldflags)
MAKE lua
cd lua/src && make all CFLAGS="-O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' " MYLDFLAGS="" AR="ar rcu"
make[1]: 进入目录“/cygdrive/d/redis/deps/lua/src”
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o lapi.o lapi.c
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o lcode.o lcode.c
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o ldebug.o ldebug.c
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o ldo.o ldo.c
ldo.c: 在函数‘f_parser’中:
ldo.c:496:7: 警告：未使用的变量‘c’ [-Wunused-variable]
   int c = luaZ_lookahead(p->z);
       ^
...

ar rcu liblua.a lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o strbuf.o fpconv.o lauxlib.o lbaselib.o ldblib.o liolib.o lmathlib.o loslib.o ltablib.o lstrlib.o loadlib.o linit.o lua_cjson.o lua_struct.o lua_cmsgpack.o lua_bit.o  # DLL needs all object files
ranlib liblua.a
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o lua.o lua.c
cc -o lua  lua.o liblua.a -lm
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o luac.o luac.c
cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC=''    -c -o print.o print.c
cc -o luac  luac.o print.o liblua.a -lm
make[1]: 离开目录“/cygdrive/d/redis/deps/lua/src”
make: *** 没有规则可制作目标“hierdis”。 停止。
 compile the source $   cd ..
$   make && make install

cd src && make all
make[1]: 进入目录“/cygdrive/d/redis/src”
rm -rf redis-server redis-sentinel redis-cli redis-benchmark redis-check-rdb redis-check-aof *.o *.gcda *.gcno *.gcov redis.info lcov-html
...

MAKE hiredis
cd hiredis && make static
make[3]: 进入目录“/cygdrive/d/redis/deps/hiredis”
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  net.c
net.c:1:0: 警告：-fPIC 在目标机上被忽略 (所有代码都是与位置无关的)
 /* Extracted from anet.c to work properly with Hiredis error reporting.
 ^
net.c: 在函数‘redisKeepAlive’中:
net.c:143:37: 错误：‘TCP_KEEPIDLE’未声明(在此函数内第一次使用)
     if (setsockopt(fd, IPPROTO_TCP, TCP_KEEPIDLE, &val, sizeof(val)) < 0) {
                                     ^
net.c:143:37: 附注：每个未声明的标识符在其出现的函数内只报告一次
net.c:150:37: 错误：‘TCP_KEEPINTVL’未声明(在此函数内第一次使用)
     if (setsockopt(fd, IPPROTO_TCP, TCP_KEEPINTVL, &val, sizeof(val)) < 0) {
                                     ^
net.c:156:37: 错误：‘TCP_KEEPCNT’未声明(在此函数内第一次使用)
     if (setsockopt(fd, IPPROTO_TCP, TCP_KEEPCNT, &val, sizeof(val)) < 0) {
                                     ^
make[3]: *** [Makefile:118：net.o] 错误 1
make[3]: 离开目录“/cygdrive/d/redis/deps/hiredis”
make[2]: *** [Makefile:47：hiredis] 错误 2
make[2]: 离开目录“/cygdrive/d/redis/deps”
make[1]: [Makefile:156：persist-settings] 错误 2 (已忽略）
    CC adlist.o
    CC quicklist.o
    CC ae.o
In file included from ae.c:58:0:
...
     ^
make[1]: *** [Makefile:201：ae.o] 错误 1
make[1]: 离开目录“/cygdrive/d/redis/src”
make: *** [Makefile:6：all] 错误 2
 Jedis pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>redis</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-compiler-plugin.jdk.version>1.8</maven-compiler-plugin.jdk.version>

        <log4j.version>2.6</log4j.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.9</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.8.1</version>
        </dependency>

        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat.version}</version>
                <configuration>
                    <port>8080</port>
                    <path>/</path>
                    <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven-compiler-plugin.jdk.version}</source>
                    <target>${maven-compiler-plugin.jdk.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
 RedisTest.java package com.ryo.redis;

import junit.framework.TestCase;
import org.junit.Before;
import org.junit.Test;
import redis.clients.jedis.Jedis;

import java.util.HashMap;
import java.util.Map;

/** * Created by houbinbin on 16/7/3. */
public class RedisTest extends TestCase {
    private Jedis jedis;

    @Before
    public void setUp() {
        jedis = new Jedis("127.0.0.1", 6379);
        jedis.auth("redis");
    }

    /** * save String */
    @Test
    public void testSaveString() {
        jedis.set("name", "ryo");
        assertEquals("ryo", jedis.get("name"));

        jedis.append("name", " is whose name?");
        assertEquals("ryo is whose name?", jedis.get("name"));

        jedis.del("name");
        assertEquals(null, jedis.get("name"));

        jedis.mset("name", "ryo", "age", "22");
        assertEquals("ryo", jedis.get("name"));

        jedis.incr("age");
        assertEquals("23", jedis.get("age"));
    }

    /** * Map */
    @Test
    public void testMap() {
        Map<String, String> map = new HashMap<>();
        map.put("name", "ryo");
        map.put("age", "22");

        jedis.hmset("map", map);
        assertEquals("[ryo, 22]", jedis.hmget("map", "name", "age").toString());
        assertEquals("2", jedis.hlen("map").toString());
        assertEquals("true", jedis.exists("map").toString());
        assertEquals("[name, age]", jedis.hkeys("map").toString());
        assertEquals("[ryo, 22]", jedis.hvals("map").toString());

        jedis.hdel("map", "name");
        assertEquals("1", jedis.hlen("map").toString());
    }

    /** * List */
    @Test
    public void testList() {
        jedis.del("list");

        jedis.lpush("list", "apple");
        jedis.lpush("list", "eat");
        jedis.lpush("list", "ryo");

        assertEquals("apple", jedis.lindex("list", 2));
        jedis.lset("list", 2, "orange");

        assertEquals("[ryo, eat, orange]", jedis.lrange("list", 0, -1).toString());
    }

    /** * Set */
    @Test
    public void testSet() {
        jedis.del("name");

        jedis.sadd("name", "ryo");
        jedis.sadd("name", "apple");
        jedis.sadd("name", "orange");

        assertEquals("[orange, apple, ryo]", jedis.smembers("name").toString());    //show all members.

        assertEquals("3", jedis.scard("name").toString()); //get number

        jedis.srem("name", "orange");   //remove
        assertEquals("[apple, ryo]", jedis.smembers("name").toString());

        assertEquals("false", jedis.sismember("name", "banana").toString());

        //get the random result, so assert may be false.
        assertEquals("apple", jedis.srandmember("name"));
        assertEquals("[ryo, apple]", jedis.srandmember("name", 2).toString());
    }

    /** * sort */
    @Test
    public void testSort() {
        jedis.del("sort");

        jedis.lpush("sort", "3");
        jedis.lpush("sort", "5");
        jedis.lpush("sort", "2");
        jedis.lpush("sort", "7");

        assertEquals("[7, 2, 5, 3]", jedis.lrange("sort", 0, -1).toString());
        assertEquals("[2, 3, 5, 7]", jedis.sort("sort").toString());
        assertEquals("[7, 2, 5, 3]", jedis.lrange("sort", 0, -1).toString());
    }
}
 Jedis pool I try times, but always get an error. package com.ryo.util;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.JedisPoolConfig;

/** * Created by houbinbin on 16/7/3. */
public class RedisUtil {
    private RedisUtil() {
    }

    private static final String ADDRESS = "127.0.0.1";
    private static final int PORT = 6397;
    private static final String PASSWORD = "redis";


    //可用连接实例的最大数目，默认值为8；
    //如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
    private static final int MAX_TOTAL = 512;

    //控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。
    private static final int MAX_IDLE = 100;

    //等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；
    private static final int TIMEOUT = 10000;

    //在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；
    private static final boolean TEST_ON_BORROW = true;

    private static JedisPool jedisPool = null;

    /** * 初始化Redis连接池 */
    static {
        try {
            if (jedisPool == null) {
                JedisPoolConfig config = new JedisPoolConfig();
                config.setMaxTotal(MAX_TOTAL);
                config.setMaxWaitMillis(TIMEOUT);
                config.setMaxIdle(MAX_IDLE);
                config.setTestOnBorrow(TEST_ON_BORROW);
                jedisPool = new JedisPool(config, ADDRESS, PORT, TIMEOUT, PASSWORD);
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("init redis pool failed!");
        }
    }

    /** * 获取Jedis实例 * * @return */
    public synchronized static Jedis getJedis() {
        try {
            if (jedisPool != null) {
                Jedis resource = jedisPool.getResource();
                return resource;
            } else {
                return null;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        } finally {

        }
    }

    /** * 释放jedis资源 * * @param jedis */
    public static void returnResource(final Jedis jedis) {
        if (jedis != null) {
            jedisPool.returnResource(jedis);
        }
    }
}
 Spring-Redis 基础知识 No invasive spring and redis integration. @Cacheable triggers cache population @CacheEvict triggers cache eviction @CachePut updates the cache without interfering with the method execution @Caching regroups multiple cache operations to be applied on a method @CacheConfig shares some common cache-related settings at class-level spring cache 简单说下@Cacheable和@CachePut区别: (1) @Cacheable 如果缓存中有,直接去缓存,不执行方法。否则执行方法,并将结果放在缓存中。适用于如查询的情况。 (2) @CachePut 无论缓存有没有,方法会正常执行。并将返回的结果放在缓存之中。适用于更新情况,并将更新后的对象放在缓存中。 File struct You can get the project demo from here or git clone https://github.com/houbb/spring-redis .
|____main
| |____java
| | |____com
| | | |____ryo
| | | | |____cache
| | | | | |____RedisCacheConfig.java
| | | | |____domain
| | | | | |____User.java
| | | | |____service
| | | | | |____impl
| | | | | | |____UserServiceImpl.java
| | | | | |____UserService.java
| |____resources
| | |____app.xml
| | |____applicationContext.xml
| | |____spring-redis.xml
|____test
| |____java
| | |____com
| | | |____ryo
| | | | |____service
| | | | | |____BaseTest.java
| | | | | |____UserServiceTest.java
|____pom.xml
 pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>spring-redis</artifactId>
    <version>1.0-SNAPSHOT</version>

    <description>spring integrate redis</description>


    <properties>
        <junit.version>4.9</junit.version>
        <spring.version>4.2.6.RELEASE</spring.version>
        <spring-data-redis.version>1.3.2.RELEASE</spring-data-redis.version>
        <jedis.version>2.4.2</jedis.version>
        <lombok.version>1.16.8</lombok.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    </properties>

    <dependencies>
        <!--junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-data-redis.version}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
 User.java @Data
public class User implements Serializable {
  private Long id;
  private String name;
}
 UserServiceImpl.java @Service("userService")
public class UserServiceImpl implements UserService {

  /** * @Cacheable triggers cache population */
  @Cacheable(value = "user", key = "'user_id_' + #id")
  public User getUser(Long id) {
    System.out.println("get user"+id);

    User user = new User();
    user.setId(id);
    return user;
  }

  @CacheEvict(value = "user", key = "'user_id_'+#id")
  public void deleteUser(Long id) {
    System.out.println("delete user"+id);
  }

  /** * updated without interfering with the method execution * - 将返回的结果,放入缓存 */
  @CachePut(value = "user", key = "'user_id_'+#user.getId()")
  public User updateUser(User user) {
    System.out.println("update user"+user);
    user.setName("cachePut update");
    return user;
  }

  @CacheEvict(value = "user", allEntries = true)
  public void clearCache() {
    System.out.println("clear all user cache");
  }

}
 RedisCacheConfig.java @Configuration
@EnableCaching
public class RedisCacheConfig {

  private JedisConnectionFactory jedisConnectionFactory;

  private RedisTemplate redisTemplate;

  private RedisCacheManager redisCacheManager;

  public RedisCacheConfig(JedisConnectionFactory jedisConnectionFactory, RedisTemplate redisTemplate, RedisCacheManager redisCacheManager) {
    this.jedisConnectionFactory = jedisConnectionFactory;
    this.redisTemplate = redisTemplate;
    this.redisCacheManager = redisCacheManager;
  }
}
 app.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!--spring公共配置-->
    <import resource="applicationContext.xml"/>
    <!--redis缓存配置-->
    <import resource="spring-redis.xml"/>

</beans>
 applicationContext.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- Activates annotation-based bean configuration -->
    <context:annotation-config/>

    <!-- Scans for application @Components to deploy -->
    <context:component-scan base-package="com.ryo"/>

</beans>
 spring-redis.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1000"/>
        <property name="minIdle" value="50"/>
        <property name="maxIdle" value="100"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="127.0.0.1" p:port="6379" p:password="123456" p:poolConfig-ref="poolConfig"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <!-- 如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！ -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate" />
    </bean>

    <!--自定义缓存配置-->
    <bean id="redisCacheConfig" class="com.ryo.cache.RedisCacheConfig">
        <constructor-arg ref="jedisConnectionFactory" />
        <constructor-arg ref="redisTemplate" />
        <constructor-arg ref="redisCacheManager" />
    </bean>
</beans>
 分布式 blog</description><link>https://houbb.github.io/2016/10/23/redis</link><article>侯宾宾</article><guid/><pubDate>2016-10-23</pubDate></item><item><title>Linux</title><description>Linux 侯宾宾      linux      OS      2016-10-22 Linux Linux Vim Linux Command 定时执行任务 Linux Just like Windows XP, Windows 7, Windows 8, and Mac OS X, Linux is an operating system. An operating system is software that manages all of the hardware resources associated with your desktop or laptop. To put it simply – the operating system manages the communication between your software and your hardware. Without the operating system (often referred to as the “OS”), the software wouldn’t function. linux linux zh_CN Linux->Index Struct: Index Struct->File Property: Index Struct root@iZuf60ahcky4k4nfv470juZ:/# ls /
bin  boot  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
 dir desc bin 存放着最经常使用的命令 boot 启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件 dev Linux的外部设备 etc 系统管理所需要的配置文件和子目录 home 用户的主目录 lib 系统最基本的动态连接共享库 lost+found 当系统非法关机后，这里就存放了一些文件 media linux系统会自动识别一些设备，例如U盘、光驱等，linux会把识别的设备挂载到这个目录下 mnt 让用户临时挂载别的文件系统 opt 额外安装软件所摆放的目录 proc 虚拟目录，是系统内存的映射，可通过直接访问这个目录获取系统信息 root 超级权限者的用户主目录 run   sbin 统管理员使用的系统管理程序 srv 一些服务启动之后需要提取的数据 tmp 存放一些临时文件的 usr 存放用户的应用程序和文件 var 存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件 Linux Vim Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. Title: Vim Mode Edit Mode->Common Mode: ESC Common Mode-> Edit Mode: <i | o | a> Common Mode-> Command Mode: <: | ? | /> Command Mode-> Common Mode: Enter Cursor Move Command Desc H Head line start M Middle line start L Bottom line start G Last Line nG n Line gg First Line(1G) n space → n n enter ↓ n Vim Set Command Desc :set nu show line num :set nonu hide line num Find & Replace Command Desc /word find word after cursor ?word find word before cursor n continue search before N continue search & REVERSE direction :n1,n2s/word1/word2/g replace word1 with word2 in [n1,n2] lines :1,$s/word1/word2/g replace word1 with word2 in [First,Last] lines :1,$s/word1/word2/gc replace word1 with word2 in [First,Last] lines, need CONFIRM Delete & Copy n stands for n times Command Desc [n]x,X x(del), X(backspace) [n]dd delete cursor line, [n] cursor ↓ n lines delete d[H M L G nG] delete form cursor line and target d[0 $] [0] delete form cursor to line head, [$] to line end [n]yy copy cursor line, [n] cursor ↓ n lines copy y[H M L G nG] same as delete y[0 $] same as delete P paste copy content at cursor’s NEXT line p paste copy content at cursor’s PREV line u undo . redo Linux Command File Manage cat cat命令用于把档案串连接后传到基本输出（萤幕或加 > fileName 到另一个档案） -n 或 --number 由 1 开始对所有输出的行数编号
-b 或 --number-nonblank 和 -n 相似，只不过对于空白行不编号
-s 或 --squeeze-blank 当遇到有连续两行以上的空白行，就代换为一行的空白行
-v 或 --show-nonprinting
 > redirect, >> append redirect file cat_original.txt content with number-line into file cat_back.txt : cat -n cat_original.txt > cat_backup.txt
 clear cat_original.txt content : cat /dev/null > cat_original.txt
 chmod houbinbindeMacBook-Pro:linux houbinbin$ chmod
usage:	chmod [-fhv] [-R [-H | -L | -P]] [-a | +a | =a  [i][# [ n]]] mode|entry file ...
	chmod [-fhv] [-R [-H | -L | -P]] [-E | -C | -N | -i | -I] file ...
 mode param desc: [ugoa...][[+-=][rwxX]...][,...]
 u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是
+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限
r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行
 cmp Compare diff between two files. diff Compare diff between two files. "|"表示前后2个文件内容有不同
"<"表示后面文件比前面文件少了1行内容
">"表示后面文件比前面文件多了1行内容
 demo houbinbindeMacBook-Pro:linux houbinbin$ diff cat_original.txt cat_backup.txt
4a5
>      5
 file get the file info houbinbindeMacBook-Pro:linux houbinbin$ file cat_original.txt
cat_original.txt: ASCII text
 find Linux find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时， 不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示 定时执行任务</description><link>https://houbb.github.io/2016/10/22/Linux</link><article>侯宾宾</article><guid/><pubDate>2016-10-22</pubDate></item><item><title>Cron</title><description>Cron 侯宾宾      cron      Tools      2016-10-22 Cron Non-Standard Characters Cron The software utility Cron is a time-based job scheduler in Unix-like computer operating systems. Field Required Allowed values Allowed special characters Remarks Second yes 0-59 * , - - Minutes yes 0-59 * , - - Hour yes 0-23 * , - - Day of month yes 1-31 * , - ? L W - Month yes 1-12 or JAN-DEC * , - - Day of week yes 0-6 or SUN-SAT * , - ? L # - Year no 1970–2099 * , - This field is not supported in standard/default implementations. Non-Standard Characters L ‘L’ stands for “last”. When used in the day-of-week field, it allows you to specify constructs such as “the last Friday” (“5L”) of a given month. In the day-of-month field, it specifies the last day of the month. W The ‘W’ character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify “15W” as the value for the day-of-month field, the meaning is: “the nearest weekday to the 15th of the month.” So, if the 15th is a Saturday, the trigger fires on Friday the 14th. If the 15th is a Sunday, the trigger fires on Monday the 16th. If the 15th is a Tuesday, then it fires on Tuesday the 15th. However, if you specify “1W” as the value for day-of-month, and the 1st is a Saturday, the trigger fires on Monday the 3rd, as it does not ‘jump’ over the boundary of a month’s days. The ‘W’ character can be specified only when the day-of-month is a single day, not a range or list of days. Hash ( # ) ’#’ is allowed for the day-of-week field, and must be followed by a number between one and five. It allows you to specify constructs such as “the second Friday” of a given month.[11] Question mark ( ? ) In some implementations, used instead of ‘*’ for leaving either day-of-month or day-of-week blank. Other cron implementations substitute “?” with the start-up time of the cron daemon, so that ? ? * * * * would be updated to 25 8 * * * * if cron started-up on 8:25am, and would run at this time every day until restarted again.[12] Slash ( / ) In vixie-cron, slashes can be combined with ranges to specify step values.[4] For example, */5 in the minutes field indicates every 5 minutes (see note). It is shorthand for the more verbose POSIX form 5,10,15,20,25,30,35,40,45,50,55,00. POSIX does not define a use for slashes; its rationale (commenting on a BSD extension) notes that the definition is based on System V format but does not exclude the possibility of extensions.[3] Note that frequencies in general cannot be expressed; only step values which evenly divide their range express accurate frequencies (for minutes and seconds, that’s /2, /3, /4, /5, /6, /10, /12, /15, /20 and /30 because 60 is evenly divisible by those numbers; for hours, that’s /2, /3, /4, /6, /8 and /12); all other possible “steps” and all other fields yield inconsistent “short” periods at the end of the time-unit before it “resets” to the next minute, second, or day; for example, entering */5 for the day field sometimes executes after 1, 2, or 3 days, depending on the month and leap year; this is because cron is stateless (it does not remember the time of the last execution nor count the difference between it and now, required for accurate frequency counting—instead, cron is a mere pattern-matcher)</description><link>https://houbb.github.io/2016/10/22/cron</link><article>侯宾宾</article><guid/><pubDate>2016-10-22</pubDate></item><item><title>LTS</title><description>LTS 侯宾宾      light-task-scheduler      Tools      2016-10-22 LTS Hello World Quick Start Try in Ubuntu LTS LTS(light-task-scheduler) 主要用于解决分布式任务调度问题，支持实时任务，定时任务和Cron任务 lts.pdf 主要功能 支持分布式，解决多点故障，支持动态扩容，容错重试等 Spring扩展支持，SpringBoot支持，Spring Quartz Cron任务的无缝接入支持 节点监控支持，任务执行监控支持，JVM监控支持 后台运维操作支持, 可以动态提交，更改，停止 任务 框架鸟瞰 LTS节点: JobClient：主要负责提交任务, 并接收任务执行反馈结果。 JobTracker：负责接收并分配任务，任务调度。 TaskTracker：负责执行任务，执行完反馈给JobTracker。 LTS-Admin：（管理后台）主要负责节点管理，任务队列管理，监控管理等。 LTS支持任务类型： 实时任务：提交了之后立即就要执行的任务。 定时任务：在指定时间点执行的任务，譬如 今天3点执行（单次）。 Cron任务：CronExpression，和quartz类似（但是不是使用quartz实现的）譬如 0 0/1 * * * ? 结构图 节点组 英文名称 NodeGroup,一个节点组等同于一个小的集群，同一个节点组中的各个节点是对等的，等效的，对外提供相同的服务。 每个节点组中都有一个master节点，这个master节点是由LTS动态选出来的，当一个master节点挂掉之后，LTS会立马选出另外一个master节点， 框架提供API监听接口给用户。 FailStore 这个主要是用于失败了存储的，主要用于节点容错，当远程数据交互失败之后，存储在本地，等待远程通信恢复的时候，再将数据提交。 FailStore主要用户JobClient的任务提交，TaskTracker的任务反馈，TaskTracker的业务日志传输的场景下。 FailStore目前提供几种实现：leveldb,rocksdb,berkeleydb,mapdb,ltsdb，用于可以自由选择使用哪种,用户也可以采用SPI扩展使用自己的实现。 Hello World Title: Demo in Mac Env->Download: Download->Package war: Env Prepare 1、 JDK Jdk1.6 or later houbinbindeMacBook-Pro:bin houbinbin$ java -version
java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
 2、 Maven houbinbindeMacBook-Pro:bin houbinbin$ mvn --v
Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)
Maven home: /usr/local/maven/maven3.3.9
Java version: 1.8.0_91, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre
Default locale: zh_CN, platform encoding: UTF-8
OS name: "mac os x", version: "10.11.3", arch: "x86_64", family: "mac"
 3、 Zookeeper houbinbindeMacBook-Pro:bin houbinbin$ pwd
/Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin
houbinbindeMacBook-Pro:bin houbinbin$ ./zkServer.sh start
ZooKeeper JMX enabled by default
Using config: /Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin/../conf/zoo.cfg
Starting zookeeper ... STARTED
houbinbindeMacBook-Pro:bin houbinbin$ jps
14064 QuorumPeerMain
14067 Jps
13884
 4、 MySQL Create database named lts. houbinbindeMacBook-Pro:bin houbinbin$ mysql -V
/usr/local/mysql/bin/mysql  Ver 14.14 Distrib 5.6.30, for osx10.11 (x86_64) using  EditLine wrapper
 Download git clone houbinbindeMacBook-Pro:bin houbinbin$ git clone https://github.com/ltsopensource/light-task-scheduler
Cloning into 'light-task-scheduler'...
remote: Counting objects: 25026, done.
remote: Compressing objects: 100% (58/58), done.
remote: Total 25026 (delta 9), reused 0 (delta 0), pack-reused 24936
Receiving objects: 100% (25026/25026), 97.44 MiB | 805.00 KiB/s, done.
Resolving deltas: 100% (10757/10757), done.
Checking connectivity... done.
 Package war Files in light-task-scheduler houbinbindeMacBook-Pro:conf houbinbin$ cd ~/it/tools/light-task-scheduler/
houbinbindeMacBook-Pro:light-task-scheduler houbinbin$ ls
LICENSE			build.sh		lts-admin		lts-jobtracker		lts-startup		开发计划.md
README.md		docs			lts-core		lts-monitor		lts-tasktracker		开发者规范.md
build.cmd		lts			lts-jobclient		lts-spring		pom.xml
 Only package the lts-admin You need clean install lts-core and clean install lts-monitor, then package lts-admin. Log may like this: [INFO] Copying webapp resources [/Users/houbinbin/IT/tools/light-task-scheduler/lts-admin/src/main/webapp]
[INFO] Webapp assembled in [383 msecs]
[INFO] Building war: /Users/houbinbin/IT/tools/light-task-scheduler/lts-admin/target/lts-admin-1.7.0-SNAPSHOT.war
[INFO] WEB-INF/web.xml already added, skipping
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3.912s
[INFO] Finished at: Sat Oct 22 15:08:53 CST 2016
[INFO] Final Memory: 20M/302M
[INFO] ------------------------------------------------------------------------

Process finished with exit code 0
 Attention Ensure has create database lts Mysql access should be root/root, or you need change the lts-admin.cfg and lts-monitor.cfg database access int lts-admin like this: # ------ 这个是Admin存储数据的地方,也可以和JobQueue的地址一样 ------
configs.jdbc.url=jdbc:mysql://127.0.0.1:3306/lts
configs.jdbc.username=root
configs.jdbc.password=123456
 Tomcat run copy the lts-admin-${version}.war into tomcat houbinbindeMacBook-Pro:light-task-scheduler houbinbin$ mv /Users/houbinbin/IT/tools/light-task-scheduler/lts-admin/target/lts-admin-1.7.0-SNAPSHOT.war ~/it/tools/tomcat/tomcat8/webapps/ROOT.war
houbinbindeMacBook-Pro:light-task-scheduler houbinbin$ cd ~/it/tools/tomcat/tomcat8/webapps
houbinbindeMacBook-Pro:webapps houbinbin$ ls
ROOT		ROOT.war
 or use maven plugin in the lts-admin module $   mvn tomcat7:run
 Visit Enter localhost:8081 in browser, the default access is admin/admin Quick Start Prepare Import example Import this demo to your idea. Start Zookeeper Start MySQL Create database named lts first mysql> use lts;
Database changed
mysql> show tables;
Empty set (0.00 sec)
 Run Start JobTracker If you mysql login is not root/root, you need change the mysql conf in lts.properties, then run: lts-examples/lts-example-jobtracker/lts-example-jobtracker-java/src/main/java/com/github/ltsopensource/example/java/Main.java
 log 2016-10-22 14:25:55,352 [main] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.registry.RegistryStatMonitor  -  [LTS] Registry available, lts version: 1.6.9, current host: 192.168.1.3
2016-10-22 14:25:55,362 [main] (AbstractRegistry.java:62) INFO  com.github.ltsopensource.core.registry.Registry  -  [LTS] Subscribe: {"address":"192.168.1.3:35001","available":true,"clusterName":"test_cluster","createTime":1477117553921,"group":"lts","hostName":"houbinbindeMacBook-Pro.local","httpCmdPort":8719,"identity":"JT_192.168.1.3_14530_14-25-53.906_1","ip":"192.168.1.3","listenNodeTypes":["JOB_CLIENT","TASK_TRACKER","JOB_TRACKER","MONITOR"],"nodeType":"JOB_TRACKER","port":35001,"threads":64}, lts version: 1.6.9, current host: 192.168.1.3
2016-10-22 14:25:55,380 [main] (AbstractRegistry.java:37) INFO  com.github.ltsopensource.core.registry.Registry  -  [LTS] Register: {"address":"192.168.1.3:35001","available":true,"clusterName":"test_cluster","createTime":1477117553921,"group":"lts","hostName":"houbinbindeMacBook-Pro.local","httpCmdPort":8719,"identity":"JT_192.168.1.3_14530_14-25-53.906_1","ip":"192.168.1.3","listenNodeTypes":["JOB_CLIENT","TASK_TRACKER","JOB_TRACKER","MONITOR"],"nodeType":"JOB_TRACKER","port":35001,"threads":64}, lts version: 1.6.9, current host: 192.168.1.3
2016-10-22 14:25:55,392 [main] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.cluster.JobNode  -  [LTS] ========== Start success, nodeType=JOB_TRACKER, identity=JT_192.168.1.3_14530_14-25-53.906_1, lts version: 1.6.9, current host: 192.168.1.3
 Start TaskTracker run lts-examples/lts-example-tasktracker/lts-example-tasktracker-java/src/main/java/com/github/ltsopensource/example/java/Main.java
 log 2016-10-22 14:28:49,943 [ZkClient-EventThread-29-127.0.0.1:2181] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.cluster.MasterElector  -  [LTS] Current node become the master node:{"address":"192.168.1.3:0","available":true,"clusterName":"test_cluster","createTime":1477117728807,"group":"test_trade_TaskTracker","hostName":"houbinbindeMacBook-Pro.local","httpCmdPort":8720,"identity":"TT_192.168.1.3_14571_14-28-48.784_1","ip":"192.168.1.3","nodeType":"TASK_TRACKER","port":0,"threads":64}, lts version: 1.6.9, current host: 192.168.1.3
2016-10-22 14:28:49,943 [main] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.cluster.JobNode  -  [LTS] ========== Start success, nodeType=TASK_TRACKER, identity=TT_192.168.1.3_14571_14-28-48.784_1, lts version: 1.6.9, current host: 192.168.1.3
2016-10-22 14:28:49,944 [ZkClient-EventThread-29-127.0.0.1:2181] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.support.RetryScheduler  -  [LTS] Start JobPushProcessor master RetryScheduler success, identity=[TT_192.168.1.3_14571_14-28-48.784_1], lts version: 1.6.9, current host: 192.168.1.3
 Start ClientTracker run lts-examples/lts-example-jobclient/lts-example-jobclient-java/src/main/java/com/github/ltsopensource/example/java/Main.java
 log 2016-10-22 14:30:56,216 [main] (AbstractLogger.java:31) INFO  com.github.ltsopensource.core.cluster.JobNode  -  [LTS] ========== Start success, nodeType=JOB_CLIENT, identity=JC_192.168.1.3_14599_14-30-55.128_1, lts version: 1.6.9, current host: 192.168.1.3
 In the LTS-Admin manager page, you can get the info about them. Try in Ubuntu Download $   git clone https://github.com/ztajy/light-task-scheduler.git

root@iZuf60ahcky4k4nfv470juZ:~/code/light-task-scheduler# ls
build.cmd  build.sh  docs  lts  lts-admin  lts-core  lts-example  lts-jobclient  lts-jobtracker  lts-logger  lts-queue  lts-spring  lts-startup  lts-tasktracker  pom.xml  README.md
 JobTracker和LTS-Admin部署 1、运行根目录下的sh build.sh或build.cmd脚本，会在dist目录下生成lts-{version}-bin文件夹 $   sh  build.sh

...
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5.245 s
[INFO] Finished at: 2016-09-27T14:06:20+08:00
[INFO] Final Memory: 12M/30M
[INFO] ------------------------------------------------------------------------

root@iZuf60ahcky4k4nfv470juZ:~/code/light-task-scheduler/dist# pwd
/root/code/light-task-scheduler/dist
root@iZuf60ahcky4k4nfv470juZ:~/code/light-task-scheduler/dist# ls
lts-1.6.3-SNAPSHOT-bin
 2、下面是其目录结构，其中bin目录主要是JobTracker和LTS-Admin的启动脚本。 jobtracker 中是 JobTracker的配置文件和需要使用到的jar包，lts-admin是LTS-Admin相关的war包和配置文件。 lts-{version}-bin的文件结构 ├── bin
│   ├── jobtracker.cmd
│   ├── jobtracker.sh
│   ├── lts-admin.cmd
│   └── lts-admin.sh
├── jobtracker
│   ├── conf
│   │   └── zoo
│   │       ├── jobtracker.cfg
│   │       └── log4j.properties
│   └── lib
│       └── *.jar
├── lts-admin
│   ├── conf
│   │   ├── log4j.properties
│   │   └── lts-admin.cfg
│   ├── lib
│   │   └── *.jar
│   └── lts-admin.war
└── tasktracker
    ├── bin
    │   └── tasktracker.sh
    ├── conf
    │   ├── log4j.properties
    │   └── tasktracker.cfg
    └── lib
        └── *.jar
 3、JobTracker启动。如果你想启动一个节点，直接修改下conf/zoo下的配置文件，然后运行 sh jobtracker.sh zoo start即可， 如果你想启动两个JobTracker节点，那么你需要拷贝一份zoo,譬如命名为zoo2,修改下zoo2下的配置文件， 然后运行sh jobtracker.sh zoo2 start即可。logs文件夹下生成jobtracker-zoo.out日志。 4、LTS-Admin启动.修改lts-admin/conf下的配置，然后运行bin下的sh lts-admin.sh或lts-admin.cmd脚本即可。 logs文件夹下会生成lts-admin.out日志，启动成功在日志中会打印出访问地址，用户可以通过这个访问地址访问了。</description><link>https://houbb.github.io/2016/10/22/LTS</link><article>侯宾宾</article><guid/><pubDate>2016-10-22</pubDate></item><item><title>Maven</title><description>Maven 侯宾宾      maven      apache      2016-10-22 Maven Create maven Run project pom.xml scope Maven Archetype Create archetype Add archetype Remove archetype Multi-module Create Use Tips 项目依赖 Maven Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project’s build, reporting and documentation from a central piece of information. maven download->install: install->run: Download Maven权威指南zh_CN.pdf Requirements: JDK: Maven 3.3 requires JDK 1.7 or above to execute - it still allows you to build against 1.3 and other JDK versions by Using Toolchains Disk: Approximately 10MB is required for the Maven installation itself. In addition to that, additional disk space will be used for your local Maven repository. The size of your local repository will vary depending on usage but expect at least 500MB. Install doc zh_CN environment variable MAVEN_HOME: D:\Maven\apache-maven-3.3.9
 path %MAVEN_HOME%/bin;
 test: Mvn -v
 result Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:4
7+08:00)
Maven home: D:\Maven\apache-maven-3.3.9\bin\..
Java version: 1.7.0_79, vendor: Oracle Corporation
Java home: D:\Program Files\Java\jdk1.7.0_79\jre
Default locale: zh_CN, platform encoding: GBK
OS name: "windows 7", version: "6.1", arch: "amd64", family: "windows"
 mac install Download the maven apache-maven-3.3.9-bin.tar.gz, unzip and rename the file to maven3.3.9. use mac terminal , enter $ pwd
 to get current path. enter $ cd /

$ cd /usr/local

$ ls
 can get the dirs under the local package. Then create file maven if not exists. $ sudo mkdir maven
 copy the maven3.3.9 into this path. $ sudo cp -R /Users/houbinbin/IT/learn/maven/maven3.3.9 /usr/local/maven

 3.set the path $ vi ~/.bash_profile
 This is vi editor. First in, you are in command mode, enter i, change to Insert mode to input words. M3_HOME=/usr/local/maven/maven3.3.9

PATH=$M3_HOME/bin:$PATH



export M3_HOME

export PATH
 then, press Esc change to command mode, enter :wq to save and quit. exit the mac terminal, and restart the terminal. echo $M3_HOME
echo $PATH
 can see what you set, and $ mvn -version
 like this houbinbindeMacBook-Pro:~ houbinbin$ mvn -version
Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)
Maven home: /usr/local/maven/maven3.3.9
Java version: 1.8.0_91, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre
Default locale: zh_CN, platform encoding: UTF-8
OS name: "mac os x", version: "10.11.3", arch: "x86_64", family: "mac"
 settings.xml open the settings.xml in %MAVEN_HOME%\conf\settings.xml you will find code like this… <!-- localRepository
   | The path to the local repository maven will use to store artifacts.
   |
   | Default: ${user.home}/.m2/repository

  <localRepository>/path/to/local/repo</localRepository>
-->
 You can change the path any you want; Create maven you can create maven project in idea like this: File-> new Module -> Maven
 STEP 1: select one from archetype STEP 2: add GroupId,ArtifactId,Version STEP 3: set Properties you can add code as following if maven build is very slow. archetypeCatalog=internal
 Run project elegant way in cmd mvn clean install

mvn tomcat7:run
 common way tomcat zh_CN Tips Setting You can config the maven setting use crtl+alt+s then search maven Error -Dmaven.multiModuleProjectDirectory system propery is not set
 you can use Low version maven to fit your idea. or solve it like this. -Dmaven.multiModuleProjectDirectory=$M2_HOME

M2_HOME D:\Maven\apache-maven-3.3.9
 pom.xml the default content of pox.xml may like this: <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>maven</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>...</dependency>
        ...
    </dependencies>

    <build>
        <plugins>
            <plugin>...</plugin>
            ...
        </plugins>

        <!--maven only compile resources files under package ```resources```, you can solve it.-->

        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
 define the method of package. <packaging>war</packaging>
 define the sourceEncoding <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 define the maven-compiler-plugin <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.3</version>
    <configuration>
        <source>1.7</source>
        <target>1.7</target>
    </configuration>
</plugin>
 define the tomcat7 plugin <plugin>
    <groupId>org.apache.tomcat.maven</groupId>
    <artifactId>tomcat7-maven-plugin</artifactId>
    <version>2.2</version>
    <configuration>
        <port>8080</port>
        <path>/</path>
        <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
    </configuration>
</plugin>
 If you want to skip tests by default but want the ability to re-enable tests from the command line, you need to go via a properties section in the pom: <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.19.1</version>
    <configuration>
      <skipTests>true</skipTests>
    </configuration>
</plugin>
 you can use maven shade plugin make class into jar. scope compile，缺省值，适用于所有阶段，会随着项目一起发布。 provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。 import 它只使用在<dependencyManagement>中，表示从其它的pom中导入dependency的配置 Maven Archetype archetype what is ? In short, Archetype is a Maven project templating toolkit. An archetype is defined as an original pattern or model from which all other things of the same kind are made. using To create a new project based on an Archetype, you need to call mvn archetype:generate goal. title: Your own archetype create->add: Define project template add->remove: Remove if not need Create archetype define archetype create $ mvn archetype:create-from-project
 houbinbindeMacBook-Pro:archetype houbinbin$ mvn archetype:create-from-project
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building archetype 1.0.0
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] >>> maven-archetype-plugin:2.4:create-from-project (default-cli) > generate-sources @ archetype >>>
[INFO]
[INFO] <<< maven-archetype-plugin:2.4:create-from-project (default-cli) < generate-sources @ archetype <<<
[INFO]
[INFO] --- maven-archetype-plugin:2.4:create-from-project (default-cli) @ archetype ---
[INFO] Setting default groupId: com.ryo
[INFO] Setting default artifactId: archetype
[INFO] Setting default version: 1.0.0
[INFO] Setting default package: com.ryo
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building archetype-archetype 1.0.0
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ archetype-archetype ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 10 resources
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ archetype-archetype ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO]
[INFO] --- maven-archetype-plugin:2.4:jar (default-jar) @ archetype-archetype ---
[INFO] Building archetype jar: /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/target/archetype-archetype-1.0.0
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.835 s
[INFO] Finished at: 2016-06-11T21:57:36+08:00
[INFO] Final Memory: 14M/309M
[INFO] ------------------------------------------------------------------------
[INFO] Archetype project created in /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.955 s
[INFO] Finished at: 2016-06-11T21:57:36+08:00
[INFO] Final Memory: 14M/245M
[INFO] ------------------------------------------------------------------------
 install $ cd target/generated-sources/archetype/
$ mvn install
 [INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building archetype-archetype 1.0.0
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ archetype-archetype ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 10 resources
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ archetype-archetype ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO]
[INFO] --- maven-archetype-plugin:2.4:jar (default-jar) @ archetype-archetype ---
[INFO] Building archetype jar: /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/target/archetype-archetype-1.0.0
[INFO]
[INFO] --- maven-archetype-plugin:2.4:integration-test (default-integration-test) @ archetype-archetype ---
[INFO] Processing Archetype IT project: basic
[INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating project from Archetype: archetype-archetype:1.0.0
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: archetype.it
[INFO] Parameter: artifactId, Value: basic
[INFO] Parameter: version, Value: 0.1-SNAPSHOT
[INFO] Parameter: package, Value: it.pkg
[INFO] Parameter: packageInPathFormat, Value: it/pkg
[INFO] Parameter: version, Value: 0.1-SNAPSHOT
[INFO] Parameter: package, Value: it.pkg
[INFO] Parameter: groupId, Value: archetype.it
[INFO] Parameter: artifactId, Value: basic
[WARNING] Don't override file /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/target/test-classes/projects/basic/project/basic/.idea/copyright/profiles_settings.xml
[INFO] project created from Archetype in dir: /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/target/test-classes/projects/basic/project/basic
[INFO]
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ archetype-archetype ---
[INFO] Installing /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/target/archetype-archetype-1.0.0.jar to /Users/houbinbin/.m2/repository/com/ryo/archetype-archetype/1.0.0/archetype-archetype-1.0.0.jar
[INFO] Installing /Users/houbinbin/IT/code/branches/archetype/target/generated-sources/archetype/pom.xml to /Users/houbinbin/.m2/repository/com/ryo/archetype-archetype/1.0.0/archetype-archetype-1.0.0.pom
[INFO]
[INFO] --- maven-archetype-plugin:2.4:update-local-catalog (default-update-local-catalog) @ archetype-archetype ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.885 s
[INFO] Finished at: 2016-06-11T22:00:07+08:00
[INFO] Final Memory: 15M/309M
[INFO] ------------------------------------------------------------------------
 deploy add these in the pom.xml of archetype <distributionManagement>
    <repository>
        <id>releases</id>
        <name>Nexus Releases Repository</name>
        <url>http://localhost:8081/nexus/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
        <id>snapshots</id>
        <name>Nexus Snapshots Repository</name>
        <url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
</distributionManagement>
 then $   mvn deploy
 use $ mkdir /tmp/archetype
$ cd /tmp/archetype
$ mvn archetype:generate -DarchetypeCatalog=local
 [INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] >>> maven-archetype-plugin:2.4:generate (default-cli) > generate-sources @ standalone-pom >>>
[INFO]
[INFO] <<< maven-archetype-plugin:2.4:generate (default-cli) < generate-sources @ standalone-pom <<<
[INFO]
[INFO] --- maven-archetype-plugin:2.4:generate (default-cli) @ standalone-pom ---
[INFO] Generating project in Interactive mode
[INFO] No archetype defined. Using maven-archetype-quickstart (org.apache.maven.archetypes:maven-archetype-quickstart:1.0)
Choose archetype:
1: local -> com.ryo:archetype-archetype (archetype-archetype)
Choose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): :
 Choose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): : 1
Define value for property 'groupId': : com.ryo
Define value for property 'artifactId': : test
Define value for property 'version':  1.0-SNAPSHOT: : 1.0.0
Define value for property 'package':  com.ryo: : com.ryo
Confirm properties configuration:
groupId: com.ryo
artifactId: test
version: 1.0.0
package: com.ryo
 Y: : y
 [INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating project from Archetype: archetype-archetype:1.0.0
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: com.ryo
[INFO] Parameter: artifactId, Value: test
[INFO] Parameter: version, Value: 1.0.0
[INFO] Parameter: package, Value: com.ryo
[INFO] Parameter: packageInPathFormat, Value: com/ryo
[INFO] Parameter: package, Value: com.ryo
[INFO] Parameter: version, Value: 1.0.0
[INFO] Parameter: groupId, Value: com.ryo
[INFO] Parameter: artifactId, Value: test
[WARNING] Don't override file /Users/houbinbin/IT/code/branches/test/test/.idea/copyright/profiles_settings.xml
[INFO] project created from Archetype in dir: /Users/houbinbin/IT/code/branches/test/test
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:34 min
[INFO] Finished at: 2016-06-11T22:11:32+08:00
[INFO] Final Memory: 14M/309M
[INFO] ------------------------------------------------------------------------
 Add archetype Input the location of your archetype project, then you can use it just like other maven archetype. Remove archetype ~/Library/Caches/IntelliJIdea<version>/Maven/Indices/UserArchetypes.xml
 Open and edit this file, then restart IntelliJIdea. 项目原型简介 生成项目架构 houbinbindeMacBook-Pro:archetype-resources houbinbin$ ls
README.md                       __rootArtifactId__-dal          __rootArtifactId__-surface      __rootArtifactId__-util         app-demo.iml
__rootArtifactId__-biz          __rootArtifactId__-service      __rootArtifactId__-test         __rootArtifactId__-web          pom.xml
houbinbindeMacBook-Pro:archetype-resources houbinbin$ pwd
/Users/houbinbin/IT/code/app-demo/target/generated-sources/archetype/target/classes/archetype-resources
 元数据指定 
 houbinbindeMacBook-Pro:maven houbinbin$ ls archetype-metadata.xml houbinbindeMacBook-Pro:maven houbinbin$ pwd /Users/houbinbin/IT/code/app-demo/target/generated-sources/archetype/target/classes/META-INF/maven ``` Multi-module Create Create an empty maven project, it’s pom.xml like this: <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>multiModule</artifactId>
    <version>1.0-SNAPSHOT</version>

</project>
 Create child module util for multiModule like this, also we create another module dao in this way: The pom.xml of multiModule will be: <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>multiModule</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>util</module>
    </modules>

</project>
 The pom.xml of util like this: <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>multiModule</artifactId>
        <groupId>com.ryo</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>util</artifactId>

</project>
 StringUtil.java in util module public class StringUtil {
    private static final String EMPTY_STRING = "";

    private StringUtil(){}

    public static boolean isEmpty(String string) {
        return string == null || string.trim().equals(EMPTY_STRING);
    }
}
 Use If we want to use StringUtil.java of util in dao module, we should do it like this: install Install the module you want to use in module util or multiModule(root module). define Define the dependency of util in dao module’s pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>multiModule</artifactId>
        <groupId>com.ryo</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dao</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.ryo</groupId>
            <artifactId>util</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
</project>
 use public class UserDao {
    public boolean login(String username, String password) {
        return StringUtil.isEmpty(username) || StringUtil.isEmpty(password);
    }
}
 Tips If you define the dependency of [one module] in root module, all children of it can use the [one module]. But, usually we use it may like this: pom.xml of root module, declare the use. <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.ryo</groupId>
            <artifactId>util</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
</dependencyManagement>
 pom.xml of dao module, define the use. <dependencies>
    <dependency>
        <groupId>com.ryo</groupId>
        <artifactId>util</artifactId>
    </dependency>
</dependencies>
 Tips Get snapshot jar immediately When you use Idea to get the snapshot jar, you may not get it immediately. Here is the solve way: ⌘+, to open the Preference, search for maven, and choose the Always update snapshots messy code(乱码) mvn run messy code add this under properties in pom.xml <properties>
    <argLine>-Dfile.encoding=UTF-8</argLine>
</properties>
 下载很慢的情况 blog zh_CN 在 ~/.m2/setting.xml 中添加: <mirrors>
       <!-- 阿里云仓库 -->
      <mirror>
           <id>alimaven</id>
           <mirrorOf>central</mirrorOf>
           <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/repositories/central/</url>
       </mirror>
</mirrors>
 项目依赖 有时候依赖其他的三方jar包较多，有些jar被重复引入且版本不一致。(比如slf4j-api.jar) 可以在某一个项目下使用 mvn dependency:tree D:\CODE\other\framework\framework-cache>mvn dependency:tree
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building framework :: Module :: Cache 1.0.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ framework-cache ---
[INFO] com.framework:framework-cache:jar:1.0.2-SNAPSHOT
[INFO] +- com.framework:framework-tool:jar:1.0.2-SNAPSHOT:compile
[INFO] |  +- com.framework:framework-common:jar:1.0.2-SNAPSHOT:compile
[INFO] |  |  +- org.apache.commons:commons-lang3:jar:3.3.2:compile
[INFO] |  |  +- commons-collections:commons-collections:jar:3.2.1:compile
[INFO] |  |  +- commons-codec:commons-codec:jar:1.10:compile
[INFO] |  |  \- org.projectlombok:lombok:jar:1.16.8:compile
[INFO] |  +- org.apache.logging.log4j:log4j-api:jar:2.5:compile
[INFO] |  +- org.apache.logging.log4j:log4j-core:jar:2.5:compile
[INFO] |  +- com.alibaba:fastjson:jar:1.2.8:compile
[INFO] |  +- com.fasterxml.jackson.core:jackson-databind:jar:2.4.0:compile
[INFO] |  |  +- com.fasterxml.jackson.core:jackson-annotations:jar:2.4.0:compile
[INFO] |  |  \- com.fasterxml.jackson.core:jackson-core:jar:2.4.0:compile
[INFO] |  +- org.reflections:reflections:jar:0.9.10:compile
[INFO] |  |  +- com.google.guava:guava:jar:15.0:compile
[INFO] |  |  +- org.javassist:javassist:jar:3.20.0-GA:compile
[INFO] |  |  \- com.google.code.findbugs:annotations:jar:2.0.1:compile
[INFO] |  \- junit:junit:jar:4.12:compile
[INFO] |     \- org.hamcrest:hamcrest-core:jar:1.3:compile
[INFO] +- org.springframework:spring-context:jar:4.2.3.RELEASE:compile
[INFO] |  +- org.springframework:spring-aop:jar:4.2.3.RELEASE:compile
[INFO] |  +- org.springframework:spring-beans:jar:4.2.3.RELEASE:compile
[INFO] |  +- org.springframework:spring-core:jar:4.2.3.RELEASE:compile
[INFO] |  |  \- commons-logging:commons-logging:jar:1.2:compile
[INFO] |  \- org.springframework:spring-expression:jar:4.2.3.RELEASE:compile
[INFO] +- org.springframework.data:spring-data-redis:jar:1.3.2.RELEASE:compile
[INFO] |  +- org.springframework:spring-context-support:jar:4.2.3.RELEASE:compile
[INFO] |  +- org.slf4j:slf4j-api:jar:1.7.5:compile
[INFO] |  \- org.springframework:spring-tx:jar:4.2.3.RELEASE:compile
[INFO] +- redis.clients:jedis:jar:2.4.2:compile
[INFO] |  \- org.apache.commons:commons-pool2:jar:2.0:compile
[INFO] +- aopalliance:aopalliance:jar:1.0:compile
[INFO] +- org.aspectj:aspectjweaver:jar:1.8.5:compile
[INFO] +- org.aspectj:aspectjrt:jar:1.8.5:compile
[INFO] \- commons-net:commons-net:jar:3.5:compile
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.927 s
[INFO] Finished at: 2017-01-24T10:57:41+08:00
[INFO] Final Memory: 15M/304M
[INFO] ------------------------------------------------------------------------
 排除依赖 exclusion</description><link>https://houbb.github.io/2016/10/22/maven</link><article>侯宾宾</article><guid/><pubDate>2016-10-22</pubDate></item><item><title>MySQL</title><description>MySQL 侯宾宾      mysql      SQL      2016-10-17 MySQL Data Type Index Index not work case Full-Text index Stored Procedure & Trigger (5.0+) 自连接查询 并发控制 Config MySQL MySQL Remote Connection make remote access enable table name sensitive mysql开启日志功能 备份还原 Dead lock 备份实战 MySQL MySQL is the world’s most popular open source database. zh_CN Data Type Data Type Rules: The smaller, the better As simple as possible Avoid use NULL Index The max limit number of mysql index is —— 16 Index not work case != or <> use fun(); JOIN, only use index when primary key has the same type with foreign key; LIKE, REGEX only use index when first char is not wildcard. like '%abc'   ×
like 'abc%'   √
 ORDER BY: only use when the where condition is not a expression. It’s not works well when has multi-table. index not works well when one column has many the same value, like (0/1), (y/n) Full-Text index full-text The most time consuming sql may like this: SELECT * FROM `table_name` WHERE `column_name` LIKE '%word%'
 create full-text CREATE TABLE full_text(
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL COMMENT '名称',
  `info` VARCHAR(128) NULL DEFAULT '' COMMENT '信息',
  PRIMARY KEY (`id`),
  FULLTEXT (`name`, `info`) COMMENT '添加全文索引'
) COMMENT = '全文检索' ENGINE = MyISAM;

INSERT INTO full_text (name, info) VALUES
  ('mark the word', 'you can mark the word'),
  ('kill the word', 'you can kill the word'),
  ('like the word', 'you can like the word'),
  ('miss the word', 'you can miss the word'),
  ('think the word', 'you can think the word');
 query SELECT * FROM full_text WHERE MATCH(`name`, `info`) AGAINST ('think like mark') > 0.0001;
SELECT * FROM full_text WHERE MATCH(`name`, `info`) AGAINST ('you word miss') > 0.0001;
 Stored Procedure & Trigger (5.0+) Stored Procedure define DROP FUNCTION IF EXISTS shortLen;

CREATE FUNCTION shortLen(s VARCHAR(255), n INT)
  RETURNS VARCHAR(255)
  BEGIN
    IF ISNULL(s)
    THEN
      RETURN '';
    ELSEIF n < 15
      THEN
        RETURN LEFT(s, n);
    ELSE
      IF CHAR_LENGTH(s) <= n
      THEN
        RETURN s;
      ELSE
        RETURN CONCAT(LEFT(s, n - 10), '...', RIGHT(s, 5));
      END IF;
    END IF;
  END;
 use SELECT shortLen('asdfasdfasdfasdfasfdasdgasdgfadghfgdhfgjghj', 15);
 result asdfa...gjghj
 show functions SHOW FUNCTION STATUS;

SHOW CREATE FUNCTION shortLen;
 自连接查询 $   vi ~/.base_profile

alias mysql=/usr/local/mysql/bin/mysql

$   source ~/.base_profile
 Create table DROP TABLE IF EXISTS `t_score`;
CREATE TABLE `t_score`(
  id BIGINT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  score INT(11) NOT NULL DEFAULT 0,
  student_id BIGINT(20) NOT NULL,
  type INT(11) NOT NULL COMMENT '类型, 0->语文, 1->数学'
) COMMENT '分数表';

INSERT INTO t_score (score, student_id, type) VALUES
  (50, 1, 0),
  (60, 1, 1),
  (78, 2, 0),
  (99, 2, 1)
;
 Query all mysql> SELECT * FROM t_score;
+----+-------+------------+------+
| id | score | student_id | type |
+----+-------+------------+------+
|  1 |    50 |          1 |    0 |
|  2 |    60 |          1 |    1 |
|  3 |    78 |          2 |    0 |
|  4 |    99 |          2 |    1 |
+----+-------+------------+------+
4 rows in set (0.00 sec)
 Query student’s math and chinese score mysql> SELECT cs.score, ms.score, cs.student_id
    -> FROM t_score AS cs, t_score AS ms
    -> WHERE cs.student_id=ms.student_id
    -> AND cs.type=0 AND ms.type=1;
+-------+-------+------------+
| score | score | student_id |
+-------+-------+------------+
|    50 |    60 |          1 |
|    78 |    99 |          2 |
+-------+-------+------------+
2 rows in set (0.00 sec)
 并发控制 读写锁 读锁 共享锁, 多个客户之间读取资源互不干扰。 写锁 排他锁, 会阻塞其他的读锁和写锁。 锁粒度 Table Lock 消耗最小。一个用户进行更新、删除、创建时,获取写锁,阻塞其他用户的读写。无写锁时,读锁互不影响。 Row Lock 最大程度支持并发。开销较大。 Transaction Create table for test CREATE TABLE `t_test`(
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `info` VARCHAR(100) DEFAULT NULL,
  `create_time` TIMESTAMP NULL DEFAULT NULL
) COMMENT 'test table';
 Begin transaction START TRANSACTION | BEGIN [WORK]
    COMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]
    ROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]
    SET AUTOCOMMIT = {0 | 1}
 session_1 session_2 start transaction; Query OK, 0 rows affected (0.00 sec) insert into t_test (info, create_time) VALUES ('1 insert', NOW()); Query OK, 1 row affected (0.00 sec) select * from t_test; Empty set (0.00 sec) commit; Query OK, 0 rows affected (0.00 sec) mysql> select * from t_test; +----+----------+---------------------+ | id | info | create_time | +----+----------+---------------------+ | 1 | 1 insert | 2016-10-17 22:59:05 | +----+----------+---------------------+ 1 row in set (0.00 sec)| 事务是一组原子性的SQL查询,内部的操作,要么全部成功,要么全部失败。 Atomicity 不可再分 Consistency 从一种一致性状态到另一种一致性状态 Isolation 事务在最终提交之前,所有的修改操作对其他事务都是不可见的 Durability 事务一旦提交,修改将会在数据库持久生效 Isolation level Isolation Level dirty read non-repeatable read phantom read add lock read uncommitted read yes yes yes no committed read no yes yes no repeatable read no no yes no uncommitted read no yes yes no serializable no no no yes Dead Lock 当两个或者两个以上事务在同一资源上相互占用,并请求锁定占用对方的资源,会造成死锁。 如 Innodb 引擎,会检测死锁,并立刻返回错误。 Config MySQL 降低初始化占用内存 Edit my.cnf file in /etc/mysql performance_schema_max_table_instances=600
table_definition_cache=400
table_open_cache=256
 timestamp CREATE TABLE test(
`create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
COMMENT '创建时，默认为系统当前时间。以后不再刷新',

`update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
COMMENT '创建/修改时刷新时间，同TIMESTAMP'
)ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='test';
 MySQL Remote Connection Link to localhost $   mysql -h localhost -u root -p
 Link to remote houbinbindeMacBook-Pro:~ houbinbin$ mysql -h remote -uroot -p
Enter password:
ERROR 2003 (HY000): Can't connect to MySQL server on 'remote' (61)
 make remote access enable Login Remote MySQL mysql> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> select Host,User from user;
+-------------------------+------------------+
| Host                    | User             |
+-------------------------+------------------+
| 127.0.0.1               | root             |
| ::1                     | root             |
| izuf60ahcky4k4nfv470juz | root             |
| localhost               | debian-sys-maint |
| localhost               | root             |
+-------------------------+------------------+
5 rows in set (0.00 sec)
 Update mysql.user run this sql: UPDATE `user` SET Host='%' WHERE User ='root' LIMIT 1;

Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0
 after update: mysql> select Host,User from user;
+-------------------------+------------------+
| Host                    | User             |
+-------------------------+------------------+
| %                       | root             |
| 127.0.0.1               | root             |
| ::1                     | root             |
| izuf60ahcky4k4nfv470juz | root             |
| localhost               | debian-sys-maint |
+-------------------------+------------------+
5 rows in set (0.00 sec)
 use flush privileges; to flush. Edit my.cnf file in /etc/mysql comment the line of bind-address #
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
# bind-address          = 127.0.0.1
 use command to restart mysql root@iZuf60ahcky4k4nfv470juZ:~# service mysql restart
mysql stop/waiting
mysql start/running, process 2493
 table name sensitive Table name in ubuntu is case-sensitive, so. If you want it works like in windows. Just: add the content under [mysqld], and restart mysql. vi /etc/mysql/my.cnf

lower_case_table_names = 1
 and then use show variables like 'lower_%' test it: +------------------------+-------+
| Variable_name          | Value |
+------------------------+-------+
| lower_case_file_system | OFF   |
| lower_case_table_names | 1     |
+------------------------+-------+
 mysql开启日志功能 查看是否开启 mysql> show variables like 'log_bin';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| log_bin       | OFF   |
+---------------+-------+
1 row in set (0.00 sec)
 查看当前日志 mysql> show variables like 'log_bin';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| log_bin       | OFF   |
+---------------+-------+
1 row in set (0.00 sec)

mysql> show master status;
Empty set (0.00 sec)
 编辑配置文件 my.cnf vi /etc/mysql/my.cnf
 开启日志: log-bin = /var/mysqllog/logbin.log
 查看状态 service mysql restart

mysql>  show variables like 'log_bin';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| log_bin       | ON    |
+---------------+-------+
1 row in set (0.00 sec)
mysql> show master status;
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000001 |      107 |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)
 备份还原 1、备份一个数据库 mysqldump基本语法： mysqldump -u username -p dbname table1 table2 ...-> BackupName.sql
 其中： dbname参数表示数据库的名称； table1和table2参数表示需要备份的表的名称，为空则整个数据库备份； BackupName.sql 参数表设计备份文件的名称，文件名前面可以加上一个绝对路径。通常将数据库被分成一个后缀名为sql的文件； 如: mysqldump -u root -p blog_view  > /root/backup/blog_view.sql;
 备份多个数据库 mysqldump -u username -p --databases dbname2 dbname2 > Backup.sql
 备份所有数据库 mysqldump -u username -p --all-databases > BackupName.sql
 2、还原一个数据库 mysql -u root -p [dbname] < backup.sq
 定时备份 创建定时备份脚本: vi backup_blog_view.sh
 添加内容如下: #!/bin/bash
mysqldump -uroot -p123456 blog_view > /root/backup/blog_view_$(date +%Y%m%d_%H%M%S).sql
 进行备份压缩: #!/bin/bash
mysqldump -uroot -p123456 blog_view | gzip > /root/backup/blog_view_$(date +%Y%m%d_%H%M%S).sql.gz
 添加权限,执行测试: chmod +x backup_blog_view.sh
./backup_blog_view.sh
 定时运行 ubuntu 下使用 crontab $ ~# crontab -e 添加内容如下: 0 2 * * * /root/shell/backup_blog_view.sh
 意思为凌晨2点执行备份脚本。 重启 CRON 进程: ~# /etc/init.d/cron restart
 Dead lock mysql 更新,根据普通索引。会首先锁定普通索引, 在锁定主索引 mysql 根据主键更新会直接锁定主索引 二者同时使用,会造成锁争用——死锁。 最佳实践: 每次更新或者删除,根据索引条件查询出记录。再根据主键进行删除或更新。 备份实战 切换至root. Ubuntu14.04 默认mysql5.5.53,现在将其升级到 5.6 Prepare reboot $   sudo reboot
 backup $ pwd
/home/hbb/backup

$ mysqldump -uroot -p123456 --all-databases > backup_all_20170101.sql
 stop mysql $   sudo /etc/init.d/mysql stop
 remove mysql apt-get remove mysql-server
apt-get --purge remove mysql-server
apt-get autoremove
 update and upgrade apt-get apt-get update
apt-get upgrade
 upgrade会更新很多东西,可以跳过不执行。 install mysql-server-5.6 apt-get install mysql-server-5.6
 re-back mysql -uroot -p123456 < backup_all_20170101.sql
 version $ mysql --version;
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapperv</description><link>https://houbb.github.io/2016/10/17/MySQL</link><article>侯宾宾</article><guid/><pubDate>2016-10-17</pubDate></item><item><title>Logstash</title><description>Logstash 侯宾宾      logstash      Tools      2016-10-16 Logstash Install in Mac Usage Build Log Sys Log4j2 LogStatsh ElasticSearch Kibana More Logstash Collect, Enrich & Transport Data. Logstash is a flexible, open source, data collection, enrichment, and transport pipeline designed to efficiently process a growing list of log, event, and unstructured data sources for distribution into a variety of outputs, including Elasticsearch. logstash Requirement Java 7 or higher is required for Logstash 2.x houbinbindeMacBook-Pro:bin houbinbin$ java -version
java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
 Install in Mac Title: Install logstash Download->Config: logstash.conf Config->Run: bin/logstash -f conf/logstash.conf Download Download and unzip houbinbindeMacBook-Pro:Downloads houbinbin$ tar -zxf logstash-all-plugins-2.4.0.tar.gz
 move it into tools package houbinbindeMacBook-Pro:Downloads houbinbin$ ls | grep -i logstash
logstash-2.4.0
logstash-all-plugins-2.4.0.tar.gz
houbinbindeMacBook-Pro:Downloads houbinbin$ mv logstash-2.4.0 ~/it/tools/logstash
 Config Prepare config file logstash.conf houbinbindeMacBook-Pro:Downloads houbinbin$ cd ~/it/tools/logstash/
houbinbindeMacBook-Pro:logstash houbinbin$ ls
CHANGELOG.md		Gemfile			LICENSE			bin			vendor
CONTRIBUTORS		Gemfile.jruby-1.9.lock	NOTICE.TXT		lib
houbinbindeMacBook-Pro:logstash houbinbin$ mkdir conf
houbinbindeMacBook-Pro:logstash houbinbin$ cd conf/
houbinbindeMacBook-Pro:config houbinbin$ ls
houbinbindeMacBook-Pro:config houbinbin$ vi logstash.conf
houbinbindeMacBook-Pro:config houbinbin$ ls
logstash.conf
 Edit it’s content like this for test: input {
      stdin{}
}
# filter is optional
#filter {
#}
output {
    stdout{
        codec => rubydebug
    }
}
 Run houbinbindeMacBook-Pro:logstash houbinbin$ bin/logstash -f conf/logstash.conf
Settings: Default pipeline workers: 8
Pipeline main started
 Enter content testing in terminal to test: testing
{
       "message" => "testing",
      "@version" => "1",
    "@timestamp" => "2016-10-16T03:45:01.064Z",
          "host" => "houbinbindeMacBook-Pro.local"
}
 Usage Show plugin list $   bin/plugin list
The use of bin/plugin is deprecated and will be removed in a feature release. Please use bin/logstash-plugin

houbinbindeMacBook-Pro:logstash houbinbin$ bin/logstash-plugin
Usage:
    bin/logstash-plugin [OPTIONS] SUBCOMMAND [ARG] ...

Parameters:
    SUBCOMMAND                    subcommand
    [ARG] ...                     subcommand arguments

Subcommands:
    install                       Install a plugin
    uninstall                     Uninstall a plugin
    update                        Update a plugin
    pack                          Package currently installed plugins
    unpack                        Unpack packaged plugins
    list                          List all installed plugins
    generate                      Create the foundation for a new plugin.
 So, we can use bin/logstash-plugin list to show plugin list. Attention Default, it has plugin named logstash-input-log4j, it’s for log4j, not log4j2 Install plugin for log4j2 Attention 1、It’s a pity that this plugin only support logstatsh version (1.5+, 2.1] 2、Before you install this plugin, you should start logstash first start logstash houbinbindeMacBook-Pro:logstash houbinbin$ bin/logstash -f conf/logstash.conf
Settings: Default pipeline workers: 8
Pipeline main started
 install houbinbindeMacBook-Pro:logstash houbinbin$ bin/logstash-plugin install logstash-input-log4j2
LogStash::GemfileError: duplicate gem logstash-filter-date
         add_gem at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/gemfile.rb:102
             gem at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/gemfile.rb:200
          (eval) at (eval):109
   instance_eval at org/jruby/RubyBasicObject.java:1598
           parse at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/gemfile.rb:188
            load at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/gemfile.rb:19
         gemfile at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/command.rb:4
  verify_remote! at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/install.rb:50
         execute at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/install.rb:28
             run at /Users/houbinbin/it/tools/logstash/vendor/bundle/jruby/1.9/gems/clamp-0.6.5/lib/clamp/command.rb:67
         execute at /Users/houbinbin/it/tools/logstash/vendor/bundle/jruby/1.9/gems/clamp-0.6.5/lib/clamp/subcommand/execution.rb:11
             run at /Users/houbinbin/it/tools/logstash/vendor/bundle/jruby/1.9/gems/clamp-0.6.5/lib/clamp/command.rb:67
             run at /Users/houbinbin/it/tools/logstash/vendor/bundle/jruby/1.9/gems/clamp-0.6.5/lib/clamp/command.rb:132
          (root) at /Users/houbinbin/it/tools/logstash/lib/pluginmanager/main.rb:43
 En, that’s a question… It seems we should go another way ==! Build Log Sys ELK Blog zh_CN Log4j2+ELK zh_CN We want to build log system use log4j2 with ELK(ElasticSearch+Logstash+Kibana) Log4j2 log4j2.xml The whole project demo is here The info about SocketAppender <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
        <Socket name="Logstash" host="127.0.0.1" port="7000" protocol="TCP">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Socket>
    </Appenders>

    <Loggers>
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="Logstash"/>
        </Root>
    </Loggers>
</Configuration>
 LogService.java and the simple log as public class LogService {
  static final Logger logger = LogManager.getLogger(LogService.class);

  public static void main(String[] args) {
    logger.info("log test...");
  }
}
 LogStatsh add micro_wiki.conf input {
  tcp {
    host => "0.0.0.0"
    port => "7000"
    mode => "server"
    type => "microwiki"
    add_field => {
      "name" => "Ryo"
    }
  }
}
filter {
}
output {
  stdout {
    codec => rubydebug
  }
}
 run logstash houbinbindeMacBook-Pro:logstash-2.4.0 houbinbin$ bin/logstash -f conf/micro_wiki.conf
Settings: Default pipeline workers: 8
Pipeline main started
 run java { "message" => "16:44:10.428 [main] INFO com.ryo.service.LogService - log test...", "@version" => "1", "@timestamp" => "2016-10-16T08:44:10.430Z", "host" => "127.0.0.1", "port" => 53150, "type" => "microwiki", "name" => "Ryo" } ElasticSearch Edit the micro_wiki.conf In order to let the logger of Logstash trans into ElasticSearch, we edit the micro_wiki.conf of Logstash, like this: input {
  tcp {
    host => "0.0.0.0"
    port => "7000"
    mode => "server"
    type => "microwiki"
    add_field => {
      "name" => "Ryo"
    }
  }
}
filter {
}
output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    hosts => ["127.0.0.1:9200"]
    action => "index"
    codec => rubydebug
    index => "microwiki-%{+YYYY.MM.dd}"
    template_name => "microwiki"
  }
}
 After edit this, we should restart logstash, you may meet error like Could not start TCP server: Address in use {:host=>"0.0.0.0", :port=>7000, :level=>:error}
Pipeline aborted due to error {:exception=>"Errno::EADDRINUSE", :backtrace=>["org/jruby/ext/socket/RubyTCPServer.java:118:in `initialize'",
"org/jruby/RubyIO.java:871:in `new'", "/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-input-tcp-3.0.6/lib/logstash/inputs/tcp.rb:244:in
`new_server_socket'", "/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-input-tcp-3.0.6/lib/logstash/inputs/tcp.rb:79:in `register'",
"/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-core-2.4.0-java/lib/logstash/pipeline.rb:330:in `start_inputs'",
"org/jruby/RubyArray.java:1613:in `each'", "/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-core-2.4.0-java/lib/logstash/pipeline.rb:329:in
`start_inputs'", "/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-core-2.4.0-java/lib/logstash/pipeline.rb:180:in `start_workers'",
"/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-core-2.4.0-java/lib/logstash/pipeline.rb:136:in `run'",
"/Users/houbinbin/it/tools/logstash/logstash-2.4.0/vendor/bundle/jruby/1.9/gems/logstash-core-2.4.0-java/lib/logstash/agent.rb:491:in `start_pipeline'"],
:level=>:error}
 use command lsof -n -P| grep 7000 idea      4138 houbinbin  txt      REG                1,4   1257000  100928 /Library/Fonts/Copperplate.ttc
Google    4142 houbinbin  txt      REG                1,4   1257000  100928 /Library/Fonts/Copperplate.ttc
java      6699 houbinbin    9u    IPv6 0xf1b9bfa3b241e019       0t0     TCP *:7000 (LISTEN)
 use command sudo kill -9 id to kill it. Last, start logstash bin/logstash -f conf/micro_wiki.conf Edit the elasticsearch.yml cluster.name: MicroWiki-Cluster
node.name: microwiki-node1
network.host: 127.0.0.1
http.port: 9200
 Run elasticsearch Use bin/elasticsearch -d Starts Elasticsearch in the background Run java and use elasticsearch to search LOGGER.info("log test with 2016-10-16 17:06:02...");
 Enter http://localhost:9200/microwiki-2016.10.16/_search in browser, and get: { "took":21, "timed_out":false, "_shards":{ "total":5, "successful":5, "failed":0 }, "hits":{ "total":1, "max_score":1, "hits":[ { "_index":"microwiki-2016.10.16", "_type":"microwiki", "_id":"AVfMvhC_IjTkofXOa5qh", "_score":1, "_source":{ "message":"17:06:30.417 [main] INFO com.ryo.service.LogService - log test with 2016-10-16 17:06:02...", "@version":"1", "@timestamp":"2016-10-16T09:06:30.421Z", "host":"127.0.0.1", "port":53511, "type":"microwiki", "name":"Ryo" } } ] } } Kibana Edit kibana.yml Connect kibana with elasticsearch. # Kibana is served by a back end server. This controls which port to use.
# server.port: 5601
server.port: 5601

# The host to bind the server to.
# server.host: "0.0.0.0"
server.host: 127.0.0.1

# If you are running kibana behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
# server.basePath: ""

# The maximum payload size in bytes on incoming server requests.
# server.maxPayloadBytes: 1048576

# The Elasticsearch instance to use for all your queries.
elasticsearch.url: "http://localhost:9200"
 Run   houbinbindeMacBook-Pro:kibana houbinbin$ bin/kibana

  log   [17:15:05.664] [info][status][plugin:kibana@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.688] [info][status][plugin:elasticsearch@1.0.0] Status changed from uninitialized to yellow - Waiting for Elasticsearch
  log   [17:15:05.704] [info][status][plugin:kbn_vislib_vis_types@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.721] [info][status][plugin:markdown_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.724] [info][status][plugin:metric_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.726] [info][status][plugin:spyModes@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.739] [info][status][plugin:statusPage@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.745] [info][status][plugin:table_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [17:15:05.749] [info][listening] Server running at http://127.0.0.1:5601
  log   [17:15:10.753] [info][status][plugin:elasticsearch@1.0.0] Status changed from yellow to yellow - No existing Kibana index found
  log   [17:15:13.332] [info][status][plugin:elasticsearch@1.0.0] Status changed from yellow to green - Kibana index ready
 Visit Enter localhost:5601, and add index like this: 默认为 logstash-*, 可以修改为 microwiki-* 即可。 可关注是否有log4j2的插件,不用如此麻烦。 More logstash learn zh_CN logstash api zh_CN</description><link>https://houbb.github.io/2016/10/16/logstash</link><article>侯宾宾</article><guid/><pubDate>2016-10-16</pubDate></item><item><title>Kibana</title><description>Kibana 侯宾宾      kibana      Tools      2016-10-16 Kibana Install in Mac Kibana Kibana is an open source data visualization platform that allows you to interact with your data through stunning, powerful graphics that can be combined into custom dashboards that help you share insights from your data far and wide. kibana User guide blog_zh_CN Install in Mac Download Download and unzip it $   tar -zxf kibana-4.6.1-darwin-x86_64.tar.gz
 move it into tools package mv kibana-4.6.1-darwin-x86_64 ~/it/tools/kibana
 Attention Kibana 4.6.x requires Elasticsearch 2.4.x Config Edit the config/kibana.yml, set elasticsearch.url to your elasticsearch instance # The Elasticsearch instance to use for all your queries.
elasticsearch.url: "http://localhost:9200"
 Run Run /bin/kibana houbinbindeMacBook-Pro:bin houbinbin$ ./kibana
  log   [09:44:48.294] [info][status][plugin:kibana@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.320] [info][status][plugin:elasticsearch@1.0.0] Status changed from uninitialized to yellow - Waiting for Elasticsearch
  log   [09:44:48.348] [info][status][plugin:kbn_vislib_vis_types@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.351] [info][status][plugin:markdown_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.354] [info][status][plugin:metric_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.359] [info][status][plugin:spyModes@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.369] [info][status][plugin:statusPage@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.372] [info][status][plugin:table_vis@1.0.0] Status changed from uninitialized to green - Ready
  log   [09:44:48.386] [info][listening] Server running at http://0.0.0.0:5601
  log   [09:44:53.402] [info][status][plugin:elasticsearch@1.0.0] Status changed from yellow to yellow - No existing Kibana index found
  log   [09:44:56.305] [info][status][plugin:elasticsearch@1.0.0] Status changed from yellow to green - Kibana index ready
 Visit Enter localhost:5601 in browser, you can see</description><link>https://houbb.github.io/2016/10/16/kibana</link><article>侯宾宾</article><guid/><pubDate>2016-10-16</pubDate></item><item><title>Elasticsearch</title><description>Elasticsearch 侯宾宾      elasticsearch      Tools      2016-10-16 Elasticsearch Install in Mac Lucene Search Elasticsearch Search & Analyze Data in Real Time. Elasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. Elasticsearch User Guide Install in Mac Download->Unzip: Unzip->Run: Run->Visit: Download Download and unzip $   tar -zxf elasticsearch-2.4.1.tar.gz
 move it into tools package $   mv elasticsearch-2.4.1 ~/it/tools/elasticsearch
 Run Run bin/elasticsearch on Unix, or use bin/elasticsearch & run background processes. houbinbindeMacBook-Pro:Downloads houbinbin$ cd ~/it/tools/elasticsearch/
houbinbindeMacBook-Pro:elasticsearch houbinbin$ ls
LICENSE.txt	NOTICE.txt	README.textile	bin		config		lib		modules
houbinbindeMacBook-Pro:elasticsearch houbinbin$ cd bin
houbinbindeMacBook-Pro:bin houbinbin$ ls
elasticsearch			elasticsearch-service-x64.exe	elasticsearch.bat		elasticsearch.in.sh		plugin.bat
elasticsearch-service-mgr.exe	elasticsearch-service-x86.exe	elasticsearch.in.bat		plugin				service.bat
houbinbindeMacBook-Pro:bin houbinbin$ ./elasticsearch
[2016-10-16 09:19:27,876][INFO ][node                     ] [Raman] version[2.4.1], pid[4391], build[c67dc32/2016-09-27T18:57:55Z]
[2016-10-16 09:19:27,877][INFO ][node                     ] [Raman] initializing ...
[2016-10-16 09:19:28,321][INFO ][plugins                  ] [Raman] modules [reindex, lang-expression, lang-groovy], plugins [], sites []
[2016-10-16 09:19:28,343][INFO ][env                      ] [Raman] using [1] data paths, mounts [[/ (/dev/disk1)]], net usable_space [122.7gb], net total_space [232.6gb], spins? [unknown], types [hfs]
[2016-10-16 09:19:28,343][INFO ][env                      ] [Raman] heap size [989.8mb], compressed ordinary object pointers [true]
[2016-10-16 09:19:28,343][WARN ][env                      ] [Raman] max file descriptors [10240] for elasticsearch process likely too low, consider increasing to at least [65536]
[2016-10-16 09:19:29,437][INFO ][node                     ] [Raman] initialized
[2016-10-16 09:19:29,437][INFO ][node                     ] [Raman] starting ...
[2016-10-16 09:19:29,498][INFO ][transport                ] [Raman] publish_address {127.0.0.1:9300}, bound_addresses {[fe80::1]:9300}, {[::1]:9300}, {127.0.0.1:9300}
[2016-10-16 09:19:29,503][INFO ][discovery                ] [Raman] elasticsearch/K1AbiuXxQKifwJIqtFoW0A
[2016-10-16 09:19:32,534][INFO ][cluster.service          ] [Raman] new_master {Raman}{K1AbiuXxQKifwJIqtFoW0A}{127.0.0.1}{127.0.0.1:9300}, reason: zen-disco-join(elected_as_master, [0] joins received)
[2016-10-16 09:19:32,548][INFO ][http                     ] [Raman] publish_address {127.0.0.1:9200}, bound_addresses {[fe80::1]:9200}, {[::1]:9200}, {127.0.0.1:9200}
[2016-10-16 09:19:32,548][INFO ][node                     ] [Raman] started
[2016-10-16 09:19:32,566][INFO ][gateway                  ] [Raman] recovered [0] indices into cluster_state
 Visit Input localhost:9200 in browser to visit it, or use curl localhost:9200 to get info houbinbindeMacBook-Pro:~ houbinbin$ curl localhost:9200
{
  "name" : "Raman",
  "cluster_name" : "elasticsearch",
  "cluster_uuid" : "WFMtdS4GT4m8w7sdHE5i7Q",
  "version" : {
    "number" : "2.4.1",
    "build_hash" : "c67dc32e24162035d18d6fe1e952c4cbcbe79d16",
    "build_timestamp" : "2016-09-27T18:57:55Z",
    "build_snapshot" : false,
    "lucene_version" : "5.5.2"
  },
  "tagline" : "You Know, for Search"
}
 Lucene Search search zh_CN FULLTEXT Input a word in search input, like hello, use "hello world" to search a phrase. Field Finite field search: field:value Accurate search: field:"value" http.code:404 doc that http status code is 404 _exists_:http：result contains http field _missing_:http：result not contains http field Wildcard ? one char * zero or more char The two wildcard should’t the first char. Fuzzy Search word~ matches word cromm~0.3 matches from & chrome Similar Search "select where"~3 means select and where divide by 3 or less words. Range length:[100 TO 200] date:{"now-6h" TO "now"} [ ] includes endpoint，{ } not includes. Logic + must has this - must not has this +apache -jakarta test means must has apache, not has jakarta Special + - && || ! () {} [] ^" ~ * ? : \</description><link>https://houbb.github.io/2016/10/16/elasticsearch</link><article>侯宾宾</article><guid/><pubDate>2016-10-16</pubDate></item><item><title>Mac</title><description>Mac 侯宾宾      mac      OS      2016-10-15 key icon Start apps Command File tree Get ip .bash_profile zip & unzip Mac 制作 ubuntu 启动U盘 JDK 配置 key icon icon key ⌘ command ⌥ option ⇧ shift ⇪ caps lock ⌃ control ↩ return ⌅ enter ↖ home ↘ end ⇟ pagedown ⇞ pageup ⎋ esc Start apps Use ⌘+space to start spotlight, and search what you want run. Command File tree zh_CN find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
 install tree Get ip $   ifconfig
 port find port sudo lsof -i :8080

COMMAND   PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
java    15072 houbinbin   48u  IPv6 0xf1b9bfa3c85fd519      0t0  TCP *:http-alt (LISTEN)
 kill thread sudo kill -9 15072
 .bash_profile 文件修改错误,导致命令无法使用。 export PATH=/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
 然后修改回来 source ~/.bash_profile
 make it work at once. add new bin M3_HOME=/usr/local/maven/maven3.3.9
ARC_HOME=/Users/houbinbin/it/code/arcanist

PATH=$ARC_HOME/bin:$M3_HOME/bin:$PATH
 zip & unzip zip 最通俗的用法 zip -q -r -e -m -o myfile.zip someThing
 -q 表示不显示压缩进度状态 -r 表示子目录子文件全部压缩为zip //这部比较重要，不然的话只有something这个文件夹被压缩，里面的没有被压缩进去 -e 表示你的压缩文件需要加密，终端会提示你输入密码的 // 还有种加密方法，这种是直接在命令行里做的，比如zip -r -P Password01! modudu.zip SomeDir, 就直接用Password01!来加密modudu.zip了。 -m 表示压缩完删除原文件 -o 表示设置所有被压缩文件的最后修改时间为当前压缩时间 当跨目录的时候是这么操作的 zip -q -r -e -m -o ‘\user\someone\someDir\someFile.zip’ ‘\users\someDir’ unzip unzip [选项] 压缩文件名.zip
 各选项的含义分别为： -x 文件列表 解压缩文件，但不包括指定的file文件。 -v 查看压缩文件目录，但不解压。 -t 测试文件有无损坏，但不解压。 -d 目录 把压缩文件解到指定目录下。 -z 只显示压缩文件的注解。 -n 不覆盖已经存在的文件。 -o 覆盖已存在的文件且不要求用户确认。 -j 不重建文档的目录结构，把所有文件解压到同一目录下。 Mac 制作 ubuntu 启动U盘 blog zh_CN blog2 zh_CN JDK 配置 一般而言,是不用关心JDK配置的。可是有时需要使用ROOT权限时,如果涉及到JDK。可能会找不到。 前提先提升权限 su
 获取JDK位置 $ /usr/libexec/java_home
/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home
 全局配置JDK vi /etc/profile 添加内容如下: JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home
CLASSPAHT=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
PATH=$JAVA_HOME/bin:$PATH:
export JAVA_HOME
export CLASSPATH
export PATH
 使其立即生效 source /etc/profile
 test # echo $JAVA_HOME
/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home</description><link>https://houbb.github.io/2016/10/15/Mac</link><article>侯宾宾</article><guid/><pubDate>2016-10-15</pubDate></item><item><title>Docker</title><description>Docker 侯宾宾      docker      Tools      2016-10-15 Docker Get Start More Docker Docker is the world’s leading software containerization platform docker zh_CN Get Start DOCKER FOR MAC An integrated, easy-to-deploy environment for building, assembling, and shipping applications from a Mac, Docker for Mac is a native Mac application architected from scratch, with a native user interface and auto-update capability, deeply integrated with OS X native virtualization, Hypervisor Framework, networking and file system, making it faster and more reliable than previous ways of getting Docker on a Mac. Requirements Mac must be a 2010 or newer model, with Intel’s hardware support for memory management unit (MMU) virtualization; i.e., Extended Page Tables (EPT) OS X 10.10.3 Yosemite or newer At least 4GB of RAM Download->Install: Install->Run Project: Install and Run After run the docker, you can see the [] in top status bar. Input docker info in terminal line. houbinbindeMacBook-Pro:/ houbinbin$ docker info
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 1.12.1
Storage Driver: aufs
 Root Dir: /var/lib/docker/aufs
 Backing Filesystem: extfs
 Dirs: 0
 Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: host bridge null overlay
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Security Options: seccomp
Kernel Version: 4.4.20-moby
Operating System: Alpine Linux v3.4
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 1.952 GiB
Name: moby
ID: BZ32:YMHS:BPMD:JBDT:UABV:BG4J:7XDD:I6HO:6GZY:WDME:22DB:7ULC
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): true
 File Descriptors: 16
 Goroutines: 27
 System Time: 2016-10-15T15:21:07.932969294Z
 EventsListeners: 1
No Proxy: *.local, 169.254/16
Registry: https://index.docker.io/v1/
Insecure Registries:
 127.0.0.0/8
 Version of Docker Engine、Compose、Machine houbinbindeMacBook-Pro:/ houbinbin$ docker --version
Docker version 1.12.1, build 6f9534c
houbinbindeMacBook-Pro:/ houbinbin$ docker-compose --version
docker-compose version 1.8.0, build f3628c7
houbinbindeMacBook-Pro:/ houbinbin$ docker-machine --version
docker-machine version 0.8.1, build 41b3b25
houbinbindeMacBook-Pro:/ houbinbin$
 Explore the application and run examples 1、Start a Dockerized web server docker run -d -p 80:80 --name webserver nginx, If the image is not found locally, Docker will pull it from Docker Hub. houbinbindeMacBook-Pro:bin houbinbin$ docker run -d -p 80:80 --name webserver nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
6a5a5368e0c2: Pull complete
20a0fbbae148: Pull complete
2fbd37c8684b: Pull complete
Digest: sha256:e40499ca855c9edfb212e1c3ee1a6ba8b2d873a294d897b4840d49f94d20487c
Status: Downloaded newer image for nginx:latest
864d97edfc07a55a5202bf3a4e0b7dbc702cb9b0d8401c73b06e9b9f8225186c
 input localhost in browser to visit it 2、Run docker ps while your web server is running to see details on the webserver container. houbinbindeMacBook-Pro:bin houbinbin$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                         NAMES
864d97edfc07        nginx               "nginx -g 'daemon off"   4 minutes ago       Up 4 minutes        0.0.0.0:80->80/tcp, 443/tcp   webserver
 3、Stop or remove containers and images The nginx webserver will continue to run in the container on that port until you stop and/or remove the container. If you want to stop the webserver, type: docker stop webserver and start it again with docker start webserver houbinbindeMacBook-Pro:bin houbinbin$ docker stop webserver
webserver
houbinbindeMacBook-Pro:bin houbinbin$ docker start  webserver
webserver
 To stop and remove the running container with a single command, type: docker rm -f webserver. This will remove the container, but not the nginx image. You can list local images with docker images. You might want to keep some images around so that you don’t have to pull them again from Docker Hub. To remove an image you no longer need, use docker rmi <imageID>|<imageName>. For example, docker rmi nginx. More Docker has client and server, the server is a daemon to manager all containers. houbinbindeMacBook-Pro:~ houbinbin$ docker version
Client:
 Version:      1.12.1
 API version:  1.24
 Go version:   go1.7.1
 Git commit:   6f9534c
 Built:        Thu Sep  8 10:31:18 2016
 OS/Arch:      darwin/amd64

Server:
 Version:      1.12.1
 API version:  1.24
 Go version:   go1.6.3
 Git commit:   23cf638
 Built:        Thu Aug 18 17:52:38 2016
 OS/Arch:      linux/amd64</description><link>https://houbb.github.io/2016/10/15/docker</link><article>侯宾宾</article><guid/><pubDate>2016-10-15</pubDate></item><item><title>Jenkins</title><description>Jenkins 侯宾宾      jenkins      Tools      2016-10-14 Jenkins Download Get Start Config Jenkins Create Job 参数化构建 Pipeline The Jenkins file Jenkins The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project. jenkins jenkins zh_CN blog系列教程 zh_CN download->install: install->start: Download LTS (Long-Term Support) releases are chosen every 12 weeks from the stream of regular releases as the stable release for that time period. Download the war, renamed ROOT.war and put it into /Users/houbinbin/it/tools/tomcat/tomcat8/webapps
 start tomcat houbinbindeMacBook-Pro:bin houbinbin$ pwd
/Users/houbinbin/it/tools/tomcat/tomcat8/bin
houbinbindeMacBook-Pro:bin houbinbin$ ./startup.sh
 visit localhost:8080
 uninstall Use ./ to the command shell. $   /Library/Application Support/Jenkins/Uninstall.command
 result houbinbindeMacBook-Pro:Jenkins houbinbin$ ./Uninstall.command


Jenkins uninstallation script

The following commands are executed using sudo, so you need to be logged
in as an administrator. Please provide your password when prompted.

+ sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist
+ sudo rm /Library/LaunchDaemons/org.jenkins-ci.plist
+ sudo rm -rf /Applications/Jenkins '/Library/Application Support/Jenkins' /Library/Documentation/Jenkins
+ sudo rm -rf /Users/Shared/Jenkins
sudo: cannot get working directory
+ sudo rm -rf /var/log/jenkins
sudo: cannot get working directory
+ sudo rm -f /etc/newsyslog.d/jenkins.conf
sudo: cannot get working directory
+ sudo dscl . -delete /Users/jenkins
sudo: cannot get working directory
+ sudo dscl . -delete /Groups/jenkins
sudo: cannot get working directory
+ pkgutil --pkgs
+ grep 'org\.jenkins-ci\.'
+ xargs -n 1 sudo pkgutil --forget
sudo: cannot get working directory
Forgot package 'org.jenkins-ci.documentation.pkg' on '/'.
sudo: cannot get working directory
Forgot package 'org.jenkins-ci.jenkins.osx.pkg' on '/'.
sudo: cannot get working directory
Forgot package 'org.jenkins-ci.jenkins2191.postflight.pkg' on '/'.
sudo: cannot get working directory
Forgot package 'org.jenkins-ci.launchd-jenkins.pkg' on '/'.
sudo: cannot get working directory
Forgot package 'org.jenkins-ci.support.pkg' on '/'.
+ set +x

Jenkins has been uninstalled.
 Get Start Verify password copy /Users/houbinbin/.jenkins/secrets/initialAdminPassword content into password input. Install plugins Create user after this you can see: Default user config place: /Users/houbinbin/.jenkins/users/${username}/config.xml
 Config Jenkins Config java,git,maven Get need first 1、which can get the execute path 2、If you had config the path before, like $M3_HOME in ~/.bash_profile, you can use echo $M3_HOME to get the home path 3、For Java, we can use /usr/libexec/java_home to get it’s path houbinbindeMacBook-Pro:bin houbinbin$ which mvn
/usr/local/maven/maven3.3.9/bin/mvn
houbinbindeMacBook-Pro:~ houbinbin$ echo $M3_HOME
/usr/local/maven/maven3.3.9
houbinbindeMacBook-Pro:bin houbinbin$ which git
/usr/local/bin/git
houbinbindeMacBook-Pro:bin houbinbin$ which java
/usr/bin/java
houbinbindeMacBook-Pro:~ houbinbin$ /usr/libexec/java_home
/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home
 Set path 系统管理-》Global Tool Configuration or http://localhost:8080/configureTools/ 1、add jdk In mac: JDK别名:      JDK8
JAVA_HOME:    /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home


 In ubuntu: $ which java
/home/hbb/tool/jdk/jdk1.8.0_112/bin/java
 设置 JAVA_HOME:  /home/hbb/tool/jdk/jdk1.8.0_112
 in this way, add git and mvn 2、add git Name: git
Path to Git executable: /usr/local/bin/git
 3、add mvn name: maven3
MAVEN_HOME: /usr/local/maven/maven3.3.9
 Config Mail mail config mail Create Job Create Enter an item name blog for example, select 构建一个自由风格的软件项目 Config 1、源码管理 Git

Repository URL: https://github.com/houbb/blog
Credentials:    usr/pwd
 2、构建触发器 Choose Build when a change is pushed to GitHub and Poll SCM Set Schedule for Poll SCM */5 * * * *
 means re-flush each five minutes. 对于所有的任务日程表，jenkins采用cron-style语法，包含5个字段，字段之间使用空格隔开，格式如下 MINUTE HOUR DOM MANTH DOW MINUTE：0-59 HOUR：0-23 DOM：1-31 MONTH：1-12 DOW：0-7 ，其中0,7都是表示周日 ，以下有几个简化字符 1、“*” 表示在该字段所有可能出现的值 2、也可以使用连字符“-”定义范围，如在DOW字段上定义1-5，表示周一至周五 3、使用正斜杠符号定义一个跳过一个范围，如在MINUTE字段上定义 */5 表示每五分钟的意思 4、使用逗号分隔一个字段表示一系列有效值，如HOUR 字段定义 12,18 表示12点与18点 3、选择【丢弃旧的构建】，这里主要是为节省磁盘空间而考虑的，因为每次构建后，jenkins都会在jobs目录下为每个job下载，和创建相关数据，如打包后的jar等 - 保持构建的天数，这里我设置5，表示每个每次构建后的记录只有5天有效期 - 保持构建的最大个数，每个job只会保留最新的5次构建记录，这里需要提醒的是，如果之前有一次构建成功，那么jenkins会永远保留，当然也可以手动删除 4、构建触发器 勾选一下选项: Build whenever a SNAPSHOT dependency is built Build periodically H 7 * * 1-7
 Build when a change is pushed to GitHub 5、构建 Invoke-top-level Maven Targets Maven Version: maven3 Goals: clean site 参数化构建 blog Install Dynamic Parameter Plug-in in Jenkins 参数化构建过程->Dynamic Choice Parameter Name values release_branch Choices Script values: def ver_keys = [ 'bash', '-c', 'cd /Users/houbinbin/.jenkins/workspace/framework; git pull>/dev/null; git branch -a|grep remotes|cut -d "/" -f3|sort -r |head -10 ' ]
ver_keys.execute().text.tokenize('\n')
 命令简单解释: 到项目路径下,截取获取分支名称。 houbinbindeMacBook-Pro:framework houbinbin$ pwd
/Users/houbinbin/.jenkins/workspace/framework
houbinbindeMacBook-Pro:framework houbinbin$ git branch -a
* (HEAD detached at 00177f4)
  remotes/origin/master
  remotes/origin/release_1.0.1
 可优化点: (1) /Users/houbinbin/.jenkins/workspace/framework 打开的路径,就是jenkins自带的 WORKSPACE, 直接使用自测无效。愚蠢。。 (2) workspace 下项目必须在 jenkins 部署一次之后, 路径下才会保存。所以可以调整为本地存放代码的路径。 直接指定选项 参数化构建过程->Choice 选项指定,一行为一个选项。 Branches to build -> Branch Specifier (blank for ‘any’) 内容指定为 $release_branch Pipeline Jenkins Pipeline is a suite of plugins which supports implementing and integrating continuous delivery pipelines into Jenkins. To use Jenkins Pipeline, you will need: Jenkins 2.x or later (older versions back to 1.642.3 may work but are not recommended) Pipeline plugin Defining a Pipeline in the Web UI Click New Item in Home Page Enter an item name like pipeline-example, choose Pipeline, and save. In the Script define field of Pipeline, add this and save node {
    echo "hello world"
}
 Click Build Now to run. Click the #1 under the Build History, and Click the Console Output, you may see: Started by user houbinbin
[Pipeline] node
Running on master in /Users/houbinbin/.jenkins/workspace/pipeline-example
[Pipeline] {
[Pipeline] echo
hello world
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
 Defining a Pipeline in SCM Doc can find in localhost:8888/pipeline-syntax/ The Jenkins file Create->Build: Build->Test: Creating a Jenkinsfile Jenkinsfile is a text file that contains the definition of a Jenkins Pipeline and is checked into source control. node {
    checkout scm

    /* .. snip .. */
    stage('Build') {
        sh 'make' // <1>
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true // <2>
    }

    /* .. snip .. */
    stage('Test') {
        /* `make check` returns non-zero on test failures, * using `true` to allow the Pipeline to continue nonetheless */
        sh 'make check || true' // <1>
        junit '**/target/*.xml' // <2>
    }

    /* .. snip .. */
    stage('Deploy') {
        if (currentBuild.result == 'SUCCESS') { // <1>
            sh 'make publish'
        }
    }

}
 Examples</description><link>https://houbb.github.io/2016/10/14/jenkins</link><article>侯宾宾</article><guid/><pubDate>2016-10-14</pubDate></item><item><title>Jenkins Plugin</title><description>Jenkins Plugin 侯宾宾      jenkins plugin      Tools      2016-10-14 JUnit Plugin Sonar Plugin cobertura findbugs javadoc BlueOcean JUnit Plugin 单元测试检测 JUnit Plugin JUnit blog JUnit Test Build Install junit plugin Not skip the test Edit pom.xml in your project <dependency>
    <groupId>junit</groupId>
    <artifactId>junit</artifactId>
    <version>${junit.version}</version>
    <scope>test</scope>
</dependency>
 Sonar Plugin 单元质量检测 sonar integration sonar problems Prepare Install SonarQube Install SonarQube Plugin in Jenkins 配置sonar server Jenkins–》系统设置–》SonarQube servers Server Version 5.2 or before: usr/pwd Default is admin/admin Server authentication token 生成 token 配置->权限->用户->Tokens Enter a name, and generate one: 30a4d56f3130d246818ed384ece7d15c56ae8c85 named admin, copy this into Server authentication token 配置sonar scanner 系统管理–》Global Tool Configuration 配置项目 要让jenkins编译完成，自动将代码传给sonarqube进行分析，则要配置jenkins中的目标项目。 选择自己的project–》配置–》add pre-build step(构建)-》增加构建步骤->Execute SonarQube Scanner 在项目的根目录创建文件 sonar-project.properties, Path to project properties 默认路径就是这个。内容如下: sonar.projectKey=blog
sonar.projectName=blog
sonar.projectVersion=1.0
sonar.sources=src/main/java
sonar.language=java
 或者直接将此内容添加在Analysis properties中。 Edit the pom.xml in your project: <plugin>
 <groupId>org.sonarsource.scanner.maven</groupId>
 <artifactId>sonar-maven-plugin</artifactId>
 <version>3.1.1</version>
</plugin>
 Error 一直卡在这个问题 Unpacking https://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/2.8/sonar-scanner-cli-2.8.zip to /Users/houbinbin/.jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_Scanner on Jenkins 也就是要将这个文件下载下来,并解压在目标路径。手动操作,解决。 cobertura 单元测试覆盖率 Cobertura+Plugin cobertura 代码覆盖率 Install Cobertura plugin plugin 构建时添加目标(Goals)如下: clean cobertura:cobertura package
 构建后操作-》Publish Cobertura Coverage Report Set Cobertura xml report pattern as following: **/target/site/cobertura/coverage.xml
 Edit the pom.xml in your project <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>findbugs-maven-plugin</artifactId>
    <version>3.0.1</version>
    <configuration>
        <threshold>High</threshold>
        <effort>Default</effort>
        <findbugsXmlOutput>true</findbugsXmlOutput>
        <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
        <xmlOutput>true</xmlOutput>
        <!--<findbugsXmlOutputDirectory>target/site</findbugsXmlOutputDirectory>-->
    </configuration>
</plugin>
 findbugs 找寻代码中的BUG FindBugs+Plugin findbugs_zh_CN Install FindBugs plugin plugin in jenkins 构建时添加目标(Goals)如下: findbugs:findbugs
 注意: 使用findbugs务必保证文件已被解析为.class, 即已经被 maven compile 构建后操作-》Publish FindBugs analysis results FindBugs results 保持默认即可。 javadoc Javadoc+Plugin Install javadoc plugin plugin in jenkins Configure Jenkins job: In Build section, Goals and options line add: javadoc:javadoc
 publish javadoc Define the Javadoc directory target/site/apidocs/
 Edit the pom.xml in your project <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-javadoc-plugin</artifactId>
    <version>2.10.2</version>
    <configuration>
        <aggregate>true</aggregate>
        <additionalparam>-Xdoclint:none</additionalparam>
    </configuration>
</plugin>
 <aggregate>true</aggregate> 多模块 <additionalparam>-Xdoclint:none</additionalparam> JDK8 对文档要求特别严格,使用这个偷懒。 BlueOcean Blue Ocean is a new project that rethinks the user experience of Jenkins. Designed from the ground up for Jenkins Pipeline and compatible with Freestyle jobs, Blue Ocean reduces clutter and increases clarity for every member of your team. blueocean Install BlueOcean beta Click Open Blue Ocean to have a travel~~~</description><link>https://houbb.github.io/2016/10/14/jenkins-plugin</link><article>侯宾宾</article><guid/><pubDate>2016-10-14</pubDate></item><item><title>SonarQube</title><description>SonarQube 侯宾宾      sonarQube      Code Review      2016-10-14 SonarQube Install in Windows Install in Mac Sonarqube Config mysql Use sonar with maven Narrowing the Focus Use SonarQube 注意: 新版要求jdk8+ 新版要求mysql5.6+ SonarQube is an open platform to manage code quality. As such, it covers the 7 axes of code quality: sonar zh_CN Install in Windows Download the sonar Run the StartSonar.bat under sonarqube-6.1\bin\windows-x86-64 wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    |
jvm 1    | WrapperSimpleApp: Unable to locate the class org.sonar.application.App: java.lang.UnsupportedClassVersionError: org/sonar/application/App : Unsupported major.minor version 52.0
jvm 1    |
jvm 1    | WrapperSimpleApp Usage:
jvm 1    |   java org.tanukisoftware.wrapper.WrapperSimpleApp {app_class} [app_arguments]
jvm 1    |
jvm 1    | Where:
jvm 1    |   app_class:      The fully qualified class name of the application to run.
jvm 1    |   app_arguments:  The arguments that would normally be passed to the
jvm 1    |                   application.
wrapper  | <-- Wrapper Stopped
 My sonarqube version is 6.1, so we should know what we need: Requirements JDK1.8 or higher Download and config jdk1.8 for sonar. You can correctly config the jdk1.8 environment, or directly set the java path in sonarqube-6.1\conf\wrapper.conf # Path to JVM executable. By default it must be available in PATH.
# Can be an absolute path, for example:
wrapper.java.command=D:\Program Files\Java\jdk1.8.0_102\bin\java.exe
#wrapper.java.command=java
 and restart StartSonar.bat wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    |
jvm 1    | 2016.10.14 11:50:58 INFO  app[][o.s.a.AppFileSystem] Cleaning or creating temp directory D:\Tools\sonar\sonarqube-6.1\temp
jvm 1    | 2016.10.14 11:50:58 INFO  app[][o.s.p.m.JavaProcessLauncher] Launch process[es]: D:\Program Files\Java\jdk1.8.0_102\jre\bin\java -Djava.awt.headless=true -Xmx1G -Xms256m -Xss256k -Djna.nosys=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -Djava.io.tmpdir=D:\Tools\sonar\sonarqube-6.1\temp -javaagent:D:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar -cp ./lib/common/*;./lib/search/* org.sonar.search.SearchServer D:\Tools\sonar\sonarqube-6.1\temp\sq-process635522788444000175properties
jvm 1    | 2016.10.14 11:51:05 INFO  app[][o.s.p.m.Monitor] Process[es] is up
jvm 1    | 2016.10.14 11:51:05 INFO  app[][o.s.p.m.JavaProcessLauncher] Launch process[web]: D:\Program Files\Java\jdk1.8.0_102\jre\bin\java -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djruby.management.enabled=false -Djruby.compile.invokedynamic=false -Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Djava.io.tmpdir=D:\Tools\sonar\sonarqube-6.1\temp -javaagent:D:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar -cp ./lib/common/*;./lib/server/*;D:\Tools\sonar\sonarqube-6.1\lib\jdbc\h2\h2-1.3.176.jar org.sonar.server.app.WebServer D:\Tools\sonar\sonarqube-6.1\temp\sq-process6946582725671729886properties
jvm 1    | 2016.10.14 11:51:32 INFO  app[][o.s.p.m.Monitor] Process[web] is up
jvm 1    | 2016.10.14 11:51:32 INFO  app[][o.s.p.m.JavaProcessLauncher] Launch process[ce]: D:\Program Files\Java\jdk1.8.0_102\jre\bin\java -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Djava.io.tmpdir=D:\Tools\sonar\sonarqube-6.1\temp -javaagent:D:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar -cp ./lib/common/*;./lib/server/*;./lib/ce/*;D:\Tools\sonar\sonarqube-6.1\lib\jdbc\h2\h2-1.3.176.jar org.sonar.ce.app.CeServer D:\Tools\sonar\sonarqube-6.1\temp\sq-process7599430162435853222properties
jvm 1    | 2016.10.14 11:51:38 INFO  app[][o.s.p.m.Monitor] Process[ce] is up
 Visit Credentials are admin/admin localhost:9000
 Shut down Use Ctrl+c in bat command. Install in Mac jdk version houbinbindeMacBook-Pro:shell houbinbin$ java -version
java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
 Sonarqube Download sonarqube and start houbinbindeMacBook-Pro:macosx-universal-64 houbinbin$ pwd
/Users/houbinbin/it/tools/sonar/sonarqube-6.1/bin/macosx-universal-64
houbinbindeMacBook-Pro:macosx-universal-64 houbinbin$ ls
SonarQube.pid	lib		sonar.sh	wrapper
houbinbindeMacBook-Pro:macosx-universal-64 houbinbin$ ./sonar.sh
Usage: ./sonar.sh { console | start | stop | restart | status | dump }
houbinbindeMacBook-Pro:macosx-universal-64 houbinbin$ ./sonar.sh start
Starting SonarQube...
Started SonarQube.
 Config mysql create user sonar in mysql CREATE USER sonar IDENTIFIED BY 'sonar';

GRANT ALL PRIVILEGES ON *.* TO 'sonar'@'localhost' IDENTIFIED BY 'sonar' WITH GRANT OPTION;
 create database sonar CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;
 copy mysql-connector-java-5.1.38.jar into: /Users/houbinbin/it/tools/sonar/sonarqube-6.1/extensions/jdbc-driver/mysql
 edit ~/conf/sonar.properties # Comment the following lines to deactivate the default embedded database.
#sonar.jdbc.url: jdbc:derby://localhost:1527/sonar;create=true
#sonar.jdbc.driverClassName: org.apache.derby.jdbc.ClientDriver
#sonar.jdbc.validationQuery: values(1)

～～～～～～～～～～～～～～～...～～～～～～～～～～～～～～～～～～

#----- MySQL 5.x/6.x
# Comment the embedded database and uncomment the following
#properties to use MySQL. The validation query is optional.
#sonar.jdbc.validationQuery: select 1
sonar.jdbc.driverClassName: com.mysql.jdbc.Driver
sonar.jdbc.url=jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8
sonar.jdbc.username=sonar
sonar.jdbc.password=sonar
 restart houbinbindeMacBook-Pro:macosx-universal-64 houbinbin$ ./sonar.sh restart
Stopping SonarQube...
Waiting for SonarQube to exit...
Stopped SonarQube.
Starting SonarQube...
Started SonarQube.
 Set sonar to chinese Admin Login, search Chinese Pack in Update Center, install and restart download http://repository.codehaus.org/org/codehaus/sonar-plugins/l10n/sonar-l10n-zh-plugin/1.6/sonar-l10n-zh-plugin-1.6.jar, into $SONAR_HOME/extensions/plugins and restart. Use sonar with maven sonar with maven add into settings.xml of maven <settings>
    <pluginGroups>
        <pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
    </pluginGroups>
    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Optional URL to server. Default value is http://localhost:9000 -->
                <sonar.host.url>
                  http://localhost:9000
                </sonar.host.url>
            </properties>
        </profile>
     </profiles>
</settings>
 add into pom.xml of project <build>
    <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>
        </plugins>
    </pluginManagement>
    <plugins>
        <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
        </plugin>
    </plugins>
</build>
 run mvn clean sonar:sonar
 result: houbinbindeMacBook-Pro:git-demo houbinbin$ mvn sonar:sonar
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building git-demo 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- sonar-maven-plugin:3.1.1:sonar (default-cli) @ git-demo ---
[INFO] User cache: /Users/houbinbin/.sonar/cache
[INFO] Load global repositories
[INFO] Load global repositories (done) | time=165ms
[WARNING] Property 'sonar.jdbc.url' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
[WARNING] Property 'sonar.jdbc.username' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
[WARNING] Property 'sonar.jdbc.password' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
[INFO] User cache: /Users/houbinbin/.sonar/cache
[INFO] Load plugins index
[INFO] Load plugins index (done) | time=5ms
[INFO] SonarQube version: 6.1
[INFO] Default locale: "zh_CN", source code encoding: "UTF-8" (analysis is platform dependent)
[INFO] Process project properties
[INFO] Load project repositories
[INFO] Load project repositories (done) | time=135ms
[INFO] Load quality profiles
[INFO] Load quality profiles (done) | time=92ms
[INFO] Load active rules
[INFO] Load active rules (done) | time=345ms
[INFO] Publish mode
[INFO] -------------  Scan git-demo
[INFO] Load server rules
[INFO] Load server rules (done) | time=59ms
[INFO] Base dir: /Users/houbinbin/IT/code/git-demo
[INFO] Working dir: /Users/houbinbin/IT/code/git-demo/target/sonar
[INFO] Source paths: pom.xml
[INFO] Source encoding: UTF-8, default locale: zh_CN
[INFO] Index files
[INFO] 0 files indexed
[INFO] Sensor Lines Sensor
[INFO] Sensor Lines Sensor (done) | time=0ms
[INFO] Sensor SCM Sensor
[INFO] Sensor SCM Sensor (done) | time=1ms
[INFO] Sensor XmlFileSensor
[INFO] Sensor XmlFileSensor (done) | time=0ms
[INFO] Sensor Zero Coverage Sensor
[INFO] Sensor Zero Coverage Sensor (done) | time=0ms
[INFO] Sensor Code Colorizer Sensor
[INFO] Sensor Code Colorizer Sensor (done) | time=0ms
[INFO] Sensor CPD Block Indexer
[INFO] Sensor CPD Block Indexer (done) | time=0ms
[INFO] Calculating CPD for 0 files
[INFO] CPD calculation finished
[INFO] Analysis report generated in 47ms, dir size=12 KB
[INFO] Analysis reports compressed in 6ms, zip size=4 KB
[INFO] Analysis report uploaded in 42ms
[INFO] ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/com.ryo:git-demo
[INFO] Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
[INFO] More about the report processing at http://localhost:9000/api/ce/task?id=AVfDe6043OTpXts6eJaH
[INFO] Task total time: 1.687 s
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3.059 s
[INFO] Finished at: 2016-10-14T21:57:25+08:00
[INFO] Final Memory: 18M/398M
[INFO] ------------------------------------------------------------------------
 from the log [WARNING] Property 'sonar.jdbc.url' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
[WARNING] Property 'sonar.jdbc.username' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
[WARNING] Property 'sonar.jdbc.password' is not supported any more. It will be ignored. There is no longer any DB connection to the SQ database.
 We can know it’s no need set in these sonar.properties Visit http://localhost:9000/dashboard/index/com.ryo:git-demo, you can see Narrowing the Focus use //NOSAONAR to ignore one line use this to ignore all js files. </properties>
    <!--sonar-->
    <sonar.exclusions>**/*.js</sonar.exclusions>
</properties>
 Use Chinese pack</description><link>https://houbb.github.io/2016/10/14/sonarQube</link><article>侯宾宾</article><guid/><pubDate>2016-10-14</pubDate></item><item><title>Shell</title><description>Shell 侯宾宾      shell      Linux      2016-10-12 Shell Shell Var Special Var Shell Array Operator Shell Order Flow Control Func File Include Redirect Shell Shell Types Bourne Shell（/usr/bin/sh or /bin/sh） Bourne Again Shell（/bin/bash） C Shell（/usr/bin/csh） K Shell（/usr/bin/ksh） Shell for Root（/sbin/sh） Usually, we not distinct Bourne Shell and Bourne Again Shell Shell zh_CN Shell zh_CN create->edit: vi edit->run: ./ run->why:? Create hello.sh houbinbindeMacBook-Pro:shell houbinbin$ pwd
/Users/houbinbin/code/shell
houbinbindeMacBook-Pro:shell houbinbin$ vi hello.sh
 Edit the content of hello.sh #!/bin/bash
echo "hello world!"
 run the hello.sh houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh hello.sh
hello world!
 another way to run houbinbindeMacBook-Pro:shell houbinbin$ ./hello.sh
-bash: ./hello.sh: Permission denied
houbinbindeMacBook-Pro:shell houbinbin$ chmod +x ./hello.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./hello.sh
hello world!
 mean of hello.sh #! tells OS which Interpreter to use, echo to print info in window. read from input hello_name.sh #!/bin/bash

# Author:houbinbin

echo "Please enter your name?"
read NAME
echo "Hello, $NAME!"
 run houbinbindeMacBook-Pro:shell houbinbin$ vi hello_name.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh hello_name.sh
Please enter your name?
houbinbin
Hello, houbinbin!
houbinbindeMacBook-Pro:shell houbinbin$
 Shell Var Title: Shell Var Define->ReDefine: ReDefine->Use: Use->Remove: Define No Blank between var name and = Start with [a-zA-Z], name can with _ No punctuation mark and no key word my_name="houbinbin"
 Redefine A defined var can be re-defined my_name="houbinbin"
my_name="ryo"
 Use use_var.sh my_name="houbinbin"
echo $my_name
 run houbinbindeMacBook-Pro:shell houbinbin$ vi use_var.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh use_var.sh
houbinbin
 ReadOnly A readonly var can’t be change. readonly_var.sh # !/bin/bash

my_name="houbinbin"
readonly my_name

my_name="new name"
 run houbinbindeMacBook-Pro:shell houbinbin$ vi readonly_var.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh readonly_var.sh
readonly_var.sh: line 4: my_name: readonly variable
 Remove Use unset to remove define var. unset_var.sh #!/bin/bash

my_name="ryo"
unset my_name
echo ${my_name}
 run houbinbindeMacBook-Pro:shell houbinbin$ vi unset_var.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh unset_var.sh

houbinbindeMacBook-Pro:shell houbinbin$
 Special Var Command Desc $0 当前脚本的文件名 $n 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。 $# 传递给脚本或函数的参数个数。 $* 传递给脚本或函数的所有参数。 $@ 传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $* 稍有不同，下面将会讲到。 $? 上个命令的退出状态，或函数的返回值。 $$ 当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。 special_var.sh #!/bin/bash
echo "File Name: $0"
echo "First Parameter : $1"
echo "First Parameter : $2"
echo "Quoted Values: $@"
echo "Quoted Values: $*"
echo "Total Number of Parameters : $#"
 run houbinbindeMacBook-Pro:shell houbinbin$ vi special_var.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh special_var.sh hello world my
File Name: special_var.sh
First Parameter : hello
First Parameter : world
Quoted Values: hello world my
Quoted Values: hello world my
Total Number of Parameters : 3
 $* and $@ $* 和 $@ 都表示传递给函数或脚本的所有参数，不被""包含时，都以”$1” “$2” … “$n” 的形式输出所有参数。 但是当它们被""包含时，$* 会将所有的参数作为一个整体，以”$1 $2 … $n”的形式输出所有参数；$@ 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数。 diff_demo.sh #!/bin/bash

# Author:houbinbin

echo "display of \$* "

for i in "$*";
do echo $i
done echo "display of \$@ "
for i in "$@";
do echo $i
done
 run houbinbindeMacBook-Pro:shell houbinbin$ vi diff_demo.sh
houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh diff_demo.sh 1 2 3 4
display of $*
1 2 3 4
display of $@
1
2
3
4
houbinbindeMacBook-Pro:shell houbinbin$
 Shell Array Title: Shell Array Define->Read: Read->Read All: Define Shell only support single-dimensional arrays. array=(value1 value2 ... valuen)
 array.sh #!/bin/sh

# array demo
array=(a b "c" d)

# another way to define array

array_two[0]=a
array_two[1]=b
array_two[2]="c"
array_two[3]=d
 Read You can read from array like this: ${array_name[index]}
 read_array.sh #!/bin/sh

# read from array

array=(a b c "d")
echo "First elem is ${array[0]}"
echo "Second elem is ${array[1]}"
echo "Third elem is ${array[2]}"
echo "Last elem is ${array[-1]}"
 run root@iZuf60ahcky4k4nfv470juZ:~/code/shell# chmod +x read_array.sh 
root@iZuf60ahcky4k4nfv470juZ:~/code/shell# ./read_array.sh 
First elem is a
Second elem is b
Third elem is c
Last elem is d
 Read all elem We can use * or @ to get all elem in array. read_all_array.sh #!/bin/sh
# Read all elem in array

array=(a b c d)
echo "All elem in array: ${array[*]}"
echo "All elem in array: ${array[@]}"
 run root@iZuf60ahcky4k4nfv470juZ:~/code/shell# chmod +x read_all_array.sh 
root@iZuf60ahcky4k4nfv470juZ:~/code/shell# ./read_all_array.sh 
All elem in array: a b c d
All elem in array: a b c d
 Array Length We can use ${#array[*]} or ${#array[@]}, to get the array size. array_length.sh !#/bin/sh
# array length

array=(a b c d E)
echo "the size of array is: ${#array[*]}"
echo "the size of array is: ${#array[@]}"
 run root@iZuf60ahcky4k4nfv470juZ:~/code/shell# chmod +x array_length.sh 
root@iZuf60ahcky4k4nfv470juZ:~/code/shell# ./array_length.sh 
the size of array is: 5
the size of array is: 5
 Operator The original bash not support math oper, we can use expr instead. Attention: 1.expr is in `, not ‘ 2.expr between numbers should split with blank. num_oper.sh #!/bin/bash

# num oper

value1=10
value2=20
sum=`expr $value1 + $value2`
echo "sum of $value1 and $value2 is: $sum"
 run houbinbindeMacBook-Pro:shell houbinbin$ chmod +x num_oper.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./ num_oper.sh
sum of 10 and 20 is: 30
 Math operator Suppose: $a is 10, $b is 20 Command Desc Demo + 加法 expr $a + $b 结果为 30 - 减法 expr $a - $b 结果为 -10 * 乘法 expr $a \* $b 结果为 200 / 除法 expr $b / $a 结果为 2 % 取余 expr $b % $a 结果为 0 = 赋值 a=$b 将把变量 b 的值赋给 a == 用于比较两个数字，相同则返回 true [ $a == $b ] 返回 false != 用于比较两个数字，不相同则返回 true [ $a != $b ] 返回 true Relation operator Only support number or number string. Suppose: $a is 10, $b is 20 Command Desc Demo -eq equals [ $a -eq $b ] false -ne not equals [ $a -ne $b ] true -gt great than [ $a -gt $b ] false -lt less than [ $a -lt $b ] true -ge great equals [ $a -ge $b ] false -le less equals [ $a -le $b ] true Bool operator Command Desc Demo ! not [ ! false ] true -o or [ true -o false ] true -a and [ true and false ] false && and [ true and false ] false || or [ true and false ] false String operator Suppose: $a is “10”, $b is “20” Command Desc Demo = 检测两个字符串是否相等，相等返回 true [ $a = $b ] 返回 false。 != 检测两个字符串是否相等，不相等返回 true [ $a != $b ] 返回 true。 -z 检测字符串长度是否为0，为0返回 true [ -z $a ] 返回 false。 -n 检测字符串长度是否为0，不为0返回 true [ -n $a ] 返回 true。 str 检测字符串是否为空，不为空返回 true [ $a ] 返回 true。 File Test operator Command Desc -b file 检测文件是否是块设备文件，如果是，则返回 true -c file 检测文件是否是字符设备文件，如果是，则返回 true -d file 检测文件是否是目录，如果是，则返回 true -f file 检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true -g file 检测文件是否设置了 SGID 位，如果是，则返回 true -k file 检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true -p file 检测文件是否是具名管道，如果是，则返回 true -u file 检测文件是否设置了 SUID 位，如果是，则返回 true -r file 检测文件是否可读，如果是，则返回 true -w file 检测文件是否可写，如果是，则返回 true -x file 检测文件是否可执行，如果是，则返回 true -s file 检测文件是否为空（文件大小是否大于0），不为空返回 true -e file 检测文件（包括目录）是否存在，如果是，则返回 true file_test_oper.sh #!/bash/sh

# file test operator

file="/Users/houbinbin/code/shell/file_test_oper.sh"

if [ -r $file ]
then echo "文件可读"
else echo "文件不可读"
fi if [ -w $file ]
then echo "文件可写"
else echo "文件不可写"
fi if [ -x $file ]
then echo "文件可执行"
else echo "文件不可执行"
fi if [ -f $file ]
then echo "文件为普通文件"
else echo "文件为特殊文件"
fi if [ -d $file ]
then echo "文件是个目录"
else echo "文件不是个目录"
fi if [ -s $file ]
then echo "文件不为空"
else echo "文件为空"
fi if [ -e $file ]
then echo "文件存在"
else echo "文件不存在"
fi
 run houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh file_test_oper.sh
文件可读
文件可写
文件不可执行
文件为普通文件
文件不是个目录
文件不为空
文件存在
 Shell Order echo echo [-e] string
 printf just like printf() of C printf  format-string  [arguments...]
 test test_num.sh #!/bin/bash

num1=100
num2=100
if test $[num1] -eq $[num2]
then echo '两个数相等！'
else echo '两个数不相等！'
fi
 run houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh test_num.sh
两个数相等！
 test_str.sh #!/bin/bash

num1="runoob"
num2="runoob"
if test num1=num2
then echo '两个字符串相等!'
else echo '两个字符串不相等!'
fi
 run houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh test_str.sh
两个字符串相等!
 test_file.sh #!/bin/bash

if test -e /bin/bash
then echo '文件已存在!'
else echo '文件不存在!'
fi
 run houbinbindeMacBook-Pro:shell houbinbin$ /bin/sh test_file.sh
文件已存在!
 Flow Control If Else if if condition
then
    command1
    command2
    ...
    commandN
fi
 if else if condition
then
    command1
    command2
    ...
    commandN
else
    command
fi
 if else-if else if condition1
then
    command1
elif condition2
then
    command2
else
    commandN
fi
 demo echo "please enter your age"
read age

if [[ $age -le 0 ||  $age -ge 100 ]]
then
echo "that's crazy!"

elif [ $age -le 20 ]
then
echo "little boy"

elif [[ $age -gt 20 &&  $age -le 40 ]]
then
echo "good time"

else
echo "be yourself"

fi
 for for loop in "hello" "boy" "see" "you" "sometimes" "somewhere"
do
echo "the word is $loop"
done
 run houbinbindeMacBook-Pro:shell houbinbin$ chmod +x for.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./for.sh
the word is hello
the word is boy
the word is see
the word is you
the word is sometimes
the word is somewhere
 While while condition
do
    command
done
 demo #!/bin/sh

# while demo

val=1
while( $val < 5 )
do echo "val: $val"
    let "val++"
done
 run houbinbindeMacBook-Pro:shell houbinbin$ ./while.sh
val: 1
val: 2
val: 3
val: 4
 case case val in
mode1)
    command1
    command2
    ...
    commandN
    ;;
mode2）
    command1
    command2
    ...
    commandN
    ;;
esac
 demo #!/bin/sh

# case demo

echo "please enter a num(1-4)"

echo you enter:

read num

case $num in 1)
    echo "Enter one"
    ;;
2)
    echo "Enter two"
    ;;
3)
    echo "Enter three"
    ;;
4)
    echo "Enter four"
    ;;

*)
    echo "Your enter is out of range"
    ;;
esac
 run houbinbindeMacBook-Pro:shell houbinbin$ vi case.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./case.sh
please enter a num(1-4)
you enter:
1
Enter one
 beak #!/bin/sh

# break demo

for num in 1 2 3 4 5
do if [ $num -eq 4 ]
    then break fi echo "num is: $num"
done
 run houbinbindeMacBook-Pro:shell houbinbin$ ./break.sh
num is: 1
num is: 2
num is: 3
 continue #!/bin/sh

# continue demo

for num in 1 2 3 4 5
do if [ $num -eq 4 ]
    then continue fi echo "num is: $num"
done
 run houbinbindeMacBook-Pro:shell houbinbin$ ./continue.sh
num is: 1
num is: 2
num is: 3
num is: 5
 Func [ function ] funname [()]

{

    action;

    [return int;]

}
 demo #!/bin/sh

# function demo

firstFunc() {
    echo "This is my first shell function."
}

echo "function start"
firstFunc
echo "function end"
 run houbinbindeMacBook-Pro:shell houbinbin$ vi function.sh
houbinbindeMacBook-Pro:shell houbinbin$ chmod +x function.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./function.sh
function start
This is my first shell function.
function end
 function with return value #!/bin/sh


# func with return val

funcWithReturnVal() {
    echo "enter first num: "
    read firstNum
    echo "enter second num: "
    read secondNum
    return $(($firstNum+$secondNum))
}

echo "function with return value start:"
funcWithReturnVal
returnVal=$?
echo "result: $returnVal"
 run houbinbindeMacBook-Pro:shell houbinbin$ ./funcWithReturnVal.sh
function with return value start:
enter first num:
1
enter second num:
2
result: 3
 function with parameters #!/bin/sh

# function with param

hasParam() {
    echo "all param is $*"

    if [ $# -gt 0 ]
    then echo "has param"
    return 1
    else echo "has no param"
    return 0
    fi
}

hasParam 1 2 3
 run houbinbindeMacBook-Pro:shell houbinbin$ vi funcWithParam.sh
houbinbindeMacBook-Pro:shell houbinbin$ chmod +x funcWithParam.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./funcWithParam.sh
all param is 1 2 3
has param
 $n to get the param value, when n >= 10, use ${n}! File Include data.sh #!/bin/sh

name="houbinbin"
 include.sh use . ./data.sh or source ./data.sh to include the file #!/bin/sh

source ./data.sh

echo "the name is: $name"
 run houbinbindeMacBook-Pro:shell houbinbin$ chmod +x include.sh
houbinbindeMacBook-Pro:shell houbinbin$ ./include.sh
the name is: houbinbin
 Redirect Command Desc command > file out->file command < file in->file command » file out append->file n > file file descriptor n ->file n » file file descriptor n append->file n >& m out file m&n merge n <& m in file m&n merge « tag content between tag for input File descriptor 0   //stdIn
1   //stdOut
2   //stdErr
 Out Redirect houbinbindeMacBook-Pro:shell houbinbin$ ls > ls_file
houbinbindeMacBook-Pro:shell houbinbin$ cat ls_file
break.sh
case.sh
continue.sh
data.sh
diff_demo.sh
file_test_oper.sh
for.sh
funcWithParam.sh
funcWithReturnVal.sh
function.sh
hello.sh
hello_name.sh
if_else.sh
include.sh
ls_file
num_oper.sh
readonly_var.sh
special_var.sh
test_file.sh
test_num.sh
unset_var.sh
use_var.sh
while.sh
 In Redirect We want to calc the line of file ls_file houbinbindeMacBook-Pro:shell houbinbin$ wc -l ls_file
      23 ls_file</description><link>https://houbb.github.io/2016/10/12/Shell</link><article>侯宾宾</article><guid/><pubDate>2016-10-12</pubDate></item><item><title>Ubuntu</title><description>Ubuntu 侯宾宾      ubuntu      OS      2016-10-10 Ubuntu Login install components Visit Web Useful command 方向键错乱 22 port 纯命令行启动 保持电源关机后仍然运行 Ubuntu Ubuntu is an open source software platform that runs everywhere from the smartphone, the tablet and the PC to the server and the cloud. ubuntu Title: Desktop Ubuntu desktop->command: Ctrl+Alt+F2~F6 command->desktop: Ctrl+Alt+F7 Login Change to root user $ sudu su
 Login to aliyun houbinbindeMacBook-Pro:~ houbinbin$ ssh root@139.196.28.125
The authenticity of host '139.196.28.125 (139.196.28.125)' can't be established.
ECDSA key fingerprint is SHA256:TuvleHE4/wRMGxcPesBBf2+cNqQZWYGgidKLcrNme0c.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '139.196.28.125' (ECDSA) to the list of known hosts.
root@139.196.28.125's password:
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
New release '16.04.1 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


Welcome to aliyun Elastic Compute Service!
 这个阿里云的Ubuntu是14.04.4, 而如果是真正的Ubuntu 系统,可能会16.04.4 及其以后 ,内置php为7.0。可能会导致很不顺利。 Install php5 in Ubuntu zhihu sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php5.6 libapache2-mod-php5.6 php5.6-curl php5.6-gd php5.6-mbstring php5.6-mcrypt php5.6-mysql php5.6-xml php5.6-xmlrpc
sudo a2dismod php7.0.8
sudo a2enmod php5.6
sudo systemctl restart apache2
 install components git install root@iZuf60ahcky4k4nfv470juZ:~# apt-get install git

Reading package lists... Done
Building dependency tree
Reading state information... Done
The following package was automatically installed and is no longer required:
  linux-image-extra-3.13.0-32-generic
Use 'apt-get autoremove' to remove it.
The following extra packages will be installed:
  git-man liberror-perl
Suggested packages:
  git-daemon-run git-daemon-sysvinit git-doc git-el git-email git-gui gitk
  gitweb git-arch git-bzr git-cvs git-mediawiki git-svn
The following NEW packages will be installed:
  git git-man liberror-perl
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 3,306 kB of archives.
After this operation, 21.9 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://mirrors.aliyun.com/ubuntu/ trusty/main liberror-perl all 0.17-1.1 [21.1 kB]
Get:2 http://mirrors.aliyun.com/ubuntu/ trusty-security/main git-man all 1:1.9.1-1ubuntu0.3 [699 kB]
Get:3 http://mirrors.aliyun.com/ubuntu/ trusty-security/main git amd64 1:1.9.1-1ubuntu0.3 [2,586 kB]
Fetched 3,306 kB in 2s (1,227 kB/s)
Selecting previously unselected package liberror-perl.
(Reading database ... 121809 files and directories currently installed.)
Preparing to unpack .../liberror-perl_0.17-1.1_all.deb ...
Unpacking liberror-perl (0.17-1.1) ...
Selecting previously unselected package git-man.
Preparing to unpack .../git-man_1%3a1.9.1-1ubuntu0.3_all.deb ...
Unpacking git-man (1:1.9.1-1ubuntu0.3) ...
Selecting previously unselected package git.
Preparing to unpack .../git_1%3a1.9.1-1ubuntu0.3_amd64.deb ...
Unpacking git (1:1.9.1-1ubuntu0.3) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up liberror-perl (0.17-1.1) ...
Setting up git-man (1:1.9.1-1ubuntu0.3) ...
Setting up git (1:1.9.1-1ubuntu0.3) ...
 test root@iZuf60ahcky4k4nfv470juZ:~# git --version
git version 1.9.1
 jdk command download jdk1.8 root@iZuf60ahcky4k4nfv470juZ:~/tools# wget http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz

--2016-09-24 13:18:09--  http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz
Resolving download.oracle.com (download.oracle.com)... 206.160.170.51, 206.160.170.9
Connecting to download.oracle.com (download.oracle.com)|206.160.170.51|:80... connected.
HTTP request sent, awaiting response... 302 Moved Temporarily
Location: https://edelivery.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz [following]
--2016-09-24 13:18:10--  https://edelivery.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz
Resolving edelivery.oracle.com (edelivery.oracle.com)... 23.9.199.85
Connecting to edelivery.oracle.com (edelivery.oracle.com)|23.9.199.85|:443... connected.
HTTP request sent, awaiting response... 302 Moved Temporarily
Location: http://download.oracle.com/errors/download-fail-1505220.html [following]
--2016-09-24 13:18:11--  http://download.oracle.com/errors/download-fail-1505220.html
Connecting to download.oracle.com (download.oracle.com)|206.160.170.51|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 5307 (5.2K) [text/html]
Saving to: ‘jdk-8u101-linux-x64.tar.gz’

100%[===============================================================================================================================================================>] 5,307       --.-K/s   in 0s

2016-09-24 13:18:12 (712 MB/s) - ‘jdk-8u101-linux-x64.tar.gz’ saved [5307/5307]

root@iZuf60ahcky4k4nfv470juZ:~/tools# ls
jdk  jdk-8u101-linux-x64.tar.gz
 unzip jdk-8u101-linux-x64.tar.gz: HTML document, ASCII text, with very long lines, with CRLF line terminators
root@iZuf60ahcky4k4nfv470juZ:~/tools/jdk# tar -zxvf jdk-8u101-linux-x64.tar.gz

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
 the mean of optional: bz2 format  j
gz format    z
c   create
x   unzip
v   detail info
f   file
 why root@iZuf60ahcky4k4nfv470juZ:~/tools/jdk# file jdk-8u101-linux-x64.tar.gz
jdk-8u101-linux-x64.tar.gz: HTML document, ASCII text, with very long lines, with CRLF line terminators
 Well, we download the jdk into local, and then upload it to the Ubuntu server. $   scp jdk-8u102-linux-x64.tar.gz root@139.196.28.125:/root/tools/jdk
$   tar -zxvf jdk-8u101-linux-x64.tar.gz

root@iZuf60ahcky4k4nfv470juZ:~/tools/jdk# ls
jdk1.8.0_102  jdk-8u102-linux-x64.tar.gz
root@iZuf60ahcky4k4nfv470juZ:~/tools/jdk# mv jdk1.8.0_102 jdk1.8
root@iZuf60ahcky4k4nfv470juZ:~/tools/jdk# ls
jdk1.8  jdk-8u102-linux-x64.tar.gz
 config jdk env path 1、edit .bashrc $   vi ~/.bashrc
 You can copy the file if necessary cp .bashrc .bash_original 2、add these at the end of file export JAVA_HOME=/root/tools/jdk/jdk1.8
export CLASSPATH=${JAVA_HOME}/lib
export PATH=${JAVA_HOME}/bin:$PATH
 3、make it work at once $   source ~/.bashrc
 4、test jdk $   java -version

java version "1.8.0_102"
Java(TM) SE Runtime Environment (build 1.8.0_102-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)
 maven Before this, you need install the jdk first. download $   wget http://apache.fayea.com/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz

--2016-09-24 14:55:08--  http://apache.fayea.com/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
Resolving apache.fayea.com (apache.fayea.com)... 119.6.242.164, 119.6.242.165
Connecting to apache.fayea.com (apache.fayea.com)|119.6.242.164|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 8491533 (8.1M) [application/x-gzip]
Saving to: ‘apache-maven-3.3.9-bin.tar.gz’

100%[===============================================================================================================================================================>] 8,491,533   5.54MB/s   in 1.5s

2016-09-24 14:55:10 (5.54 MB/s) - ‘apache-maven-3.3.9-bin.tar.gz’ saved [8491533/8491533]

root@iZuf60ahcky4k4nfv470juZ:~/tools/maven# ls
apache-maven-3.3.9-bin.tar.gz
 unzip $   tar -zxvf apache-maven-3.3.9-bin.tar.gz

root@iZuf60ahcky4k4nfv470juZ:~/tools/maven# ls
apache-maven-3.3.9  apache-maven-3.3.9-bin.tar.gz
 config maven 1、edit .bashrc $   vi ~/.bashrc
 2、append these lines at the file end # set maven environment
export M2_HOME=/root/tools/maven/apache-maven-3.3.9
export PATH=$M2_HOME/bin:$PATH
 3、work at once $   source ~/.bashrc
 4、 test maven $ mvn --version

Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)
Maven home: /root/tools/maven/apache-maven-3.3.9
Java version: 1.8.0_102, vendor: Oracle Corporation
Java home: /root/tools/jdk/jdk1.8/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "3.13.0-86-generic", arch: "amd64", family: "unix"
 mysql install mysql install mysql-server $   apt-get install mysql-server
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following package was automatically installed and is no longer required:
  linux-image-extra-3.13.0-32-generic
Use 'apt-get autoremove' to remove it.
The following extra packages will be installed:
  libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18
  mysql-client-5.5 mysql-client-core-5.5 mysql-common mysql-server-5.5
  mysql-server-core-5.5
Suggested packages:
  libclone-perl libmldbm-perl libnet-daemon-perl libplrpc-perl
  libsql-statement-perl libipc-sharedcache-perl tinyca mailx
The following NEW packages will be installed:
  libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18
  mysql-client-5.5 mysql-client-core-5.5 mysql-common mysql-server
  mysql-server-5.5 mysql-server-core-5.5
0 upgraded, 10 newly installed, 0 to remove and 0 not upgraded.
Need to get 7,927 kB/8,971 kB of archives.
After this operation, 96.9 MB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-common all 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main libmysqlclient18 amd64 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-client-core-5.5 amd64 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-client-5.5 amd64 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-server-core-5.5 amd64 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-server-5.5 amd64 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
Err http://mirrors.aliyun.com/ubuntu/ trusty-updates/main mysql-server all 5.5.49-0ubuntu0.14.04.1
  404  Not Found [IP: 112.124.140.210 80]
E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-common_5.5.49-0ubuntu0.14.04.1_all.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/libmysqlclient18_5.5.49-0ubuntu0.14.04.1_amd64.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-client-core-5.5_5.5.49-0ubuntu0.14.04.1_amd64.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-client-5.5_5.5.49-0ubuntu0.14.04.1_amd64.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-server-core-5.5_5.5.49-0ubuntu0.14.04.1_amd64.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-server-5.5_5.5.49-0ubuntu0.14.04.1_amd64.deb  404  Not Found [IP: 112.124.140.210 80]

E: Failed to fetch http://mirrors.aliyun.com/ubuntu/pool/main/m/mysql-5.5/mysql-server_5.5.49-0ubuntu0.14.04.1_all.deb  404  Not Found [IP: 112.124.140.210 80]

E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?
 update $   apt-get update

...

 re-install $  apt-get install mysql-server

...
Do you want to continue? [Y/n] Y
Get:1 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-common all 5.5.52-0ubuntu0.14.04.1 [12.9 kB]
Get:2 http://mirrors.aliyun.com/ubuntu/ trusty-security/main libmysqlclient18 amd64 5.5.52-0ubuntu0.14.04.1 [596 kB]
Get:3 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-client-core-5.5 amd64 5.5.52-0ubuntu0.14.04.1 [705 kB]
Get:4 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-client-5.5 amd64 5.5.52-0ubuntu0.14.04.1 [1,468 kB]
Get:5 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-server-core-5.5 amd64 5.5.52-0ubuntu0.14.04.1 [3,282 kB]
Get:6 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-server-5.5 amd64 5.5.52-0ubuntu0.14.04.1 [1,845 kB]
Get:7 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-server all 5.5.52-0ubuntu0.14.04.1 [11.3 kB]
 install mysql-client $   apt-get install mysql-client

Reading package lists... Done
Building dependency tree
Reading state information... Done
The following package was automatically installed and is no longer required:
  linux-image-extra-3.13.0-32-generic
Use 'apt-get autoremove' to remove it.
The following NEW packages will be installed:
  mysql-client
0 upgraded, 1 newly installed, 0 to remove and 89 not upgraded.
Need to get 11.1 kB of archives.
After this operation, 130 kB of additional disk space will be used.
Get:1 http://mirrors.aliyun.com/ubuntu/ trusty-security/main mysql-client all 5.5.52-0ubuntu0.14.04.1 [11.1 kB]
Fetched 11.1 kB in 0s (970 kB/s)
Selecting previously unselected package mysql-client.
(Reading database ... 123003 files and directories currently installed.)
Preparing to unpack .../mysql-client_5.5.52-0ubuntu0.14.04.1_all.deb ...
Unpacking mysql-client (5.5.52-0ubuntu0.14.04.1) ...
Setting up mysql-client (5.5.52-0ubuntu0.14.04.1) ...
 install libmysqlclient-dev $   apt-get install libmysqlclient-dev
 test mysql $   netstat -tap | grep mysql

tcp        0      0 localhost:mysql         *:*                     LISTEN      7506/mysqld
 login mysql $   mysql -u root -p

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 42
Server version: 5.5.52-0ubuntu0.14.04.1 (Ubuntu)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.


$   show databases;

+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)
 attention Table name in ubuntu is case sensitive, so. If you want it works like in windows. Just: add the content under [mysqld], and restart it. vi /etc/mysql/my.cnf

lower_case_table_names = 1
 and then use show variables like 'lower_%' test it: +------------------------+-------+
| Variable_name          | Value |
+------------------------+-------+
| lower_case_file_system | OFF   |
| lower_case_table_names | 1     |
+------------------------+-------+
 1、Start MySQL service mysql start or /etc/inint.d/mysql start 2、Stop MySQL service mysql stop or /etc/inint.d/mysql stop 3、Restart MySQL service mysql restart or /etc/inint.d/mysql restart Uninstall mysql service mysql stop
sudo apt-get autoremove --purge mysql-server-5.0
sudo apt-get remove mysql-server
sudo apt-get autoremove mysql-server
sudo apt-get remove mysql-common
 tomcat download $   wget http://mirrors.cnnic.cn/apache/tomcat/tomcat-9/v9.0.0.M10/bin/apache-tomcat-9.0.0.M10.tar.gz
 unzip $   ls
apache-tomcat-9.0.0.M10.tar.gz

$   tar -zxvf apache-tomcat-9.0.0.M10.tar.gz
$   ls
apache-tomcat-9.0.0.M10  apache-tomcat-9.0.0.M10.tar.gz

$   mv apache-tomcat-9.0.0.M10 apache-tomcat9
 set utf8 add URIEncoding="UTF-8" in conf/server.xml at: <Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
 Visit Web W3m install sudo apt-get install w3m w3m-img -y
 zh_CN sudo apt-get install zhcon -y
 Useful command restart $   reboot
 get all run threads $   ps -ef
 get version $   apt-get install mysql-server-
 use double tab to get the version list. 方向键错乱 ubuntu下 vi输入方向键会变成ABCD，这是ubuntu预装的是vim tiny版本，安装vim full版本即可解决。 先卸载vim-tiny： $ sudo apt-get remove vim-common
 再安装vim full： $ sudo apt-get install vim
 22 port Ubuntu 默认22端口是没有开启的。 ssh: connect to host 192.168.1.105 port 22: Connection refused
lost connection
 check ps -e|grep ssh
 啥都没 install $   sudo apt-get install openssh-server
 纯命令行启动 此方法应该只适用于14-*. blog zh_CN $ sudo vi /etc/default/grub
 修改如下: 注释 GRUB_CMDLINE_LINUX_DEFAULT GRUB_CMDLINE_LINUX=”” 改成 GRUB_CMDLINE_LINUX=”text” GRUB_TERMINAL=console 注释去除 #GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
GRUB_CMDLINE_LINUX="text"

# Uncomment to disable graphical terminal (grub-pc only)
GRUB_TERMINAL=console
 重新生成配置文件 $   sudo update-grub
 保持电源关机后仍然运行 修改 Login Manager的配置文件。 打开终端： $   sudo vi /etc/systemd/logind.conf
 然后将其中的： #HandleLidSwitch=suspend 改成： HandleLidSwitch=ignore
 然后重启服务： $ sudo restart systemd-logind</description><link>https://houbb.github.io/2016/10/10/Ubuntu</link><article>侯宾宾</article><guid/><pubDate>2016-10-10</pubDate></item><item><title>Git</title><description>Git 侯宾宾      git      Version Control      2016-10-10 Init Base usage Time data back The version recall Working Directory & Stage Discard Changes Remove Files Branch Manage Bug branch Tag Build Git Server Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. git zh_CN Init Create project->Git init: git Git init->Github: import into Create maven project Use your idea to create a maven project. May like this: D:\CODE\git-demo>tree /f
文件夹 PATH 列表
卷序列号为 00000200 3E45:BF16
D:.
│  git-demo.iml
│  pom.xml
│
├─.idea
│  │  compiler.xml
│  │  misc.xml
│  │  modules.xml
│  │  workspace.xml
│  │
│  └─copyright
│          profiles_settings.xml
│
└─src
    ├─main
    │  ├─java
    │  └─resources
    └─test
        └─java
 .gitignore This file can config what type of files you do not want to commit. # maven ignore
target/
*.jar
*.war
*.zip
*.tar
*.tar.gz

# eclipse ignore
.settings/
.project
.classpath

# idea ignore
.idea/
*.ipr
*.iml
*.iws
 git init & import to Github 1、you can use this way if you use IntelliJ IDEA VCS -> Import into Version Control -> Share Project on Github
 2、common ways create a new repository on the command line echo "# git-demo" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/houbb/git-demo.git
git push -u origin master
 push an existing repository from the command line git remote add origin https://github.com/houbb/git-demo.git
git push -u origin master
 Base usage git status show the git files status; $   git status

On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .gitignore
        pom.xml

nothing added to commit but untracked files present (use "git add" to track)
 git add add files into local Repository $   git add .gitignore
 git commit commit files into local Repository $   git commit -m "first commit"

[master (root-commit) 965cf5d] first commit
 1 file changed, 6 insertions(+)
 create mode 100644 .gitignore
 git push push files into remote Repository $   git push

fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master
 $   git push --set-upstream origin master

Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 258 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/houbb/git-demo.git
 * [new branch]      master -> master
Branch master set up to track remote branch master from origin.
 In this way, we can add another file README.md into Repository for test, content is: > Hello Git
 Now, we edit the file README.md into this: > Hello Git
- git diff
 git diff see the difference between local and Repository $   git diff README.md
diff --git a/README.md b/README.md
index adb219f..e5a680e 100644
--- a/README.md
+++ b/README.md
@@ -1 +1,2 @@
-> Hello Git
\ No newline at end of file
 git log show the log of git $   git log

commit cd84e273e5ac1d42d08090d013696a237b120751
Author: houbinbin <1060732496@qq.com>
Date:   Mon Oct 10 18:43:33 2016 +0800

    git diff

commit 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3
Author: houbinbin <1060732496@qq.com>
Date:   Mon Oct 10 18:14:38 2016 +0800

    add readme

 the cd84e273e5ac1d42d08090d013696a237b120751 is commit_id, the uk of commit. Time data back The version recall In Git, HEAD stands for current version, in our demo is cd84e273e5ac1d42d08090d013696a237b120751. HEAD^ stands for last version, the version before last is HEAD^^, the last 100 version can write as HEAD~100 git reset If we want to recall version into 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3 (add readme) $   git reset --hard 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3
 and then, the content of README.md is: > Hello Git
 git reflog now, how can we recall to version of cd84e273e5ac1d42d08090d013696a237b120751(git diff)? use git reflog can get all commits you have done. $ git reflog

9f18a0c HEAD@{0}: reset: moving to 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3
cd84e27 HEAD@{1}: merge origin/master: Fast-forward
9f18a0c HEAD@{2}: reset: moving to 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3
cd84e27 HEAD@{3}: merge origin/master: Fast-forward
9f18a0c HEAD@{4}: reset: moving to 9f18a0cd10ac0eb661ab1a9bf056398c5e6fe6f3
cd84e27 HEAD@{5}: commit: git diff
9f18a0c HEAD@{6}: commit: add readme
965cf5d HEAD@{7}: commit (initial): first commit
 then $   git reset --hard cd84e27
HEAD is now at cd84e27 git diff
 and now, the content of README.md is: > Hello Git
- git diff
 Working Directory & Stage Working Directory the maven project can seem as a Working Directory Repository the files of our project, you can see the .git dir, it includes stage、and the first branch master $   dir /a

2016/10/10  18:53    <DIR>          .
2016/10/10  18:53    <DIR>          ..
2016/10/10  18:54    <DIR>          .git
2016/08/03  17:16                56 .gitignore
2016/10/10  19:06    <DIR>          .idea
2016/10/10  18:48                 0 git
2016/10/10  16:53               862 git-demo.iml
2016/10/10  16:52               419 pom.xml
2016/10/10  18:53                23 README.md
2016/10/10  16:52    <DIR>          src
 git add add files into stage git commit commit all files in stage into current branch, now is master Discard Changes if you add error content in README.md by mistake, like this: > Hello Git
- git diff
error--!
 How to discard the changes? $   git status

On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md
 As you can see, the command git checkout -- <file>... can discard changes in working directory $   git checkout -- README.md
 then, the content of README.md will be: > Hello Git
- git diff
 Remove Files git rm Now, we add temp.md for test, add it into stage $   git add temp.md

$   git status
new file:   temp.md

$   git rm temp.md

error: the following file has changes staged in the index:
    temp.md
(use --cached to keep the file, or -f to force removal)
 use git rm --cached will retains the file in your working dir and remove file from stage $   git rm --cached temp.md 
rm 'temp.md'

$   git status

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        temp.md
 Now, we commit the temp.md into branch and the use git rm, the file will be removed from working dir $   git add temp.md

$   git commit -m "add temp.md"

[master d36026f] add temp.md
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 temp.md

$ git rm temp.md
rm 'temp.md'

$ git status

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    temp.md
 1、If you really want to delete temp.md, commit it. $   git commit -m "remove temp.md"

[master d33d131] remove temp.md
 1 file changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 temp.md
 2、if you do not want delete temp.md, the file will be back ^_^ $   git checkout -- temp.md
 Branch Manage View branch local $   git branch
 remote $   git branch -r
 all $   git branch -a
 Create & Checkout houbinbindeMacBook-Pro:git-demo houbinbin$ git branch git_demo_1.1
houbinbindeMacBook-Pro:git-demo houbinbin$ git branch
  git_demo_1.1
* master
houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout git_demo_1.1
Switched to branch 'git_demo_1.1'
houbinbindeMacBook-Pro:git-demo houbinbin$
 is the same as $   git checkout -b <name>
 Push Branch into Github $   git push origin [branch name]
 Remove Branch local $   git branch -d [branch name]
 github remote $   git push origin :[branch name]
 Merge branch git wiki 
$ git checkout master

$ git pull

$ git checkout branch

$ git rebase master     (用rebase合并主干的修改，如果有冲突在此时解决)

$ git checkout master

$ git merge branch

$ git push

 push Attention, After merge it’s has no stage, so, commit will tell you nothing to change. You should use git push origin master $   git push    //push into current branch
$   git push origin master  //push into master
 branch merge tips Usually, git will use Fast Forward mode when merge, we can use --no-ff to merge. houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout -b git_demo_1.2
Switched to a new branch 'git_demo_1.2'

houbinbindeMacBook-Pro:git-demo houbinbin$ git add README.md
houbinbindeMacBook-Pro:git-demo houbinbin$ git commit -m "change git_demo_1.2"
[git_demo_1.2 8983fd1] change git_demo_1.2
 1 file changed, 2 insertions(+), 1 deletion(-)

houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
houbinbindeMacBook-Pro:git-demo houbinbin$ git merge --no-ff -m "merge with --no-ff" git_demo_1.2
Merge made by the 'recursive' strategy.
 README.md | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
 Now, see the log houbinbindeMacBook-Pro:git-demo houbinbin$ git log --graph --pretty=oneline --abbrev-commit
*   0d899d1 merge with --no-ff
|\
| * 8983fd1 change git_demo_1.2
|/
* d696904 add pom.xml
* cd84e27 git diff
* 9f18a0c add readme
* 965cf5d first commit
 remove local branch $   git branch -d xxxxx
 Bug branch If on the half of your work, you must to solve other things. For example, you write sth on branch 1.2, but there has a bug to fix, how should we do? git stash this command can save current work conditions. houbinbindeMacBook-Pro:git-demo houbinbin$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

no changes added to commit (use "git add" and/or "git commit -a")

houbinbindeMacBook-Pro:git-demo houbinbin$ git stash
Saved working directory and index state WIP on master: 0d899d1 merge with --no-ff
HEAD is now at 0d899d1 merge with --no-ff
 now, we can checkout into master and fix the bug. houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout master
Already on 'master'
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout -b git_demo_bug_001
Switched to a new branch 'git_demo_bug_001'
houbinbindeMacBook-Pro:git-demo houbinbin$ git add README.md
houbinbindeMacBook-Pro:git-demo houbinbin$ git commit -m "fix the bug"
[git_demo_bug_001 4069a0c] fix the bug
 1 file changed, 2 insertions(+), 1 deletion(-)

houbinbindeMacBook-Pro:git-demo houbinbin$ git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
houbinbindeMacBook-Pro:git-demo houbinbin$ git merge git_demo_bug_001
Updating 0d899d1..4069a0c
Fast-forward
 README.md | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

 after fix the bug, we can checkout to the 1.2 branch, continue to work houbinbindeMacBook-Pro:git-demo houbinbin$ git stash list
stash@{0}: WIP on master: 0d899d1 merge with --no-ff
houbinbindeMacBook-Pro:git-demo houbinbin$ git stash pop
On branch git_demo_1.2
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

no changes added to commit (use "git add" and/or "git commit -a")
Dropped refs/stash@{0} (9cd4d92f41db2cdb1b8e15ffde7c73c4fd6ef83c)
houbinbindeMacBook-Pro:git-demo houbinbin$ git stash list
 Tag create tag git tag <tagname> [commit_id] show tags git tag show tag detail info git show <tagname> houbinbindeMacBook-Pro:git-demo houbinbin$ git branch
  git_demo_1.1
  git_demo_1.2
  git_demo_bug_001
* master
houbinbindeMacBook-Pro:git-demo houbinbin$ git tag v1.0
houbinbindeMacBook-Pro:git-demo houbinbin$ git tag
v1.0
houbinbindeMacBook-Pro:git-demo houbinbin$ git show v1.0
commit 4069a0cc54ee97993850419a09b62023ee3fa711
Author: “houbb” <“1060732496@qq.com”>
Date:   Mon Oct 10 22:48:07 2016 +0800

    fix the bug

diff --git a/README.md b/README.md
index 5664a33..98be30e 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,4 @@
 > Hello Git
 - git diff
-- git_demo_1.2
\ No newline at end of file
+- git_demo_1.2
+fix the bug
\ No newline at end of file

houbinbindeMacBook-Pro:git-demo houbinbin$ git log --pretty=oneline --abbrev-commit
4069a0c fix the bug
0d899d1 merge with --no-ff
8983fd1 change git_demo_1.2
d696904 add pom.xml
cd84e27 git diff
9f18a0c add readme
965cf5d first commit
houbinbindeMacBook-Pro:git-demo houbinbin$ git tag v0.9 0d899d1
houbinbindeMacBook-Pro:git-demo houbinbin$ git tag
v0.9
v1.0
houbinbindeMacBook-Pro:git-demo houbinbin$ git show tag v0.9
fatal: ambiguous argument 'tag': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
houbinbindeMacBook-Pro:git-demo houbinbin$ git show v0.9
commit 0d899d1e9fa22bc3d8092d4a709abc0174186f79
Merge: d696904 8983fd1
Author: “houbb” <“1060732496@qq.com”>
Date:   Mon Oct 10 22:29:49 2016 +0800

    merge with --no-ff
 add tag with info git tag -a <tagname> -m "info" houbinbindeMacBook-Pro:git-demo houbinbin$ git tag -a v0.1 -m "first-commit-tag" 965cf5d
houbinbindeMacBook-Pro:git-demo houbinbin$ git show v0.1
tag v0.1
Tagger: “houbb” <“1060732496@qq.com”>
Date:   Mon Oct 10 23:11:05 2016 +0800

first-commit-tag

commit 965cf5db0b2ca8b062d2cd895b7431d37e11a23f
Author: houbinbin <1060732496@qq.com>
Date:   Mon Oct 10 18:05:43 2016 +0800

    first commit
 add tag with PGP sign git tag -s <tagname> -m "sign" Manage Tags houbinbindeMacBook-Pro:git-demo houbinbin$ git tag
v0.1
v0.9
v1.0
houbinbindeMacBook-Pro:git-demo houbinbin$ git tag -d v0.1
Deleted tag 'v0.1' (was 0fc098a)
houbinbindeMacBook-Pro:git-demo houbinbin$ git push origin v0.9
Counting objects: 4, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 442 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/houbb/git-demo.git
 * [new tag]         v0.9 -> v0.9
houbinbindeMacBook-Pro:git-demo houbinbin$ git push origin --tags
Counting objects: 3, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 361 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/houbb/git-demo.git
 * [new tag]         v1.0 -> v1.0

 remove local tag git tag -d <tagname> remove remote tag git push origin :refs/tags/<tagname> Build Git Server TBC…</description><link>https://houbb.github.io/2016/10/10/git</link><article>侯宾宾</article><guid/><pubDate>2016-10-10</pubDate></item><item><title>Dubbo</title><description>Dubbo 侯宾宾      dobbo      alibaba      2016-09-25 Dubbo Dubbo admin Hello World zookeeper provider customer Multi-Maven & Nexus Into local telnet Dubbo Dubbo is a distributed, high performance RPC framework which empowers applications with service import/export capabilities. It contains three key parts, which include: Remoting: a network communication framework providing sync-over-async and request-response messaging. Clustering: a remote procedure call abstraction with load-balancing/failover/clustering capabilities. Registration: a service directory framework for service registration and service event publish/subscription dubbo Dubbo admin You can download the code from https://github.com/alibaba/dubbo, and package the dubbo-admin houbinbindeMacBook-Pro:dubbo-admin houbinbin$ pwd
/Users/houbinbin/it/code/dubbo/dubbo-admin
houbinbindeMacBook-Pro:dubbo-admin houbinbin$ mvn package -Dmaven.skip.test=true
 dubbo-admin.war Download dubbo-admin-2.5.4-SNAPSHOT.war into tomcat/webapps, and rename to ROOT.war ERROR dubbo 2.5.4 在JDK8下启动错误 config tomcat edit the tomcat port(default is 8080) after these: <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
         Define a non-SSL/TLS HTTP/1.1 Connector on port 8080
    -->
 change the content to: <Connector port="8888" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" URIEncoding="UTF-8"/>
 start tomcat houbinbindeMacBook-Pro:bin houbinbin$ pwd
/Users/houbinbin/it/tools/tomcat/tomcat8/bin

houbinbindeMacBook-Pro:bin houbinbin$ sh startup.sh
Using CATALINA_BASE:   /Users/houbinbin/it/tools/tomcat/tomcat8
Using CATALINA_HOME:   /Users/houbinbin/it/tools/tomcat/tomcat8
Using CATALINA_TMPDIR: /Users/houbinbin/it/tools/tomcat/tomcat8/temp
Using JRE_HOME:        /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home
Using CLASSPATH:       /Users/houbinbin/it/tools/tomcat/tomcat8/bin/bootstrap.jar:/Users/houbinbin/it/tools/tomcat/tomcat8/bin/tomcat-juli.jar
Tomcat started.
 visit dobbo admin in browser URL:    localhost:8888

root/root
 Hello World zookeeper First of all, you need start your zookeeper. houbinbindeMacBook-Pro:bin houbinbin$ ./zkServer.sh start
ZooKeeper JMX enabled by default
Using config: /Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin/../conf/zoo.cfg
Starting zookeeper ... STARTED
houbinbindeMacBook-Pro:bin houbinbin$ pwd
/Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin
houbinbindeMacBook-Pro:bin houbinbin$ jps
32082
34610 QuorumPeerMain
34613 Jps
30221 Bootstrap
 provider customer provider File tree |____main
| |____java
| | |____com
| | | |____ryo
| | | | |____model
| | | | | |____User.java
| | | | |____Provider.java
| | | | |____service
| | | | | |____impl
| | | | | | |____UserServiceImpl.java
| | | | | |____UserService.java
| |____resources
| | |____app-core.xml
| | |____applicationContext-beans.xml
| | |____applicationContext-dubbo-provider.xml
| | |____log4j2.xml
|____test
---- pom.xml
 User.java @Data
public class User implements Serializable {

  private Long id;

  private String username;
}
 UserService.java public interface UserService {
  User getUser(Long id);
}
 UserServiceImpl.java @Service("userService")
public class UserServiceImpl implements UserService {

  public User getUser(Long id) {
    User user = new User();
    user.setId(id);
    user.setUsername("name"+id);
    return user;
  }

}
 pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>dubbo-provider</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>

        <!--spring-->
        <spring.version>4.2.6.RELEASE</spring.version>
        <!--log4j-->
        <log4j.version>2.6</log4j.version>
    </properties>

    <dependencies>
        <!--spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>2.5.3</version>
        </dependency>

        <dependency>
            <groupId>com.101tec</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.4</version>
        </dependency>

        <!--log4j-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat.version}</version>
                <configuration>
                    <port>8081</port>
                    <path>/</path>
                    <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
 app-core.xml <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="applicationContext-dubbo-customer.xml"/>
    <import resource="applicationContext-beans.xml"/>

</beans>
 applicationContext-beans.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--自动扫描 no need to include the <context:annotation-config>-->
    <context:component-scan base-package="com.ryo"/>
</beans>
 applicationContext-dubbo-provider.xml <?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="dubbo-provider"/>

    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <!-- 监听注册 -->
    <dubbo:monitor protocol="registry"/>

    <!-- 用dubbo协议在20880端口暴露服务 -1 == 20880 -->
    <dubbo:protocol name="dubbo" port="-1" />

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="com.ryo.service.UserService" ref="userService"
                   version="0.0.0" retries="0" timeout="10000"/>

</beans>
 log4j2.xml <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
    </Appenders>
    <Loggers>
        <Root level="DEBUG">
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
 Main() public class Provider {

  public static void main(String[] args) throws IOException {
    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"app-core.xml"});
    context.start();
    System.out.println("dubbo-provider start...");
    System.in.read(); // 按任意键退出
  }

}
 start the main() dubbo-provider start...
 visit the dubbo-admin If you see this, you are success of half… customer Well, customer is most the same as provider. It’s File tree: .
|____main
| |____java
| | |____com
| | | |____ryo
| | | | |____model
| | | | | |____User.java
| | | | |____service
| | | | | |____UserService.java
| |____resources
| | |____app-core.xml
| | |____applicationContext-beans.xml
| | |____applicationContext-dubbo-customer.xml
| | |____log4j2.xml
|____test
| |____java
| | |____com
| | | |____ryo
| | | | |____service
| | | | | |____UserServiceTest.java
 applicationContext-dubbo-customer.xml <?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="dubbo-customer"/>

    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <!-- 监听注册 -->
    <dubbo:monitor protocol="registry"/>

    <!-- 用dubbo协议在20880端口暴露服务 -1 == 20880 -->
    <dubbo:protocol name="dubbo" port="-1" />

    <!-- 声明需要消费的服务接口 -->
    <dubbo:reference interface="com.ryo.service.UserService" id="userService"/>

</beans>
 UserServiceTest.java @RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:/app-core.xml"})
@Log4j2
public class UserServiceTest {

  @Resource
  private UserService userService;

  @Test
  public void getUserTest() {
    User user = userService.getUser(2L);
    log.info("user info:{}", user);
  }
}
 result 23:31:47.259 [main] INFO  com.ryo.service.UserServiceTest - user info:User{id=2, username='name2'}

Process finished with exit code 0
 Multi-Maven & Nexus As you can see, the User.java and UserService.java we have write it twice. We can make it into jar, and use it. Provider maven multi-module Provider interface jar $   cd facade
$   mvn clean install

houbinbindeMacBook-Pro:target houbinbin$ pwd
/Users/houbinbin/IT/code/provider/facade/target
houbinbindeMacBook-Pro:target houbinbin$ ls
classes                 facade-1.0-SNAPSHOT.jar generated-sources       maven-archiver          maven-status
 Into local We can add the facade-1.0-SNAPSHOT.jar into maven local repository mvn install:install-file -Dfile=${jar-path} -DgroupId=com.ryo -DartifactId=${artifactId} -Dversion=${version} -Dpackaging=jar
 then mvn install:install-file -Dfile=/Users/houbinbin/IT/code/provider/facade/target/facade-1.0-SNAPSHOT.jar -DgroupId=com.ryo -DartifactId=facade -Dversion=1.0-SNAPSHOT -Dpackaging=jar

...
[INFO] --- maven-install-plugin:2.4:install-file (default-cli) @ standalone-pom ---
[INFO] Installing /Users/houbinbin/IT/code/provider/facade/target/facade-1.0-SNAPSHOT.jar to /Users/houbinbin/.m2/repository/com/ryo/facade/1.0-SNAPSHOT/facade-1.0-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.280 s
[INFO] Finished at: 2016-09-27T23:10:42+08:00
[INFO] Final Memory: 9M/309M
[INFO] ------------------------------------------------------------------------

 Use the facade-1.0-SNAPSHOT.jar in customer pom.xml <dependency>
    <groupId>com.ryo</groupId>
    <artifactId>facade</artifactId>
    <version>1.0-SNAPSHOT</version>
</dependency>
 customer tree |____main
| |____java
| |____resources
| | |____app-core.xml
| | |____applicationContext-beans.xml
| | |____applicationContext-dubbo-customer.xml
| | |____log4j2.xml
|____test
| |____java
| | |____com
| | | |____ryo
| | | | |____facade
| | | | | |____UserFacadeTest.java
 UserFacadeTest.java @RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:/app-core.xml"})
@Log4j2
public class UserFacadeTest {
  @Autowired
  private UserFacade userFacade;

  @Test
  public void getUserTest() {
    UserResponse userResponse = userFacade.getUser(2L);
    log.info("userResponse:{}", userResponse);
  }
}
 result: 23:21:11.040 [main] INFO  com.ryo.facade.UserFacadeTest - userResponse:UserResponse(id=2, username=name2)

Process finished with exit code 0
 telnet telnet</description><link>https://houbb.github.io/2016/09/25/dubbo</link><article>侯宾宾</article><guid/><pubDate>2016-09-25</pubDate></item><item><title>ZooKeeper</title><description>ZooKeeper 侯宾宾      zookeeper      Apache      2016-09-25 Zookeeper Download Add Server1 Add server2 Start & Stop Zookeeper Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination. zookeeper Download Download the zookeeper, unzip it. or $   wget http://apache.fayea.com/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
 Add Server1 Add server1 package $   cd /Users/houbinbin/it/tools/zookeeper/server1
$   ls

data		logs		zookeeper-3.4.9
 Add file myid add file myid in data package, and it’s content is 1
 Edit zookeeper-3.4.9/conf $   /Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/conf
$   ls
configuration.xsl	log4j.properties	zoo_sample.cfg

$   cp zoo_sample.cfg zoo.cfg
 Edit the zoo.cfg add these content # the data and log dir
dataDir=/Users/houbinbin/it/tools/zookeeper/server1/data
dataLogDir=/Users/houbinbin/it/tools/zookeeper/server1/logs

# the port at which the clients will connect
clientPort=2181
 Add server2 If you want to test Cluster manager in one PC, you can do it like this: server2 is the same as server1. Then, edit zoo.cfg # the data and log dir
dataDir=/Users/houbinbin/it/tools/zookeeper/server2/data
dataLogDir=/Users/houbinbin/it/tools/zookeeper/server2/logs

# the port at which the clients will connect
clientPort=2182
 Add file myid with the content of 2
 Start & Stop start houbinbindeMacBook-Pro:bin houbinbin$ pwd
/Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin

houbinbindeMacBook-Pro:bin houbinbin$ ls
README.txt	zkCli.cmd	zkEnv.cmd	zkServer.cmd
zkCleanup.sh	zkCli.sh	zkEnv.sh	zkServer.sh

houbinbindeMacBook-Pro:bin houbinbin$ sh zkServer.sh start
ZooKeeper JMX enabled by default
Using config: /Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin/../conf/zoo.cfg
-n Starting zookeeper ...
STARTED
 status If you see the QuorumPeerMain, that’s meaning you are success. houbinbindeMacBook-Pro:bin houbinbin$ jps
1920 Jps
531
1913 QuorumPeerMain
 stop houbinbindeMacBook-Pro:bin houbinbin$ sh zkServer.sh stop
ZooKeeper JMX enabled by default
Using config: /Users/houbinbin/it/tools/zookeeper/server1/zookeeper-3.4.9/bin/../conf/zoo.cfg
-n Stopping zookeeper ...
STOPPED</description><link>https://houbb.github.io/2016/09/25/zookeeper</link><article>侯宾宾</article><guid/><pubDate>2016-09-25</pubDate></item><item><title>Phabricator</title><description>Phabricator 侯宾宾      phabricator      Tools      2016-09-21 Phabricator Install in Mac Install in Ubuntu Arcanist Issues Ubuntu install warn Mail Config SSH 持续集成 Phabricator Phabricator is an integrated set of powerful tools to help companies build higher quality software. Phabricator Install in Mac Guide 一、Installing Required Components git houbinbindeMacBook-Pro:~ houbinbin$ git --version
git version 2.8.1
 AMP Apache houbinbindeMacBook-Pro:~ houbinbin$ httpd -v
Server version: Apache/2.4.16 (Unix)
Server built:   Jul 31 2015 15:53:26
 php houbinbindeMacBook-Pro:~ houbinbin$ php -v
PHP 5.5.30 (cli) (built: Oct 23 2015 17:21:45)
Copyright (c) 1997-2015 The PHP Group
Zend Engine v2.5.0, Copyright (c) 1998-2015 Zend Technologies
 MySQL MySQL 下载以下项目 $ git clone https://github.com/phacility/libphutil.git
$ git clone https://github.com/phacility/arcanist.git
$ git clone https://github.com/phacility/phabricator.git
 then 这个为实践路径。 houbinbindeMacBook-Pro:phabricator houbinbin$ pwd
/Users/houbinbin/IT/anybuy/phabricator
houbinbindeMacBook-Pro:phabricator houbinbin$ git clone https://github.com/phacility/libphutil.git
Cloning into 'libphutil'...
remote: Counting objects: 14006, done.
remote: Compressing objects: 100% (104/104), done.
 二、 Configuring Apache apache in mac start & restart $   sudo apachectl -k start

$   sudo apachectl -k restart
 browser localhost
 find httpd.conf Use command line with vim to edit or press: command + shift + G
 enter /etc/
 to find the apache dir. install in mac error: Invalid command ‘RewriteEngine’, perhaps misspelled or defined by a module not included in the server configuration edit the /etc/apache2/httpd.conf remove the # before following: LoadModule rewrite_module libexec/apache2/mod_rewrite.so
LoadModule php5_module libexec/apache2/libphp5.so
Include /private/etc/apache2/extra/httpd-vhosts.conf
 edit the /etc/apache2/extra/httpd-vhosts.conf like this: # Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

Listen 1234

<Directory "/Users/houbinbin/IT/anybuy/phabricator/phabricator/webroot">
  Require all granted
</Directory>

<VirtualHost *:1234>
  # Change this to the domain which points to your host.
  ServerName www.anybuy.com

  # Change this to the path where you put 'phabricator' when you checked it
  # out from GitHub when following the Installation Guide.
  #
  # Make sure you include "/webroot" at the end!
  DocumentRoot /Users/houbinbin/IT/anybuy/phabricator/phabricator/webroot

  RewriteEngine on
  RewriteRule ^/rsrc/(.*)     -                       [L,QSA]
  RewriteRule ^/favicon.ico   -                       [L,QSA]
  RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]
</VirtualHost>
 注意: Listen 1234 指定端口号为 1234 ServerName www.anybuy.com 后者为项目域名,本地可使用127.0.0.1 /Users/houbinbin/IT/anybuy/phabricator/phabricator/webroot 2处路径请替换成自己的实际路径。 restart the Apache and you can see config mysql /Users/houbinbin/IT/anybuy/phabricator/phabricator/bin/config set mysql.host localhost

/Users/houbinbin/IT/anybuy/phabricator/phabricator/bin/config set mysql.port 3306　

/Users/houbinbin/IT/anybuy/phabricator/phabricator/bin/config set mysql.user root　

/Users/houbinbin/IT/anybuy/phabricator/phabricator/bin/config set mysql.pass ***(Your pwd)　
 then, it’s ask you to: Run the storage upgrade script to setup Phabricator’s database schema. /Users/houbinbin/IT/anybuy/phabricator/phabricator/bin/storage upgrade
 the log may like this: Before running storage upgrades, you should take down the Phabricator web
interface and stop any running Phabricator daemons (you can disable this
warning with --force).

    Are you ready to continue? [y/N] y

Loading quickstart template...
Applying patch 'phabricator:db.packages'...
Applying patch 'phabricator:20160201.revision.properties.1.sql'...
Applying patch 'phabricator:20160201.revision.properties.2.sql'...
Applying patch 'phabricator:20160706.phame.blog.parentdomain.2.sql'...
Applying patch 'phabricator:20160706.phame.blog.parentsite.1.sql'...
Applying patch 'phabricator:20160707.calendar.01.stub.sql'...
Applying patch 'phabricator:20160711.files.01.builtin.sql'...
Applying patch 'phabricator:20160711.files.02.builtinkey.sql'...
Applying patch 'phabricator:20160713.event.01.host.sql'...
Applying patch 'phabricator:20160715.event.01.alldayfrom.sql'...
Applying patch 'phabricator:20160715.event.02.alldayto.sql'...
Applying patch 'phabricator:20160715.event.03.allday.php'...
Applying patch 'phabricator:20160720.calendar.invitetxn.php'...
Restructuring calendar invite transactions...
Done.
Applying patch 'phabricator:20160721.pack.01.pub.sql'...
Applying patch 'phabricator:20160721.pack.02.pubxaction.sql'...
Applying patch 'phabricator:20160721.pack.03.edge.sql'...
Applying patch 'phabricator:20160721.pack.04.pkg.sql'...
Applying patch 'phabricator:20160721.pack.05.pkgxaction.sql'...
Applying patch 'phabricator:20160721.pack.06.version.sql'...
Applying patch 'phabricator:20160721.pack.07.versionxaction.sql'...
Applying patch 'phabricator:20160722.pack.01.pubngrams.sql'...
Applying patch 'phabricator:20160722.pack.02.pkgngrams.sql'...
Applying patch 'phabricator:20160722.pack.03.versionngrams.sql'...
Applying patch 'phabricator:20160810.commit.01.summarylength.sql'...
Applying patch 'phabricator:20160824.connectionlog.sql'...
Applying patch 'phabricator:20160824.repohint.01.hint.sql'...
Applying patch 'phabricator:20160824.repohint.02.movebad.php'...
Applying patch 'phabricator:20160824.repohint.03.nukebad.sql'...
Applying patch 'phabricator:20160825.ponder.sql'...
Applying patch 'phabricator:20160829.pastebin.01.language.sql'...
Applying patch 'phabricator:20160829.pastebin.02.language.sql'...
Applying patch 'phabricator:20160913.conpherence.topic.1.sql'...
Applying patch 'phabricator:20160919.repo.messagecount.sql'...
Applying patch 'phabricator:20160919.repo.messagedefault.sql'...
Storage is up to date. Use 'storage status' for details.
Verifying database schemata...


Database                 Table                    Name              Issues
phabricator_calendar     calendar_event           userPHID_dateFrom Surplus Key
phabricator_calendar     calendar_event           key_date          Missing Key
phabricator_file         file_transaction_comment key_draft         Surplus Key
phabricator_harbormaster harbormaster_build       key_initiator     Missing Key
phabricator_herald       herald_rule              name              Better Collation Available
phabricator_herald       herald_rule              key_name          Missing Key
phabricator_packages     packages_package         name              Better Collation Available
phabricator_packages     packages_publisher       name              Better Collation Available
phabricator_search       search_document          key_type          Missing Key
phabricator_worker       worker_archivetask       key_modified      Missing Key
Applying schema adjustments...
Done.
Completed applying all schema adjustments.
 visit the phabricator http://127.0.0.1:1234/
 Install in Ubuntu If you are installing on Ubuntu, there are install scripts available which should handle most of the things discussed in this document for you: install_ubuntu.sh install zh_CN install zh_CN 一、 install_ubuntu.sh Visit the install_ubuntu.sh Create file install_ubuntu.sh $   vi install_ubuntu.sh
 Copy the shell content of install_ubuntu.sh into install_ubuntu.sh; Run $   sudo chmod 755 install_ubuntu.sh
$   sudo ./install_ubuntu.sh

PHABRICATOR UBUNTU INSTALL SCRIPT
This script will install Phabricator and all of its core dependencies.
Run it from the directory you want to install into.

Phabricator will be installed to: /root/code.
Press RETURN to continue, or ^C to cancel.
 二、 Config Apache some commands $   /etc/init.d/apache2 start
$   /etc/init.d/apache2 restart
$   /etc/init.d/apache2 stop
 config apache ubuntu apache ch_ZN add in /etc/apache2/httpd.conf LoadModule rewrite_module libexec/apache2/mod_rewrite.so
LoadModule php5_module libexec/apache2/libphp5.so
 edit /etc/apache2/apache2.conf $   vi /etc/apache2/apache2.conf
 add this : ServerName 139.196.28.125

<Directory "/root/code/phabricator/webroot">
    Require all granted
</Directory>


 edit 000-default.conf $   vim /etc/apache2/sites-enabled/000-default.conf
 change the path of DocumentRoot to: /root/code/phabricator/webroot
 add these: RewriteEngine on
RewriteRule ^/rsrc/(.*)     -                       [L,QSA]
RewriteRule ^/favicon.ico   -                       [L,QSA]
RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]
 restart apache $    /etc/init.d/apache2 restart
 三、 403 Forbidden

You don't have permission to access / on this server.

Apache/2.4.7 (Ubuntu) Server at 139.196.28.125 Port 1234
 I think If you had add this, it’s still 403. May be you should change the permission of your project package. For easy, I move the phabricator relative package to var/www/, Finally, it’s worked~~~T_T <Directory "/root/code/phabricator/webroot">
    Require all granted
</Directory>
 四、 Config mysql set config /root/code/phabricator/bin/config set mysql.host localhost
/root/code/phabricator/bin/config set mysql.port 3306
/root/code/phabricator/bin/config set mysql.user root
/root/code/phabricator/bin/config set mysql.pass ****
 update config /root/code/phabricator/bin/storage upgrade
 Arcanist The primary use of arc is to send changes for review in Differential arc code review zh_CN 一、 Install in Windows install git git install php Download php zip Unzip in package, like: C:\php Copy C:\php\php.ini-production, and renamed to php.ini Edit php.ini, remove the ; of following lines ; extension_dir = "ext"
;extension=php_mbstring.dll
;extension=php_curl.dll
 install components install $   some_install_path/ $ git clone https://github.com/phacility/libphutil.git
$   some_install_path/ $ git clone https://github.com/phacility/arcanist.git
 config edit ~/.bash_profile file M3_HOME=/usr/local/maven/maven3.3.9
ARC_HOME=/Users/houbinbin/it/code/arcanist

PATH=$ARC_HOME/bin:$M3_HOME/bin:$PATH
 Path：export PATH="/Users/houbinbin/it/code/arcanist/bin"
Edit：（mac建议用vi）：arc set-config editor "/usr/bin/vi"
Addr：arc set-config default http://www.XXX.com/
Cred：yourproject/ $ arc install-certificate
 refresh config file: source .bash_profile test $   arc help
 二、 Relative commands arc diff：发送代码差异（review request）到Differental功能
arc list：限时未提交的代码信息
arc branch [branch name]：创建并checkout分支
arc land [branch name]：代码审核通过后，合并主分支
arc tasks：展示当前任务
 Issues 0、No Authentication Providers Configured 这个如果不设置，在其他电脑登陆，将失去验证方式。 http://XXX.XXX.XX.XXX/auth/
 地址替换成自己对应的IP，点击【Add Provider】 可选择最常规的一个: Provider
	Username/Password
Allow users to login or register using a username and password.
 后面默认，保存点击【Add Provider】 http://XXX.XXX.XX.XXX/config/edit/auth.require-approval/ 选择 Require Administrators to Approve Accounts 则用户注册需要管理员审核。 1、Base URI Not Configured $    /var/www/phabricator/bin/config set phabricator.base-uri 'http://139.196.28.125:1234/'
 2、Phabricator Daemons Are Not Running $   /var/www/phabricator/bin/phd start

Freeing active task leases...
Freed 0 task lease(s).
Launching daemons:
(Logs will appear in "/var/tmp/phd/log/daemons.log".)

    PhabricatorRepositoryPullLocalDaemon (Static)
    PhabricatorTriggerDaemon (Static)
    PhabricatorTaskmasterDaemon (Autoscaling: group=task, pool=4, reserve=0)

Done.
 3、Server Timezone Not Configured $   vim /etc/php5/apache2/php.ini

date.timezone = Asia/Shanghai
 You need to restart apache2 to make if effect. 4、Disable PHP always_populate_raw_post_data The “always_populate_raw_post_data” key is set to some value other than “-1” in your PHP configuration. This can cause PHP to raise deprecation warnings during process startup. Set this option to “-1” to prevent these warnings from appearing. $   vi /etc/php5/apache2/php.ini

always_populate_raw_post_data = -1

$   /etc/init.d/apache2 restart
 5、PHP post_max_size Not Configured Adjust post_max_size in your PHP configuration to at least 32MB. When set to smaller value, large file uploads may not work properly. In this file: /etc/php5/apache2/php.ini post_max_size = 32M
 restart apache to make it work. 6、Set Mail install send mail $   apt-get install sendmail
 mail URL:    http://139.196.28.125:1234/config/group/metamta/


metamta.default-address = 13062666053@qq.com

metamta.domain = anybuy.com     //as you like

metamta.mail-adapter = PhabricatorMailImplementationPHPMailerLiteAdapter

     <!--576 is tls try 465 for ssl-->
    <property name="port" value="465"/>
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="javaMailProperties" >
        <props>
            <!--<prop key="mail.transport.protocol">smtp</prop>-->
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.timeout">25000</prop>
            <!-- true for Gamil -->
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.debug">true</prop>
        </props>
    </property>
 PHPMailer URL:    http://139.196.28.125:1234/config/group/phpmailer/


$   /var/www/phabricator/bin/config set phpmailer.smtp-host smtp.qq.com

$   /var/www/phabricator/bin/config set phpmailer.smtp-port 465

$   /var/www/phabricator/bin/config set phpmailer.smtp-user 13062666053@qq.com

$   /var/www/phabricator/bin/config set phpmailer.smtp-password

 send fail You can find the mail send info in /var/mail/root
 the error may: 550 Ip frequency limited. http://service.mail.qq.com/cgi-bin/help?subtype=1&&id=20022&&no=1000725
554 5.0.0 Service unavailable
 tips 如果邮件配置的是SSL协议，端口是465，则需要开启相应端口。我开始配置的SSL没有成功，换回25端口，邮件就能发送了。 如果发送没有成功，通过页面上的Daemons的console日志来查找原因。 send 7、Edit Option: phabricator.timezone Asia available Set the value into Asia/Shanghai http://127.0.0.1:1234/config/edit/phabricator.timezone/?issue=config.timezone
 8、Base URI Not Configured houbinbindeMacBook-Pro:phabricator houbinbin$ bin/config set phabricator.base-uri 'http://127.0.0.1:1234/'
Set 'phabricator.base-uri' in local configuration.
houbinbindeMacBook-Pro:phabricator houbinbin$ pwd
/Users/houbinbin/IT/anybuy/phabricator/phabricator
 9、Disable PHP always_populate_raw_post_data 10、Small MySQL “max_allowed_packet” (1) In Mac Default, MAC has no my.cnf, copy and move it: houbinbindeMacBook-Pro:support-files houbinbin$ pwd
/usr/local/mysql/support-files
houbinbindeMacBook-Pro:support-files houbinbin$ ls
binary-configure	magic			my-default.cnf		mysql-log-rotate	mysql.server		mysqld_multi.server
houbinbindeMacBook-Pro:support-files houbinbin$ sudo cp my-default.cnf my.cnf
houbinbindeMacBook-Pro:support-files houbinbin$ sudo mv my.cnf /etc/my.cnf
houbinbindeMacBook-Pro:etc houbinbin$ pwd
/etc
houbinbindeMacBook-Pro:etc houbinbin$ vi my.cnf
 to change the max_allowed_packet value: max_allowed_packet=41943040
 and then, restart your mysql sudo /usr/local/mysql/support-files/mysql.server restart
 (2) In Ubuntu 14.04 The recommended minimum value for this setting is “33554432”. vi /etc/mysql/my.cnf 
 edit the content max_allowed_packet = 32M
 restart mysql 11、Missing Repository Local Path $   sudo mkdir -p '/var/repo/'
 12、Install Pygments to Improve Syntax Highlighting Click 【Edit “pygments.enabled”】, then select Use Pygments, finally click 【Save Config Entry】 13、MySQL STRICT_ALL_TABLES Mode Not Set vi /etc/mysql/my.cnf
 add this under the [mysqld] # add sql mode
sql_mode=STRICT_ALL_TABLES
 then restart mysql make it effect. /etc/init.d/mysql restart
 14、No Sendmail Binary Found Click 【Edit “metamta.mail-adapter”】 Select: “PhabricatorMailImplementationPHPMailerAdapter” Ubuntu install warn 运行时警告信息如下: Package php5-cli is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source
However the following packages replace it:
  php7.0-cli:i386 php7.0-cli
 原因: 这个问题的原因是ubuntu的/etc/apt/source.list中的源比较旧了，需要更新一下，更新方法：

$ sudo apt-get -y update
 可能系统需要安装 apache2 $   sudo apt-get install apache2
 php sudo apt install php7.0-cli
 Mail Config jianshu install blog zh_CN config zh_CN 管理员账号浏览器后端添加/config/进入配置界面。 Mail /config/group/metamta/ to config mail metamta.default-address 设置一个默认邮箱即可。 如: 13062666053@sina.cn,应保持与phpmailer中设置一致。 metamta.domain 这个无所谓,使用默认配置即可。 metamta.mail-adapter 使用SMTP邮箱,请设置邮件适配器PhabricatorMailImplementationPHPMailerAdapter phpmailer in the URL of: /config/group/phpmailer/, you can use command to config: bin/config set phpmailer.smtp-host smtp.sina.cn
bin/config set phpmailer.smtp-port  25
bin/config set phpmailer.smtp-protocol  TLS
bin/config set phpmailer.smtp-user 13062666053@sina.cn
bin/config set phpmailer.smtp-password  XXXX
 smtp-port 默认可以使用25, 如果配置SSL,则需要使用465。 cat  conf/local/local.json
 可以查看本地设置数据。 测试是否发送: bin/mail list-outbound
 apt-get install sendmail
 一切配好之后，重启 守护线程 bin/phd restart
 SSH repository 如果代码仓库想使用git管理项目。需要配置SSH。 Phabricator需要三个用户账号（三种用户身份）：两个用于基本运行，一个用于配置SSH访问。 三个账号分别是： www-user：Phabricator Web服务器运行身份。 daemon-user：daemons （守护进程）运行身份。这个账号是唯一直接与代码仓库交互的账号，其它账号需要切换到这个账号身份（sudo）才能操作代码仓库。 vcs-user：我们需要以这个账号SSH连接Phabricator。 如果你的服务器系统中现在没有这三个账号，需要创建： www-user：大部分情况下，这个账号已经存在了，我们不需要理这个账号。 daemon-user ：一般情况下，我们直接使用 root 账号，因为会需要很多权限（当然这可能不安全）。 vcs-user：可以使用系统中现有的一个用户账号，直接创建一个就叫 vcsuser。当用户克隆仓库的时候，需要使用类似 vcsuser@pha.example.com 的URI。 验证账户是否存在: cat /etc/passwd | grep www-user
cat /etc/passwd | grep daemon-user
cat /etc/passwd | grep vcs-user
 查询用户组: cat /etc/group 很不幸。几个账户都不存在。 创建用户 useradd www-user -m -s /bin/bash
useradd vcs-user -m -s /bin/bash
 set password for create user: sudo passwd www-user
sudo passwd vcs-user
 一、Configuring Phabricator 以下所有操作,都换成root模式。 First, set phd.user to the daemon-user(root): $pwd
/var/www/phabricator

$ sudo bin/config set phd.user root

Set 'phd.user' in local configuration.
 Restart the daemons to make sure this configuration works properly. $   bin/phd restart

There are no running Phabricator daemons.
Freeing active task leases...
Freed 0 task lease(s).
Launching daemons:
(Logs will appear in "/var/tmp/phd/log/daemons.log".)

    PhabricatorRepositoryPullLocalDaemon (Static)
    PhabricatorTriggerDaemon (Static)
    PhabricatorTaskmasterDaemon (Autoscaling: group=task, pool=4, reserve=0)

Done.
 If you’re using a vcs-user for SSH, you should also configure that: $ sudo bin/config set diffusion.ssh-user vcs-user
Set 'diffusion.ssh-user' in local configuration
 Next, you’ll set up sudo permissions so these users can interact with one another. 二、Configuring Sudo 默认情况下。添加的用户是没有sudo权限的。 www-user 和 vcs-user 需要能够使用 sudo 切换到 daemon-user 用户身份才能与仓库交互，所以我们需要配置更改系统的 sudo 配置。 直接编辑 /etc/sudoers 或者在 /etc/sudoers.d 下创建一个新文件，然后把这些内容写到文件内容中 此处直接 vi /etc/sudoers, 添加内容如下: # add sudo for www-user and vcs-user
www-user ALL=(root) SETENV: NOPASSWD: /usr/lib/git-core/git, /usr/bin/git, /var/lib/git, /usr/lib/git-core/git-http-backend, /usr/bin/ssh, /etc/ssh, /etc/default/ssh, /etc/init.d/ssh
vcs-user ALL=(root) SETENV: NOPASSWD: /bin/sh, /usr/bin/git-upload-pack, /usr/bin/git-receive-pack
 如果文件中有Defaults requiretty, 注释掉。 三、其它SSH配置 /etc/shadow 中找到vcs-user的哪一行。修改第二列(密码列)为空,或者NP。 /etc/passwd 中找到vcs-user的哪一行。修改/bin/false为/bin/sh。 四、配置SSHD端口 ssh ssh version $ ssh -V
OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8, OpenSSL 1.0.1f 6 Jan 2014
 Phabricator运行的服务器系统中 sshd 的版本 必须高于 6.2 port 默认为22 1) create phabricator-ssh-hook.sh in /usr/libexec/phabricator-ssh-hook.sh 我选择放在 /etc/ssh/shell 中 #!/bin/sh

# NOTE: Replace this with the username that you expect users to connect with.
VCSUSER="vcs-user"

# NOTE: Replace this with the path to your Phabricator directory.
ROOT="/var/www/phabricator"

if [ "$1" != "$VCSUSER" ];
then exit 1
fi exec "$ROOT/bin/ssh-auth" $@
 创建完脚本后，需要把脚本和它的父文件夹所有者改为 root，并且赋予脚本 755 权限 sudo chown root /etc/ssh/shell
sudo chown root /etc/ssh/shell/phabricator-ssh-hook.sh
sudo chmod 755 /etc/ssh/shell/phabricator-ssh-hook.sh
 2) Create sshd_config 在 /etc/ssh 中创建文件名类似 sshd_config.phabricator 的文件 $ pwd
/etc/ssh
$ sudo vi sshd_config.phabricator
 文件内容如下, 此处配置端口号为 2222 If you plan to connect to a port other than 22, you should set this port as diffusion.ssh-port in your Phabricator config: $ bin/config set diffusion.ssh-port 2222
 # NOTE: You must have OpenSSHD 6.2 or newer; support for AuthorizedKeysCommand
# was added in this version.

# NOTE: Edit these to the correct values for your setup.

AuthorizedKeysCommand /etc/ssh/shell/phabricator-ssh-hook.sh
AuthorizedKeysCommandUser vcs-user
AllowUsers vcs-user

# You may need to tweak these options, but mostly they just turn off everything
# dangerous.

Port 2222
Protocol 2
PermitRootLogin no
AllowAgentForwarding no
AllowTcpForwarding no
PrintMotd no
PrintLastLog no
PasswordAuthentication no
AuthorizedKeysFile none

PidFile /var/run/sshd-phabricator.pid
 3) 启动 ssh 服务 sudo /usr/sbin/sshd -f /etc/ssh/sshd_config.phabricator
 使用 sudo netstat -atlunp | grep ssh 可查看端口运行情况。 4) 上传公钥 点击你的头像 —> 左侧菜单面板 Manage —> 右侧菜单面板 Edit Settings —> 左侧菜单面板 SSH Public Keys —> 右上角 SSH Key Actions —> Upload Public Key 上传后,执行 echo {} | ssh vcs-user@127.0.0.1 conduit conduit.ping
 5) 创建项目 http://139.196.28.125/diffusion/ 下创建项目: callsign 必须大写 This newly created repository is not active yet. Configure policies, options, and URIs. When ready, Activate the repository.
If activated now, this repository will become a new hosted repository. To observe an existing repository instead, configure it in the URIs panel.
 6) clone git clone ssh://vcs-user@139.196.28.125:2222/source/rd.git
 发现需要使用的是端口转发,但是要登录的还是139.196.28.125服务器。所以需要为其创建vcs-user。后来发现这是个问题。可能是因为转发问题,导致不存在。以后研究。 此处需要开启端口号2222。并启动转发。 useradd vcs-user -m -s /bin/bash
 持续集成 Git + Jenkins + Pha 创建用户 http://139.196.28.125/people/create/
 选择 Create Bot User-》填入用户信息-》Create User。 编辑用户信息 http://139.196.28.125/p/jenkins/
 点击左侧【Manage】-》右侧【Edit Settings】-》左侧【Conduit API Tokens】-》右侧【Generate API Token】-》【Generate Token】 复制其中的 token。 添加token到Jenkins 1) 安装 phabricator 插件 Phabricator Differential Plugin 2) copy token http://139.196.28.125:8080/configure
 找到Phabricator -》Credentials, 添加信息如下:</description><link>https://houbb.github.io/2016/09/21/phabricator</link><article>侯宾宾</article><guid/><pubDate>2016-09-21</pubDate></item><item><title>Python</title><description>Python 侯宾宾      python      programming language      2016-09-02 Python Hello World Python Base Python Python is powerful… and fast; plays well with others; runs everywhere; is friendly & easy to learn; is Open. python python zh_CN Hello World Install cmd C:\Users\houbinbin>python
Python 3.5.0 (v3.5.0:374f501f4567, Sep 13 2015, 02:27:37) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> 100+200
300
>>> print("hello, world")
hello, world
>>>
 run *.py 2016/09/02  10:10                22 hello.py
               1 个文件             22 字节
               2 个目录 125,722,767,360 可用字节

D:\python>python hello.py
hello, world
 the content of hello.py is: print("hello,world");
 Python Base Input >>> name=input();
ryo
>>> name
'ryo'
>>> print(name);
ryo
 run *.py D:\python>python hello.py
Please enter your name: ryo
hello,  ryo
 the content of hello.py is； name=input("Please enter your name: ");
print("hello, ", name);
 Charset ord & chr >>> ord("a");
97
>>> ord("你");
20320
>>> chr(97);
'a'
>>> chr(20320);
'你'
 encode & decode >>> "abc".encode("utf-8");
b'abc'
>>> "你好".encode("utf-8");
b'\xe4\xbd\xa0\xe5\xa5\xbd'
>>> "你好".encode("ascii");
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128) >>> b'abc'.decode("utf-8"); 'abc' >>> b'\xe4\xbd\xa0\xe5\xa5\xbd'.decode("utf-8"); '你好' len >>> len("abc");
3
>>> len("你好");
2
>>> len("\xe4\xbd\xa0\xe5\xa5\xbd");
6
>>> len("你好".encode("utf-8"));
6
 Read encode 当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行： #!/usr/bin/env python3
# -*- coding: utf-8 -*-
 第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释； 第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。 #!/usr/bin/env python3
# -*- coding: utf-8 -*-

print("中文测试");
 Format #!/usr/bin/env python3
# -*- coding: utf-8 -*-

s1 = 72
s2 = 85
r=(s2-s1)/s1*100
print("小明成绩提高了%.1f%%"%r)
 the result is: 小明成绩提高了18.1%</description><link>https://houbb.github.io/2016/09/02/python</link><article>侯宾宾</article><guid/><pubDate>2016-09-02</pubDate></item><item><title>Mybatis Generator</title><description>Mybatis Generator 侯宾宾      mybatis      SQL      2016-08-25 Mybatis Generator Code Bugs Mybatis Generator Use zh_CN Code You need mybatis-generator-core.jar and mysql-connector-java.jar. Then, use schema.sql to create table in your mysql. use mvn mybatis-generator:generate to run project. You may find directory not exists error, solve it. pom.xml <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ryo</groupId>
  <artifactId>mybaits</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>mybaits Maven Webapp</name>
  <url>http://maven.apache.org</url>


  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-core</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.30</version>
    </dependency>

  </dependencies>

  <build>
      <finalName>mybaits</finalName>
      <plugins>
          <plugin>
              <groupId>org.mybatis.generator</groupId>
              <artifactId>mybatis-generator-maven-plugin</artifactId>
              <version>1.3.0</version>

              <dependencies>
                  <dependency>
                      <groupId>org.mybatis.generator</groupId>
                      <artifactId>mybatis-generator-core</artifactId>
                      <version>1.3.2</version>
                  </dependency>

                  <dependency>
                      <groupId>mysql</groupId>
                      <artifactId>mysql-connector-java</artifactId>
                      <version>5.1.30</version>
                  </dependency>
              </dependencies>
          </plugin>
      </plugins>
  </build>
</project>

 schema.sql CREATE TABLE `test`.`teacher` (
`id` bigint NOT NULL DEFAULT 0 COMMENT '主键id',
`name` varchar(40) NOT NULL DEFAULT '' COMMENT '名称',
`age` smallint NOT NULL DEFAULT 0 COMMENT '年龄',
PRIMARY KEY (`id`)
) COMMENT='教师表';
 generatorConfig.xml <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="MySQLTables" targetRuntime="MyBatis3">
        <!--关闭注释 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!--数据库连接信息 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/test"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!--生成的model 包路径 -->
        <javaModelGenerator targetPackage="com.ryo.gen.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成xml mapper文件 路径 -->
        <sqlMapGenerator targetPackage="com.ryo.gen.xml" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成的Dao接口 的包路径 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.ryo.gen.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--对应数据库表名 -->
        <table tableName="teacher">

        </table>
    </context>
</generatorConfiguration>
 Bugs properties bug properties bug AbstractMethodError When use the version of mybatis-generator-maven-plugin is 1.3.5, meet this: Failed to execute goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.5:generate (default-cli) on project app-demo-dal: Execution default-cli of goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.5:generate failed: An API incompatibility was encountered while executing org.mybatis.generator:mybatis-generator-maven-plugin:1.3.5:generate: java.lang.AbstractMethodError: tk.mybatis.mapper.generator.MapperCommentGenerator.addModelClassComment(Lorg/mybatis/generator/api/dom/java/TopLevelClass;Lorg/mybatis/generator/api/IntrospectedTable;)V
 Change the version into 1.3.2 will be okay.</description><link>https://houbb.github.io/2016/08/25/Mybatis-Generator</link><article>侯宾宾</article><guid/><pubDate>2016-08-25</pubDate></item><item><title>Maven Plugin</title><description>Maven Plugin 侯宾宾      maven      apache      2016-08-20 Core plugins compiler surefire Reporting plugins javadoc Misc tomcat7 Versions Auto-Config auto-config auto-config 命令 Maven is - at its heart - a plugin execution framework; all work is done by plugins. Looking for a specific goal to execute? This page lists the core plugins and others. There are the build and the reporting plugins: Build plugins will be executed during the build and they should be configured in the <build/> element from the POM. Reporting plugins will be executed during the site generation and they should be configured in the <reporting/> element from the POM. Because the result of a Reporting plugin is part of the generated site, Reporting plugins should be both internationalized and localized. You can read more about the localization of our plugins and how you can help. maven plugin Core plugins Plugins corresponding to default core phases (ie. clean, compile). They may have multiple goals as well. compiler Compiles Java sources. <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>${maven-compiler-plugin.version}</version>
    <configuration>
        <source>1.8</source>
        <target>1.8</target>
    </configuration>
</plugin>
 surefire Run the JUnit unit tests in an isolated classloader. <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>${maven-surefire-plugin.version}</version>
    <configuration>
        <skipTests>true</skipTests>
        <testFailureIgnore>true</testFailureIgnore>
    </configuration>
</plugin>
 Reporting plugins Plugins which generate reports, are configured as reports in the POM and run under the site generation lifecycle. javadoc Generate Javadoc for the project. <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-javadoc-plugin</artifactId>
    <version>2.9.1</version>


    <configuration>
        <!--maven 多模块-->
        <aggregate>true</aggregate>

        <!--路径-->
        <reportOutputDirectory>../doc</reportOutputDirectory>
        <!--目录-->
        <destDir>myapidocs</destDir>

        <!--IOS ERROR: Unable to find javadoc command: The environment variable JAVA_HOME is not correctly set.-->
        <javadocExecutable>${java.home}/../bin/javadoc</javadocExecutable>


        <!--自定义标签-->
        <tags>
            <tag>
                <!--name为你Java代码中的注解的名字-->
                <name>Description</name>
                <!--事实上这个就是说你要把哪些（方法、字段、类）上面的注解放到JavaDoc中-->
                <placement>a</placement>
                <!--head。假设不写这个，用的就是name，假设写了，那么显示效果例如以下：-->
                <head>用途</head>
            </tag>
        </tags>
    </configuration>

</plugin>
 Misc A number of other projects provide their own Maven plugins. tomcat7 Run an Apache Tomcat container for rapid webapp development. <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
</properties>

<build>
    <plugins>
        <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>${plugin.tomcat.version}</version>
            <configuration>
                <port>8081</port>
                <path>/</path>
                <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
            </configuration>
        </plugin>
    </plugins>
</build>
 Versions versions-plugin zh_CN mvn versions:set -DnewVersion=1.0.1-SNAPSHOT
 commit mvn versions:commit
 revert mvn versions:revert
 正确修改方法: (1) 修改父类 mvn versions:set -DgroupId=com.framework -DartifactId=framework* -DoldVersion=* -DnewVersion=1.0.2-SNAPSHOT
 (2) 修改子类 mvn -N versions:update-child-modules
 Auto-Config Auto-Config Import in maven <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <properties>
        <!-- 定义autoconfig的版本，建议将此行写在parent pom.xml中。 -->
        <autoconfig-plugin-version>1.2</autoconfig-plugin-version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>com.alibaba.citrus.tool</groupId>
                <artifactId>autoconfig-maven-plugin</artifactId>
                <version>${autoconfig-plugin-version}</version>
                <configuration>
                    <!-- 要进行AutoConfig的目标文件，默认为${project.artifact.file}。 <dest>${project.artifact.file}</dest> -->
                    <!-- 配置后，是否展开目标文件，默认为false，不展开。 <exploding>true</exploding> -->
                    <!-- 展开到指定目录，默认为${project.build.directory}/${project.build.finalName}。 <explodedDirectory> ${project.build.directory}/${project.build.finalName} </explodedDirectory> -->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>autoconfig</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
 跳过执行 $   mvn install –Dautoconfig.skip
 想使用配置文件 (1) 直接将生成的配置文件 antx.properties 视为配置文件使用。放在本地。 (2) 打成war包之后可以自动属性替换掉。 1、 maven war struct: war-project（源目录结构）               -> war-project.war（目标目录结构）
 │  pom.xml
 │
 └─src
     └─main
         ├─java
         ├─resources                    -> /WEB-INF/classes
         │      file1.xml                      file1.xml
         │      file2.xml                      file2.xml
         │
         └─webapp                       -> /
             ├─META-INF                 -> /META-INF
             │  └─autoconf              -> /META-INF/autoconf
             │        auto-config.xml          auto-config.xml
             │
             └─WEB-INF                  -> /WEB-INF
                   web.xml                     web.xml
                   file3.xml                   file3.xml
 /META-INF/autoconf 目录用来存放AutoConfig的描述文件，以及可选的模板文件。 auto-config.xml 是用来指导AutoConfig行为的关键描述文件。 2、 maven jar struct jar-project（源目录结构）               -> jar-project.jar（目标目录结构）
 │  pom.xml
 │
 └─src
     └─main
         ├─java
         └─resources                    -> /
             │  file1.xml                      file1.xml
             │  file2.xml                      file2.xml
             │
             └─META-INF                 -> /META-INF
                 └─autoconf             -> /META-INF/autoconf
                       auto-config.xml         auto-config.xml
 3、Common directory directory
 │  file1.xml
 │  file2.xml
 │
 └─conf
       auto-config.xml
 auto-config <?xml version="1.0" encoding="UTF-8"?>
<config>
    <group>

        <property name="petstore.work"
                    description="应用程序的工作目录" />

        <property name="petstore.loggingRoot"
                    defaultValue="${petstore.work}/logs"
                    description="日志文件目录" />

        <property name="petstore.upload"
                    defaultValue="${petstore.work}/upload"
                    description="上传文件的目录" />

        <property name="petstore.loggingLevel"
                    defaultValue="warn"
                    description="日志文件级别">

            <validator name="choice"
                         choice="trace, debug, info, warn, error" />

        </property>

    </group>
    <script>
        <generate template="WEB-INF/web.xml" />
        <generate template="WEB-INF/common/resources.xml" />
    </script>
</config>
 完整的properties <property
    name="..."
    [defaultValue="..."]
    [description="..."]
    [required="true|false"]
>
    <validator name="..." />
    <validator name="..." />
    ...
</property>
 生成配置文件的指令 <generate
    template="..."
    [destfile="..."]
    [charset="..."]
    [outputCharset="..."]
>
 auto-config 命令 $ autoconfig
Detected system charset encoding: UTF-8
If your can't read the following text, specify correct one like this:
  autoconfig -c mycharset

使用方法：autoconfig [可选参数] [目录名|包文件名]

可选参数：
 -c,--charset                输入/输出编码字符集
 -d,--include-descriptors
                             包含哪些配置描述文件，例如：conf/auto-config.xml，可使用*、**、?通配符，如有多项，用逗号分隔
 -D,--exclude-descriptors    排除哪些配置描述文件，可使用*、**、?通配符，如有多项，用逗号分隔
 -g,--gui                    图形用户界面（交互模式）
 -h,--help                   显示帮助信息
 -i,--interactive            交互模式：auto|on|off，默认为auto，无参数表示on
 -I,--non-interactive        非交互模式，相当于--interactive=off
 -n,--shared-props-name      共享的属性文件的名称
 -o,--output                 输出文件名或目录名
 -P,--exclude-packages       排除哪些打包文件，可使用*、**、?通配符，如有多项，用逗号分隔
 -p,--include-packages
                             包含哪些打包文件，例如：target/*.war，可使用*、**、?通配符，如有多项，用逗号分隔
 -s,--shared-props           共享的属性文件URL列表，以逗号分隔
 -T,--type                   文件类型，例如：war, jar, ear等
 -t,--text                   文本用户界面（交互模式）
 -u,--userprop               用户属性文件
 -v,--verbose                显示更多信息</description><link>https://houbb.github.io/2016/08/20/MavenPlugin</link><article>侯宾宾</article><guid/><pubDate>2016-08-20</pubDate></item><item><title>Mybatis</title><description>Mybatis 侯宾宾      mybatis      ORM      2016-08-11 MyBatis Hello World Tips key has list result has list; Error MyBatis MyBatis is a first class persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis eliminates almost all of the JDBC code and manual setting of parameters and retrieval of results. MyBatis can use simple XML or Annotations for configuration and map primitives, Map interfaces and Java POJOs (Plain Old Java Objects) to database records. mybatis mybatis doc tools Hello World mybatis.jar & mysql-connector-java.jar <dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>${mybatis.version}</version>
</dependency>

<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>${mysql.version}</version>
</dependency>
 MyBatisUtil.java public class MyBatisUtil {
    private MyBatisUtil(){}
    private static SqlSessionFactory sqlSessionFactory = null;

    static {
        try {
            sqlSessionFactory = new SqlSessionFactoryBuilder().build(
                    Resources.getResourceAsStream("mybatis-config.xml"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static SqlSessionFactory getSqlSessionFactory() {
        return sqlSessionFactory;
    }
}
 mybatis-config.xml & jdbc.properties <?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 引入配置信息文件 -->
    <properties resource="jdbc.properties" />

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${user}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="com/ryo/mapper/UserMapper.xml"/>
    </mappers>
</configuration>
 driver=com.mysql.jdbc.Driver
url=jdbc:mysql://127.0.0.1:3306/mybatis?useUnicode=true&characterEncoding=utf8
user=root
password=
 UserMapper.java & UserMapper.xml public interface UserMapper {
    User selectUser(Long id);
}
 <?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ryo.mapper.UserMapper">

    <!--定义所有列,方便使用,一般应该避免使用*-->
    <sql id="columns"> id,username,password,createdOn</sql>

    <!--id 对应方法名称-->
    <select id="selectUser" parameterType="java.lang.Long" resultType="com.ryo.domain.User">
        SELECT
        <include refid="columns"/>
        FROM User WHERE id = #{id}
    </select>
</mapper>
 sql & domain CREATE TABLE user (
  id        BIGINT(20) PRIMARY KEY AUTO_INCREMENT NOT NULL
  COMMENT '主键, 自增',
  username  VARCHAR(64)                           NOT NULL
  COMMENT '用户名',
  password  VARCHAR(128)                          NOT NULL
  COMMENT '密码',
  createdOn DATETIME                              NOT NULL
  COMMENT '创建时间',

  UNIQUE INDEX `username_UNIQUE` (`username`)
)
  COMMENT '用户表';

INSERT INTO `user` (username, password, createdOn) VALUES (
  'ryo', '123456', '2016-07-28 14:32:30'
);
 public class User implements Serializable {
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    private Long id;
    private String username;
    private String password;
    private Date createdOn;

    //getter & setter

    //toString()
}
 UserMapperTest.java & result public class UserMapperTest {
    private SqlSessionFactory sqlSessionFactory = MyBatisUtil.getSqlSessionFactory();

    @Test
    public void testSelectUser() throws IOException {
        UserMapper userMapper = sqlSessionFactory.openSession().getMapper(UserMapper.class);
        System.out.println(userMapper.selectUser(1L));
    }
}
 User{id=1, username='ryo', password='123456', createdOn=Thu Jul 28 14:32:30 CST 2016}

Process finished with exit code 0
 File strut Tips key has list *key.java public class Key {

  private String username;

  private List<Integer> ids;

  //getter & setter
}
 *mapper.xml SELECT * FROM tableName
WHERE username = #{username}
<if test="orderStatusList != null and orderStatusList.size > 0">
  AND id in
  <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	#{item}
  </foreach>
</if>
 Tips If we have this case: StudentDto.java public class StudentDto {
    private Long id;
    private String name;
}
 We want to query student that matches (id=1 and name=”001”) OR (id=2 and name=”002”)… *Key.java public class Key {
    private int age;
    private List<StudentDto> studentDtoList;
}
 *Mapper.xml <select id="query" parameterType="Key" resultMap="BaseResultMap">
    SELECT * FROM table 
    WHERE age=#{age}
    <if test="studentDtoList != null and studentDtoList.size > 0">
        AND
        <foreach item="item" index="index" collection="studentDtoList" open="(" separator=" OR " close=")">
          (
          id=#{item.id,jdbcType=INTEGER} and
          name=#{item.name,jdbcType=CHAR}
          )
        </foreach>
    </if>
    
    
</select>
 result has list; We have a classroom & student table simple like this classroom(
id, name
);

student(
id, classroom_id, name
);
 the model of student is: public class Student {
    private Long id;
    private Long classroomId;
    private String name;
}
 the result we want may like this: public class Result {
    private Long id;  //classroom id;
    private String name; //classroom name
    private List<Student> studentList;
}
 the resultMap should be: <resultMap id="Result" type="Result">
	<id column="id" property="id" jdbcType="BIGINT"/>
	<result column="name" property="name" jdbcType="CHAR"/>

	<collection property="studentList" ofType="Student">
		<id column="student_id" property="id" jdbcType="BIGINT"/>
		<result column="classroom_id" property="classroomId" jdbcType="BIGINT"/>
		<result column="student_name" property="name" jdbcType="INTEGER"/>
	</collection>
</resultMap>
 the query sql: SELECT c.id, c.name,
	s.id AS  student_id,
	s.classroom_id AS classroom_id,
	s.name AS student_name
FROM classroom AS c
LEFT JOIN student ON c.id = s.classroom_id
 Error return null from a method with a primitive return type You have two ways to solve this: Change the result type from primitive to object; Use IFNULL of MySQL, like this: SELECT IFNULL(MAX(name),0) AS name FROM user WHERE id = #{id}
 diff between #{field} and ${field} You use order by #{field}/${field} #{field} If set field=”create_time DESC”, the result is: order by create_time DESC ASC
 ${field} If set field=”create_time DESC”, the result is: order by create_time ASC
 Error NoClassDefFoundError java.lang.NoClassDefFoundError: org/apache/ibatis/cursor/Cursor why jar 包版本冲突 solve 注意 mybatis-spring.jar 对应的 mybatis.jar 和 spring-*.jar 版本。</description><link>https://houbb.github.io/2016/08/11/mybatis</link><article>侯宾宾</article><guid/><pubDate>2016-08-11</pubDate></item><item><title>Shiro</title><description>Shiro 侯宾宾      shiro      Apache      2016-08-11 RBAC Shiro Hello world Realms multi-realm JDBC Realm Authenticator AuthenticationStrategy RBAC RBCA RBCA zh_CN Shiro Apache Shiro is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management. With Shiro’s easy-to-understand API, you can quickly and easily secure any application, from the smallest mobile applications to the largest web and enterprise applications. shiro shiro zh_CN Shiro provides the application security API to perform the following aspects: Authentication - proving user identity, often called user ‘login’ Authorization - access control Cryptography - protecting or hiding data from prying eyes Session Management - per-user time-sensitive state Subject->SecurityManager: SecurityManager->Realms: Hello world pom.xml <dependencies>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.9</version>
    </dependency>
    <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.3</version>
    </dependency>
    <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>1.2.2</version>
    </dependency>
</dependencies>
 shiro.ini create this file under the classpath. [users]
ryo=123
wang=123
 ShiroTest.java @Test
public void testHelloworld() {
    Factory<SecurityManager> factory =
            new IniSecurityManagerFactory("classpath:shiro.ini");

    org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
    Subject subject = SecurityUtils.getSubject();
    UsernamePasswordToken token = new UsernamePasswordToken("ryo", "123");

    try {
        subject.login(token);
    } catch (AuthenticationException e) {
        //login falied
    }

   assertEquals(true, subject.isAuthenticated());   //assert user has logined.

   //logout
   subject.logout();
}
 Realms Realms act as the ‘bridge’ or ‘connector’ between Shiro and your application’s security data. When it comes time to actually interact with security-related data like user accounts to perform authentication (login) and authorization (access control), Shiro looks up many of these things from one or more Realms configured for an application. Realm.java public interface Realm {
    String getName();   //返回一个唯一的Realm名字

    boolean supports(AuthenticationToken var1); //判断此Realm是否支持此Token

    AuthenticationInfo getAuthenticationInfo(AuthenticationToken var1) throws AuthenticationException;  //根据Token获取认证信息
}
 MyRealm.java public class MyRealm implements Realm {
    @Override
    public String getName() {
        return "firstRealm";
    }

    @Override
    public boolean supports(AuthenticationToken authenticationToken) {
        //仅支持UsernamePasswordToken类型的Token
        return authenticationToken instanceof UsernamePasswordToken;
    }

    @Override
    public AuthenticationInfo getAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        String username = (String) authenticationToken.getPrincipal();      //get username
        String password = new String((char[]) authenticationToken.getCredentials());    //get password
        if (!"ryo".equals(username)) {
            throw new UnknownAccountException();
        }
        if (!"123".equals(password)) {
            throw new IncorrectCredentialsException();
        }

        //如果身份认证验证成功，返回一个AuthenticationInfo实现；
        return new SimpleAuthenticationInfo(username, password, getName());
    }
}
 shiro-realm.ini create this file under the classpath. #declear realm
firstRealm=com.ryo.shiro.MyRealm
#point the realms impls of securityManager
securityManager.realms=$firstRealm
 test() @Test
public void testRealm() {
    Factory<SecurityManager> factory =
            new IniSecurityManagerFactory("classpath:shiro-realm.ini");
    org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
    Subject subject = SecurityUtils.getSubject();
    UsernamePasswordToken token = new UsernamePasswordToken("ryo", "123");

    try {
        subject.login(token);
    } catch (AuthenticationException e) {
    }

    assertEquals(true, subject.isAuthenticated());

    subject.logout();
}
 multi-realm define another realm SecondRealm.java public class SecondRealm implements Realm {
    public String getName() {
        return "secondRealm";
    }

    public boolean supports(AuthenticationToken authenticationToken) {
        return authenticationToken instanceof UsernamePasswordToken;
    }

    public AuthenticationInfo getAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
        String username = (String) authenticationToken.getPrincipal();
        String password = new String((char[]) authenticationToken.getCredentials());
        if (!"wang".equals(username)) {
            throw new UnknownAccountException();
        }
        if (!"123".equals(password)) {
            throw new IncorrectCredentialsException();
        }
        return new SimpleAuthenticationInfo(username, password, getName());
    }
}
 define shiro-multi-realm.ini [main]
#define
firstRealm=com.ryo.shiro.FirstRealm
secondRealm=com.ryo.shiro.SecondRealm
#use
securityManager.realms=$firstRealm,$secondRealm
 test() @Test
public void testMultiRealm() {
    Factory<SecurityManager> factory =
            new IniSecurityManagerFactory("classpath:shiro-multi-realm.ini");

    org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);

    Subject subject = SecurityUtils.getSubject();
    UsernamePasswordToken token = new UsernamePasswordToken("wang", "123");

    try {
        subject.login(token);
    } catch (AuthenticationException e) {
        e.printStackTrace();
    }

    Assert.assertEquals(true, subject.isAuthenticated());

    subject.logout();
}
 Notice The realm worked only after you used it. JDBC Realm Add jars info your pom.xml, here I user MySQL and druid datasource for test. <dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>5.1.25</version>
</dependency>
<dependency>
    <groupId>com.alibaba</groupId>
    <artifactId>druid</artifactId>
    <version>0.2.23</version>
</dependency>
 Here are some sql to init database. DROP DATABASE IF EXISTS shiro;
CREATE DATABASE shiro;
USE shiro;

CREATE TABLE users (
  id            BIGINT AUTO_INCREMENT,
  username      VARCHAR(100),
  password      VARCHAR(100),
  password_salt VARCHAR(100),
  CONSTRAINT pk_users PRIMARY KEY (id)
)
  CHARSET = utf8
  ENGINE = InnoDB;
CREATE UNIQUE INDEX idx_users_username ON users (username);

CREATE TABLE user_roles (
  id        BIGINT AUTO_INCREMENT,
  username  VARCHAR(100),
  role_name VARCHAR(100),
  CONSTRAINT pk_user_roles PRIMARY KEY (id)
)
  CHARSET = utf8
  ENGINE = InnoDB;
CREATE UNIQUE INDEX idx_user_roles ON user_roles (username, role_name);

CREATE TABLE roles_permissions (
  id         BIGINT AUTO_INCREMENT,
  role_name  VARCHAR(100),
  permission VARCHAR(100),
  CONSTRAINT pk_roles_permissions PRIMARY KEY (id)
)
  CHARSET = utf8
  ENGINE = InnoDB;
CREATE UNIQUE INDEX idx_roles_permissions ON roles_permissions (role_name, permission);

INSERT INTO users (username, password) VALUES ('wang', '123');
INSERT INTO users (username, password) VALUES ('ryo', '123');
 shiro-jdbc-realm.ini [main]
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
dataSource=com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName=com.mysql.jdbc.Driver
dataSource.url=jdbc:mysql://localhost:3307/shiro
dataSource.username=root
dataSource.password=${youOwnSQLPassword}
jdbcRealm.dataSource=$dataSource
securityManager.realms=$jdbcRealm


;1、varName=className    auto create an instance of class.
;2、varName.property=val         auto call the set()
;3、$varname             reference an object define before;
 test() @Test
public void testJDBCRealm() {
    Factory<org.apache.shiro.mgt.SecurityManager> factory =
            new IniSecurityManagerFactory("classpath:shiro-jdbc-realm.ini");

    org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);

    Subject subject = SecurityUtils.getSubject();
    UsernamePasswordToken token = new UsernamePasswordToken("ryo", "123");

    try {
        subject.login(token);
    } catch (AuthenticationException e) {
        e.printStackTrace();
    }

    Assert.assertEquals(true, subject.isAuthenticated());

    subject.logout();
}
 Authenticator In a single-realm application, the ModularRealmAuthenticator will invoke the single Realm directly. If you wish to configure the SecurityManager with a custom Authenticator implementation, you can do so in shiro.ini for example: [main]
authenticator = com.foo.bar.CustomAuthenticator

securityManager.authenticator = $authenticator
 SecurityManager.java public interface SecurityManager extends Authenticator, Authorizer, SessionManager {
}
 Authenticator.java public interface Authenticator {
    AuthenticationInfo authenticate(AuthenticationToken var1) throws AuthenticationException;
}
 AuthenticationStrategy When two or more realms are configured for an application, the ModularRealmAuthenticator relies on an internal AuthenticationStrategy component to determine the conditions for which an authentication attempt succeeds or fails. AuthenticationStrategy class Description AtLeastOneSuccessfulStrategy If one (or more) Realms authenticate successfully, the overall attempt is considered successful. If none authenticate succesfully, the attempt fails. FirstSuccessfulStrategy Only the information returned from the first successfully authenticated Realm will be used. All further Realms will be ignored. If none authenticate successfully, the attempt fails. AllSuccessfulStrategy All configured Realms must authenticate successfully for the overall attempt to be considered successful. If any one does not authenticate successfully, the attempt fails. 1、Here I define three realm for test; FirstRealm ryo/123 success, return ryo/123 SecondRealm wang/123 success, return wang/123 ThirdRealm ryo/123 success, return ryo@gmail.com/123 2、shiro-authenticator-all-success.ini The ModularRealmAuthenticator defaults to the AtLeastOneSuccessfulStrategy implementation, as this is the most commonly desired strategy. However, you could configure a different strategy if you wanted. [main]
#point out securityManager's authenticator  
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator  
securityManager.authenticator=$authenticator  
  
#Point out securityManager.authenticator's authenticationStrategy  
allSuccessfulStrategy=org.apache.shiro.authc.pam.AllSuccessfulStrategy  
securityManager.authenticator.authenticationStrategy=$allSuccessfulStrategy  

#Define and use realms
firstRealm=com.ryo.shiro.FirstRealm
secondRealm=com.ryo.shiro.SecondRealm
thirdRealm=com.ryo.shiro.ThirdRealm
securityManager.realms=$firstRealm,$thirdRealm
 3、AuthenticatorTest.java @Test
public void testAllSuccessfulStrategyWithSuccess() {
    Subject subject = getSubjectByPath("classpath:shiro-authenticator-all-success.ini");

    UsernamePasswordToken token = new UsernamePasswordToken("ryo", "123");
    subject.login(token);

    PrincipalCollection principalCollection = subject.getPrincipals();
    assertEquals("ryo,ryo@gmail.com", principalCollection.toString());
}

private Subject getSubjectByPath(String configFilePath) {
    Factory<SecurityManager> factory = new IniSecurityManagerFactory(configFilePath);

    SecurityManager securityManager = factory.getInstance();
    SecurityUtils.setSecurityManager(securityManager);
    return SecurityUtils.getSubject();
}
 Tips If you wanted to create your own AuthenticationStrategy implementation yourself, you could use the org.apache.shiro.authc.pam.AbstractAuthenticationStrategy as a starting point. OnlyOneAuthenticatorStrategy.java public class OnlyOneAuthenticatorStrategy extends AbstractAuthenticationStrategy {
    //Simply returns the aggregate argument without modification.
    @Override
    public AuthenticationInfo beforeAllAttempts(Collection<? extends Realm> realms, AuthenticationToken token) throws AuthenticationException {
        return super.beforeAllAttempts(realms, token);
    }

    //Simply returns the aggregate method argument, without modification.
    @Override
    public AuthenticationInfo beforeAttempt(Realm realm, AuthenticationToken token, AuthenticationInfo aggregate) throws AuthenticationException {
        return super.beforeAttempt(realm, token, aggregate);
    }

    /** * Base implementation that will aggregate the specified singleRealmInfo into the aggregateInfo and then returns the aggregate. * @param realm the realm that was just consulted for AuthenticationInfo for the given token. * @param token the AuthenticationToken submitted for the subject attempting system log-in. * @param singleRealmInfo the info returned from a single realm. 单个realm信息 * @param aggregateInfo the aggregate info representing all realms in a multi-realm environment. 总信息 * @param t the Throwable thrown by the Realm during the attempt, or null if the method returned normally. * @return * @throws AuthenticationException */
    @Override
    public AuthenticationInfo afterAttempt(Realm realm, AuthenticationToken token, AuthenticationInfo singleRealmInfo, AuthenticationInfo aggregateInfo, Throwable t) throws AuthenticationException {
        AuthenticationInfo info;

        if(singleRealmInfo == null) {
            info = aggregateInfo;
        } else if(aggregateInfo == null) {
            info = singleRealmInfo;
        } else {
            info = merge(singleRealmInfo, aggregateInfo);

            if(info.getPrincipals().getRealmNames().size() > 1) {
                throw new AuthenticationException("Authentication token of type [" + token.getClass() + "] " +
                        "could not be authenticated by any configured realms. Please ensure that only one realm can " +
                        "authenticate these tokens.");
            }
        }

        return info;
    }

    //Merges the specified info argument into the aggregate argument and then returns an aggregate for continued use throughout the login process.
    @Override
    protected AuthenticationInfo merge(AuthenticationInfo info, AuthenticationInfo aggregate) {
        return super.merge(info, aggregate);
    }

    //Base implementation that will aggregate the specified singleRealmInfo into the aggregateInfo and then returns the aggregate.
    @Override
    public AuthenticationInfo afterAllAttempts(AuthenticationToken token, AuthenticationInfo aggregate) throws AuthenticationException {
        return super.afterAllAttempts(token, aggregate);
    }
}
 shiro-authenticator-onlyone-success.ini [main]
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator
securityManager.authenticator=$authenticator

onlyOneAuthenticatorStrategy=com.ryo.shiro.authenticator.strategy.OnlyOneAuthenticatorStrategy
securityManager.authenticator.authenticationStrategy=$onlyOneAuthenticatorStrategy

#define and uer realms.
firstRealm=com.ryo.shiro.FirstRealm
secondRealm=com.ryo.shiro.SecondRealm
securityManager.realms=$firstRealm,$secondRealm
 test() @Test
    public void testOnlyOneAuthenticatorStrategy() {
        Subject subject = getSubjectByPath("classpath:shiro-authenticator-onlyone-success.ini");

        UsernamePasswordToken token = new UsernamePasswordToken("ryo", "123");
        subject.login(token);

        PrincipalCollection principalCollection = subject.getPrincipals();
        assertEquals("ryo", principalCollection.toString());
    }
 if you change the shiro-authenticator-onlyone-success.ini into #define and uer realms.
firstRealm=com.ryo.shiro.FirstRealm
thirdRealm=com.ryo.shiro.ThirdRealm
securityManager.realms=$firstRealm,$thirdRealm
 You will get an error as following. org.apache.shiro.authc.AuthenticationException: Authentication token of type [class org.apache.shiro.authc.UsernamePasswordToken] 
could not be authenticated by any configured realms.  Please ensure that only one realm can authenticate these tokens.</description><link>https://houbb.github.io/2016/08/11/shiro</link><article>侯宾宾</article><guid/><pubDate>2016-08-11</pubDate></item><item><title>Nexus</title><description>Nexus 侯宾宾      nexus      apache      2016-08-06 Nexus download install start Config Repository Remote Repository Tips Nexus The world’s best way to organize, store, and distribute software components. Nexus download->install: install->start: download download Install methods: A bundle with Jetty, only need JRE. I choose this way nexus-2.13.0-01-bundle.tar.gz; War, deploy on web is okay. install Unzip the file at where you want. There are two folder: nexus-2.13.0-01 contains what Nexus run needed. sonatype-work contains the config, repository, log files. start Enter the bin folder, in ~/nexus-2.13.0-01/bin, run the nexus you may get: houbinbindeMacBook-Pro:~ houbinbin$ /Users/houbinbin/IT/learn/nexus/nexus-2.13.0-01-bundle/nexus-2.13.0-01/bin/nexus ; exit;
Usage: /Users/houbinbin/IT/learn/nexus/nexus-2.13.0-01-bundle/nexus-2.13.0-01/bin/nexus { console | start | stop | restart | status | dump }
logout
Saving session...
...copying shared history...
...saving history...truncating history files...
...completed.
 so, just run following command to start the nexus serve. /Users/houbinbin/IT/learn/nexus/nexus-2.13.0-01-bundle/nexus-2.13.0-01/bin/nexus start
 You can edit the port in file nexus.properties in the path of: ~/nexus/nexus-2.13.0-01-bundle/nexus-2.13.0-01/conf
 visit Input the url in your browser, then you can visit the dashboard of nexus. http://127.0.0.1:8081/nexus
 login You can login the nexus on the right top place, the default admin is: usr:    admin
pwd:    admin123
 Config intro zh_CN 3rd zh_CN setting zh_CN 1、Set all remote repository use internal repository in setting.xml. <!--setting maven only use internal repository-->
<mirrors>
    <mirror>
        <id>central</id>
        <name>central-mirror</name>
        <mirrorOf>*</mirrorOf>
        <url>http://localhost:8081/nexus/content/groups/public/</url>
    </mirror>
</mirrors>

<profiles>
    <profile>
        <!--this profile will allow snapshots to be searched when activated-->
        <id>public-snapshots</id>
        <repositories>
            <repository>
                <id>public-snapshots</id>
                <url>http://localhost:8081/nexus/content/groups/public</url>
                <releases><enabled>true</enabled></releases>
                <snapshots><enabled>true</enabled></snapshots>
            </repository>
        </repositories>
        <pluginRepositories>
            <pluginRepository>
                <id>public-snapshots</id>
                <url>http://localhost:8081/nexus/content/groups/public</url>
                <releases><enabled>true</enabled></releases>
                <snapshots><enabled>true</enabled></snapshots>
            </pluginRepository>
        </pluginRepositories>
    </profile>
</profiles>

<activeProfiles>
    <activeProfile>public-snapshots</activeProfile>
</activeProfiles>
 Repository Remote Repository set in pom.xml <repositories>
    <repository>
        <id>nexus</id>
        <name>Team Nexus Repository</name>
        <url>http://localhost:8081/nexus/content/groups/public</url>
        <releases><enabled>true</enabled></releases>
        <snapshots>
            <enabled>true</enabled>
            <checksumPolicy>ignore</checksumPolicy>
            <updatePolicy>daily</updatePolicy>
        </snapshots>
    </repository>
</repositories>
 authentication in maven setting.xml <settings>
    <!--...-->
    <servers>
        <server>
            <id>my-auth</id>
            <username>usr</username>
            <password>pwd</password>
        </server>
    </servers>
</settings>
 There must be a server in setting.xml that it’s id equals pom.xml, ad=nd right authentication info. deploy to remote repository in pom.xml <distributionManagement> 
    <repository> 
        <id>releases</id>
        <name>Nexus Releases Repository</name>
         <url>http://localhost:8081/nexus/content/repositories/releases/</url> 
    </repository>
     
    <snapshotRepository> 
        <id>snapshots</id>
        <name>Nexus Snapshots Repository</name>
        <url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
</distributionManagement>
 then, use following command can deploy it. mvn clean deploy
 It need auth when deploy. <servers>
    <server>
        <id>releases</id>
        <username>admin</username>
        <password>admin123</password>
    </server>
    <server>
        <id>snapshots</id>
        <username>admin</username>
        <password>admin123</password>
    </server>
</servers>
 默认角色: 1） admin ：对 Nexus 服务的完全控制权限，默认密码为 admin123 2） deployment ：能够访问 Nexus ，浏览仓库内容，搜索并且上传部署构件但无法配置 Nexus ，默认密码为： deployment123 3） anonymous ：对应所有未登录用户，可以浏览和搜索仓库 Jar包存储地址默认为: ~/nexus/nexus-2.13.0-01-bundle/sonatype-work/nexus/storage
 Mirror Everything we can get from the X repository, can also get from it’s mirror. Actual my like this: <mirrors>
  <mirror>
    <id>nexus</id>
    <mirrorOf>*</mirrorOf>
    <url>http://localhost:8081/nexus/content/groups/public</url>
  </mirror>
</mirrors>
 <mirrorOf>*</mirrorOf> Match all remote repository. <mirrorOf>external: *</mirrorOf> Match all not localhost’s remote repository. <mirrorOf>repo1, repo2</mirrorOf> Match repo1 and repo2 … <mirrorOf>*, !repo1</mirrorOf> Match all except repo1. 注: 这个一般不用修改。 Tips Cannot deploy artifacts when Maven is in offline mode Enter Command+, to search maven, dis-select Work offline. 上传三方jar到 点击【Add Artifact】-》点击【Upload Artifact(s)】</description><link>https://houbb.github.io/2016/08/06/Nexus</link><article>侯宾宾</article><guid/><pubDate>2016-08-06</pubDate></item><item><title>POI</title><description>POI 侯宾宾      poi      Util      2016-07-18 POI Hello World POI Apache POI - the Java API for Microsoft Documents poi quick-start Hello World jar <dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <verison>${poi.version}</verison>
</dependency>
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <verison>${poi-ooxml.version}</verison>
</dependency>
 get first sheet /** * 获取Excel第一个Sheet * @param file excel文件 * @param fileSuffix excel类型 xls/xlsx */
public static Sheet getFirstSheet(File file, String fileSuffix) throws IOException {
    InputStream stream = new FileInputStream(file);
    Workbook wb = null;
    if (fileSuffix.equals("xls")) {
      wb = new HSSFWorkbook(stream);
    } else if (fileSuffix.equals("xlsx")) {
      wb = new XSSFWorkbook(stream);
    }
    return wb.getSheetAt(0);
}
 get cell value /** * 根据列类型，获得对应的String类型 * @return 不存在/不支持的类型，则返回"" */
public static String getCellValueStr(Cell cell, String dateFormatStr) {
    String cellValueStr = "";
    if (null != cell) {
      Object cellValue = null;
      switch (cell.getCellType()) {
        case Cell.CELL_TYPE_STRING:
          cellValueStr = cell.getRichStringCellValue().getString();
          break;
        case Cell.CELL_TYPE_NUMERIC:
          if (DateUtil.isCellDateFormatted(cell)) {
            cellValue= cell.getDateCellValue();
            SimpleDateFormat formatter = new SimpleDateFormat(dateFormatStr);
            cellValueStr = formatter.format(cellValue);
          } else {
            cellValue=cell.getNumericCellValue();
            cellValueStr = String.valueOf(cellValue);
          }
          break;
        case Cell.CELL_TYPE_BOOLEAN:
          cellValue = cell.getBooleanCellValue();
          cellValueStr = String.valueOf(cellValue);
          break;
        case Cell.CELL_TYPE_FORMULA:
          cellValue = cell.getCellFormula();
          cellValueStr = String.valueOf(cellValue);
          break;
        default:
          System.out.println("不支持的excel单元格类型");
      }
    }
    return cellValueStr;
}
 get excel content –> CSV /** * 获取Excel工作区的文件内容 - 字符串形式 * - 需要置换excel每列的数据（除了每行的结束）以外所有换行符 "\n" * - 所有CEll都视为String类型 */
public static String getSheetContent(Sheet sheet, String charset) throws UnsupportedEncodingException {
    StringBuffer stringBuffer = new StringBuffer();
    String dateTimeFormatStr = "yyyy-MM-dd HH:mm:ss";
    String lineSeparator = System.getProperty("line.separator", "\n");  //换行符

    for(Row row : sheet) {
      for(Cell cell : row) {
        cell.setCellType(Cell.CELL_TYPE_STRING);  //全部以String类型读取
        String cellStr = new String(getCellValueStr(cell, dateTimeFormatStr).getBytes(), charset);
        String trimCellStr = cellStr.replaceAll(lineSeparator, StringUtils.EMPTY);
        stringBuffer.append(trimCellStr).append(",");
      }

      //此行有内容
      if(row.getFirstCellNum() != CommonConstant.INVALID_NUMBER) {
        stringBuffer.deleteCharAt(stringBuffer.lastIndexOf(","));  //最后一个“,”
        stringBuffer.append(lineSeparator);
      }
    }

    return stringBuffer.toString();
}</description><link>https://houbb.github.io/2016/07/18/poi</link><article>侯宾宾</article><guid/><pubDate>2016-07-18</pubDate></item><item><title>Design Pattern2</title><description>Design Pattern2 侯宾宾      design pattern      Design Pattern      2016-07-18 Proxy static proxy dynamic proxy Strategy Proxy Intent Provide a surrogate or placeholder for another object to control access to it. Applicability A remote proxy provides a local representative for an object in a different address space. A virtual proxy creates expensive objects on demand. A protection proxy controls access to the original object. A smart reference is a replacement for a bare pointer that performs additional actions when an object is accessed. Consequences A remote proxy can hide the fact that an object resides in a different address space. A virtual proxy can perform optimizations such as creating an object on demand. Both protection proxies and smart references allow additional housekeeping tasks when an object is accessed. static proxy struct demo Suppose we want to add some methods before   after the RealSubject.operation(), how to do ? Subject.java public interface Subject {
    void operation();
}
 RealSubject.java public class RealSubject implements Subject {
    @Override
    public void operation() {
        System.out.println("Real do sth.");
    }
}
 ProxySubject.java public class ProxySubject implements Subject {
    private Subject subject;

    public ProxySubject(Subject subject) {
        this.subject = subject;
    }

    @Override
    public void operation() {
        System.out.println("before...");
        subject.operation();
        System.out.println("after...");
    }
}
 test public class ProxySubjectTest extends TestCase {
    @Test
    public void testProxy() {
        Subject subject = new ProxySubject(new RealSubject());
        subject.operation();
    }
}
 result before...
Real do sth.
after...

Process finished with exit code 0
 dynamic proxy Why we use dynamic proxy ? If there are many methods, it’s hard to use static proxy to solve it. struct Request.java public interface Request {
    void request();

    void response();
}
 RealRequest.java public class RealRequest implements Request {
    @Override
    public void request() {
        System.out.println("Real request");
    }

    @Override
    public void response() {
        System.out.println("Real response");
    }
}
 ProxyHandler.java We use reflect to dynamic create class file, then the target object is flexible. package com.ryo.dynamicProxy;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

/** * Created by 侯彬彬 on 2016/7/18. */
public class ProxyHandler implements InvocationHandler {
    private Object target;

    public Object bind(Object target) {
        this.target = target;

        return Proxy.newProxyInstance(target.getClass().getClassLoader(),
                target.getClass().getInterfaces(),
                this);
    }

    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        System.out.println("dynamic before...");
        Object result = method.invoke(target, args);
        System.out.println("dynamic after...\n");

        return result;
    }
}
 test public class DynamicProxyTest extends TestCase {
    @Test
    public void testProxy() {
        ProxyHandler proxyHandler = new ProxyHandler();
        Request request = (Request) proxyHandler.bind(new RealRequest());
        request.request();

        request.response();
    }
}
 result dynamic before...
Real request
dynamic after...

dynamic before...
Real response
dynamic after...


Process finished with exit code 0
 Tips: As you can see, the dynamic proxy of java is depends on interface, if there is no interface, we can use aspectj to solve it. Strategy Intent Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it. Applicability many related classes differ only in their behavior. Strategy is provide a way to configure a class with one of many behaviors. you need different variants of an algorithm. For example, you might define algorithms reflecting different space/time trade-offs. Strategies can be used when these variants are implemented as a classhierarchy of algorithms [HO87]. an algorithm uses data that clients shouldn’t know about. Use the Strategy pattern to avoid exposing complex, algorithm-specific data structures. a class defines many behaviors, and these appear as multiple conditional statements in its operations. Instead of many conditionals, move related conditional branches into their own Strategy class. Struct Consequences Inheritance can help factor out common functionality of the algorithms. Encapsulating the algorithm in separate Strategy classes lets you vary the algorithm independently of its context, making it easier to switch, understand, and extend. Strategies eliminate conditional statements. Strategies can provide different implementations of the same behavior. The client can choose among strategies with different time and space trade-offs. shortcoming Clients must be aware of different Strategies. Communication overhead between Strategy and Context. Increased number of objects. Implementation Suppose we has different count for different level customers. common member: no count advanced member: 0.9 VIP: 0.7 Here is the code: PriceStrategy.java public interface PriceStrategy {
    double calcPrice(double price);
}
 CommonMemberStrategy.java public class CommonMemberStrategy implements PriceStrategy {
    @Override
    public double calcPrice(double price) {
        System.out.println("Common member has no count...");

        return price;
    }
}
 AdvancedMemberStrategy.java public class AdvancedMemberStrategy implements PriceStrategy {
    private static final double COUNT = 0.9;

    @Override
    public double calcPrice(double price) {
        System.out.println("Advanced member has the count of " + COUNT);

        return price * COUNT;
    }
}
 VIPStrategy.java public class VIPStrategy implements PriceStrategy {
    private static final double COUNT = 0.7;

    @Override
    public double calcPrice(double price) {
        System.out.println("VIP has the count of " + COUNT);

        return price * COUNT;
    }
}
 Price.java public class Price {
    private PriceStrategy priceStrategy;

    public Price(PriceStrategy priceStrategy) {
        this.priceStrategy = priceStrategy;
    }

    public double getPrice(double price) {
        return priceStrategy.calcPrice(price);
    }
}
 test public class PriceTest extends TestCase {
    public void testGetPrice() {
        final double PRICE  = 10.0;

        Price price = new Price(new CommonMemberStrategy());
        price.getPrice(PRICE);

        Price price1 = new Price(new AdvancedMemberStrategy());
        price1.getPrice(PRICE);

        Price price2 = new Price(new VIPStrategy());
        price2.getPrice(PRICE);
    }
}
 result Common member has no count...
Advanced member has the count of 0.9
VIP has the count of 0.7

Process finished with exit code 0</description><link>https://houbb.github.io/2016/07/18/DesignPattern2</link><article>侯宾宾</article><guid/><pubDate>2016-07-18</pubDate></item><item><title>Design Pattern</title><description>Design Pattern 侯宾宾      design pattern      Design Pattern      2016-07-15 Design Pattern Singleton lazy loading starve enum Prototype shallow copy deep copy Factory simple factory factory method abstract factory Design Pattern “Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice” [AIS+77]. —— Christopher Alexander In general, a pattern has four essential elements: The pattern name is a handle we can use to describe a design problem, its solutions, and consequences in a word or two. The problem describes when to apply the pattern. The solution describes the elements that make up the design, their relationships, responsibilities, and collaborations. The consequences are the results and trade-offs of applying the pattern. Singleton Intent Ensure a class only has one instance, and provide a global point of access to it. Motivation How do we ensure that a class has only one instance and that the instance is easily accessible? A better solution is to make the class itself responsible for keeping track of its sole instance. The class can ensure that no other instance can be created (by intercepting requests to create new objects), and it can provide a way to access the instance. This is the Singleton pattern. Applicability there must be exactly one instance of a class, and it must be accessible to clients from a well-known access point. when the sole instance should be extensible by subclassing, and clients should be able to use an extended instance without modifying their code. Structure Consequences The Singleton pattern has several benefits: Controlled access to sole instance. Reduced name space. Permits refinement of operations and representation. Permits a variable number of instances. More flexible than class operations. Implementation singleton zh_CN singleton2 zh_CN lazy loading thread not safe package com.ryo.singleton;

/** * Created by 侯彬彬 on 2016/7/15. */
public class Lazy {
    private Lazy(){}

    private static Lazy lazy = null;

    public static Lazy instance() {
        if(lazy == null) {
            lazy = new Lazy();
        }

        return lazy;
    }
}
 thread safe It’s pity this way is inefficiency. public class LazyThreadSafe {
    private LazyThreadSafe(){}

    private static LazyThreadSafe lazy = null;

    public static synchronized LazyThreadSafe instance() {
        if(lazy == null) {
            lazy = new LazyThreadSafe();
        }

        return lazy;
    }
}
 Best practice: a good way to solve it. (Lazy loading and thread safe) package com.ryo.singleton;

public class Singleton {
    private Singleton(){}

    private static class SingletonHolder {
        private static final Singleton INSTANCE = new Singleton();
    }

    public static  Singleton instance() {
       return SingletonHolder.INSTANCE;
    }
}
 starve Thread safe, not lazy loading. Usually, we can use this… package com.ryo.singleton;

public class Starve {
    private Starve(){}
    private static Starve starve = new Starve();

    public static Starve instance() {
        return starve;
    }
}
 enum The best way to realize singleton is to use enum enum Prototype Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype. zh_CN prototype Applicability Use the Prototype pattern when a system should be independent of how its products are created, composed, and represented; and when the classes to instantiate are specified at run-time, for example, by dynamic loading to avoid building a class hierarchy of factories that parallels the class hierarchy of products when instances of a class can have one of only a few different combinations of state. It may be more convenient to install a corresponding number of prototypes and clone them rather than instantiating the class manually, each time with the appropriate state. Consequences It hides the concrete product classes from the client, thereby reducing the number of names clients know about. Moreover, these patterns let a client work with application-specific classes without modification. Implementation Prototype.java package com.ryo.prototype;

/** * Created by 侯彬彬 on 2016/7/15. */
public class Prototype implements Cloneable {
    private String name;

    public Prototype(String name) {
        this.name = name;
    }

    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    @Override
    public String toString() {
        return "Prototype{" +
                "name='" + name + '\'' +
                '}';
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
 PrototypeTest.java public class PrototypeTest extends TestCase {
    @Test
    public void testClone() throws Exception {
        Prototype prototype = new Prototype("ryo");
        final String json = "Prototype{name='ryo'}";

        assertEquals(json, prototype.toString());

        Prototype clone = (Prototype) prototype.clone();
        assertEquals(json, clone.toString());
    }
}
 shallow copy Java object’s clone() is shallow copy. See the flowing demo. Person.java public class Person {
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }

    public void setName(String name) {
        this.name = name;
    }
}
 Prototype.java public class Prototype implements Cloneable {
    private Person person;

    public Prototype(Person person) {
        this.person = person;
    }

    public Person getPerson() {
        return person;
    }

    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    @Override
    public String toString() {
        return "Prototype{" +
                "person=" + person +
                '}';
    }
}
 test public class PrototypeTest extends TestCase {
    @Test
    public void testClone() throws Exception {
        Person person = new Person("ryo", 23);
        Prototype prototype = new Prototype(person);

        Prototype clone = (Prototype) prototype.clone();
        Person person1 = clone.getPerson();
        person1.setName("jack");

        assertEquals("Prototype{person=Person{name='jack', age=23}}", prototype.toString());
    }
}
 deep copy add Serializable for Person public class Person implements Serializable {
    //...
}
 DeepCopy.java package com.ryo.prototype;

import java.io.*;

/** * Created by 侯彬彬 on 2016/7/15. */
public class DeepCopy implements Cloneable, Serializable {
    private Person person;

    public DeepCopy(Person person) {
        this.person = person;
    }

    public Person getPerson() {
        return person;
    }

    @Override
    public String toString() {
        return "DeepCopy{" +
                "person=" + person +
                '}';
    }

    public Object deepClone() {
        ByteArrayOutputStream bo = new ByteArrayOutputStream();
        Object object = null;
        try {
            ObjectOutputStream oo = new ObjectOutputStream(bo);
            oo.writeObject(this);
            ByteArrayInputStream bi = new ByteArrayInputStream(bo.toByteArray());
            ObjectInputStream oi = new ObjectInputStream(bi);
            object = oi.readObject();
        } catch (ClassNotFoundException | IOException e) {
            e.printStackTrace();
        }

        return object;
    }
}
 DeepCopyTest.java public class DeepCopyTest extends TestCase {

    @Test
    public void testDeepClone() throws Exception {
        Person person = new Person("ryo", 23);
        DeepCopy deepCopy = new DeepCopy(person);

        DeepCopy clone = (DeepCopy) deepCopy.deepClone();
        Person person1 = clone.getPerson();
        person1.setName("jack");

        assertEquals("DeepCopy{person=Person{name='jack', age=23}}", clone.toString());
        assertEquals("DeepCopy{person=Person{name='ryo', age=23}}", deepCopy.toString());
    }
}
 Factory simple factory interface public interface Car {
    String info();
}
 class1 public class BaomaCar implements Car {
    public static final String BAO_MA = "Baoma";

    @Override
    public String info() {
        return BAO_MA;
    }
}
 class2 public class AodiCar implements Car {
    public static final String AO_DI = "Ao di";

    @Override
    public String info() {
        return AO_DI;
    }
}
 factory public class SimpleFactory {
    private SimpleFactory(){}

    public static Car factory(String type) {
        Car car = null;

        if (type.equals(BaomaCar.BAO_MA)) {
            car = new BaomaCar();
        } else if (type.equals(AodiCar.AO_DI)) {
            car = new AodiCar();
        }

        return car;
    }
}
 test @Test
public void testFactory() {
    Car car = SimpleFactory.factory(BaomaCar.BAO_MA);
    assertEquals(BaomaCar.BAO_MA, car.info());

    Car car1 = SimpleFactory.factory(AodiCar.AO_DI);
    assertEquals(AodiCar.AO_DI, car1.info());
}
 factory method Interface public interface Movable {
    void run();
}
 class1 public class AirMovable implements Movable {
    @Override
    public void run() {
        System.out.println("air running...");
    }
}
 class2 public class SeaMovable implements Movable {
    @Override
    public void run() {
        System.out.println("Sea running...");
    }
}
 InterfaceFactory public abstract class AbstractMoveFactory {
    abstract Movable getInstance();
}
 class1Factory public class SeaMoveFactory extends AbstractMoveFactory {
    @Override
    Movable getInstance() {
        return new SeaMovable();
    }
}
 class2Factory public class AirMoveFactory extends AbstractMoveFactory {
    @Override
    Movable getInstance() {
        return new AirMovable();
    }
}
 test public class FactoryMethodTest extends TestCase {
    @Test
    public void testGetInstance() {
        AbstractMoveFactory abstractMoveFactory = new AirMoveFactory();
        Movable movable = abstractMoveFactory.getInstance();
        movable.run();
    }

    @Test
    public void testGetInstance2() {
        AbstractMoveFactory abstractMoveFactory = new SeaMoveFactory();
        Movable movable = abstractMoveFactory.getInstance();
        movable.run();
    }
}
 result Sea running...
air running...

Process finished with exit code 0
 abstract factory Intent Provide an interface for creating families of related or dependent objects without specifying their concrete classes. Applicability a system should be independent of how its products are created, composed, and represented. a system should be configured with one of multiple families of products. a family of related product objects is designed to be used together, and you need to enforce this constraint. you want to provide a class library of products, and you want to reveal just their interfaces, not their implementations. Structure Consequences It isolates concrete classes. It makes exchanging product families easy. It promotes consistency among products. Supporting new kinds of products is difficult. Implementation AbstractFactory.java public abstract class AbstractFactory {
    public abstract Vehicle createVehicle();
    public abstract Fruit createFruit();
}
 DefaultFactory.java public class DefaultFactory extends AbstractFactory {
    @Override
    public Vehicle createVehicle() {
        return new Boat();
    }

    @Override
    public Fruit createFruit() {
        return new Apple();
    }
}
 Vehicle and Boat public interface Vehicle {
    void info();
}

public class Boat implements Vehicle {
    @Override
    public void info() {
        System.out.println("Vehicle boat...");
    }
}
 Fruit & Apple public interface Fruit {
    void info();
}

public class Apple implements Fruit {
    @Override
    public void info() {
        System.out.println("Fruit Apple...");
    }
}
 test public class AbstractFactoryTest extends TestCase {
    @Test
    public void testCreateVehicle() throws Exception {
        DefaultFactory defaultFactory = new DefaultFactory();
        Vehicle vehicle = defaultFactory.createVehicle();
        vehicle.info();
    }


    @Test
    public void testCreateFruit() throws Exception {
        DefaultFactory defaultFactory = new DefaultFactory();
        Fruit fruit = defaultFactory.createFruit();
        fruit.info();
    }
}
 result Fruit Apple...
Vehicle boat...

Process finished with exit code 0</description><link>https://houbb.github.io/2016/07/15/DesignPattern</link><article>侯宾宾</article><guid/><pubDate>2016-07-15</pubDate></item><item><title>JFinal</title><description>JFinal 侯宾宾      jfinal      web      2016-07-14 JFinal Hello World JFinal JFinal 是基于 Java 语言的极速 WEB + ORM 开发框架，其核心设计目标是开发迅速、代码量少、学习简单、功能强大、轻量级、易扩展、Restful。 自动扫描映射设计的若干缺点：引入新概念(如注解)增加学习成本、性能低、jar 包扫描可靠性与安全性低 JFinal Hello World pom.xml <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ryo</groupId>
    <artifactId>JFinal</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>JFinal Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>jfinal</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat.version}</version>
                <configuration>
                    <port>8080</port>
                    <path>/</path>
                    <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
 HelloController.java package com.ryo.controller;

import com.jfinal.core.Controller;

/** * Created by 侯彬彬 on 2016/6/20. */
public class HelloController extends Controller {
    public void index() {
        renderText("Hello World!");
    }
}
 ApplicationConfig.java package com.ryo.controller;

import com.jfinal.config.*;
import com.jfinal.core.JFinal;

/** * Created by 侯彬彬 on 2016/6/20. */
public class ApplicationConfig extends JFinalConfig {
    public void configConstant(Constants constants) {
        constants.setDevMode(true);
    }

    public void configRoute(Routes routes) {
        routes.add("/hello", HelloController.class);
    }

    public void configPlugin(Plugins plugins) {

    }

    public void configInterceptor(Interceptors interceptors) {

    }

    public void configHandler(Handlers handlers) {

    }

    public static void main(String[] args) {
        JFinal.start("src/main/webapp", 80, "/", 5);
    }
}
 web.xml <!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

  <filter>
    <filter-name>jfinal</filter-name>
    <filter-class>com.jfinal.core.JFinalFilter</filter-class>
    <init-param>
      <param-name>configClass</param-name>
      <param-value>com.ryo.controller.ApplicationConfig</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>jfinal</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app></description><link>https://houbb.github.io/2016/07/14/JFinal</link><article>侯宾宾</article><guid/><pubDate>2016-07-14</pubDate></item><item><title>LESS</title><description>LESS 侯宾宾      less      html      2016-06-29 {LESS} Hello World Language Features Variables Extend Mixins Parametric Mixins Mixins as Functions {LESS} Less is a CSS pre-processor, meaning that it extends the CSS language, adding features that allow variables, mixins, functions and many other techniques that allow you to make CSS that is more maintainable, themable and extendable. less less zh_CN Hello World Javascript can’t visit local .less file, so you may need a http server, like tomcat, jetty etc. Here I use tomcat. file list under webapp │  index.html                                                                                                                                                                                                       
│                                                                                                                                                                                                                   
├─static                                                                                                                                                                                                           
│  ├─app                                                                                                                                                                                                          
│  │  └─less                                                                                                                                                                                                     
│  │          style.less                                                                                                                                                                                           
│  │                                                                                                                                                                                                               
│  └─lib                                                                                                                                                                                                          
│      └─less                                                                                                                                                                                                     
│              less.min.js                                                                                                                                                                                          
│                                                                                                                                                                                                                   
└─WEB-INF                                                                                                                                                                                                          
        web.xml
 web.xml <?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
</web-app>
 index.html <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <!--less-->
    <link rel="stylesheet/less" type="text/css" href="/static/app/less/style.less">
</head>


<body>

<div class="content">content</div>

</body>
<!-- JavaScript -->
<script src="/static/lib/less/less.min.js" type="text/javascript"></script>
</html>
 style.less @blue: #0099FF;

.content {
	background: @blue;
}
 less.min.js Download from the less web site. Notice Your .less files must import before the less.min.js. Language Features As an extension to CSS, Less is not only backwards compatible with CSS, but the extra features it adds use existing CSS syntax. This makes learning Less a breeze, and if in doubt, lets you fall back to vanilla CSS. Variables Control commonly used values in a single location. You may use like these in before a, .link {
  color: #428bca;
}
.widget {
  color: #fff;
  background: #428bca;
}
 Variables make your code easier to maintain, like this // Variables
@link-color:        #428bca; // sea blue

// Usage
a, .link {
  color: @link-color;
}
.widget {
  color: #fff;
  background: @link-color;
}
 The variables also can use in following places. Selector //selector
@header: header;

.@{header} {
	background: pink;
}
 is the same as .header {
	background: pink;
}
 URLs //URLs
@img-url: "/static/app/img";
.content {
	background: url("@{img-url}/001.jpeg");;
}
 Import statement If I define all colors in one less file, I want to import it. @less-url: "/static/app/less";

@import "@{less-url}/color-constant.less";
 Properties I’m tired of input background, so //properties
@bg: background;

.header {
  @{bg}: #0099FF;
}
 Variable Names @fnord:  "I am fnord.";
@var:    "fnord";
content: @@var;
 complies to content: "I am fnord.";
 Lazy Loading Variables are lazy loaded and do not have to be declared before being used. .header {
  background: @bg-color;
}
@bg-color: red;
 When defining a variable twice, the last definition of the variable is used, searching from the current scope upwards. This is similar to css itself where the last property inside a definition is used to determine the value. Default Variables I define blue-color in color-constant.less. @blue-color: #0099FF;
 I can easily override it like this. @import "color-constant.less";

.header {
  background: @blue-color;
}

//if no this, color will be #0099ff
@blue-color: blue;
 Extend Extend is a Less Pseudo-Class which merges the selector it is put on with ones that match what it references. .base-color {
  background: #0099FF;
  color: #ffffff;
}

.header {
  &:extend(.base-color);
  font-size: 22px;
}
 means .header extends all properties from .base-color. Extend syntax .a:extend(.b) {}

// the above block does the same thing as the below block
.a {
  &:extend(.b);
}
 .c:extend(.d all) {
  // extends all instances of ".d" e.g. ".x.d" or ".d.x"
}
.c:extend(.d) {
  // extends only instances where the selector will be output as just ".d"
}
 .e:extend(.f) {}
.e:extend(.g) {}

// the above an the below do the same thing
.e:extend(.f, .g) {}
Extend attached
 Extend attached to selector Extend attached to a selector looks like an ordinary pseudoclass with selector as a parameter. A selector can contain multiple extend clauses, but all extends must be at the end of the selector. Extend after the selector: pre:hover:extend(div pre). Space between selector and extend is allowed: ```pre:hover :extend(div pre)`` Multiple extends are allowed: pre:hover:extend(div pre):extend(.bucket tr) is the same as pre:hover:extend(div pre, .bucket tr) Extend inside ruleset Extend can be placed into a ruleset’s body using &:extend(selector) syntax. Placing extend into a body is a shortcut for placing it into every single selector of that ruleset. pre:hover,
.some-class {
  &:extend(div pre);
}
 same as pre:hover:extend(div pre),
.some-class:extend(div pre) {}
 Extending Nested Selectors .bucket {
  tr { // nested ruleset with target selector
    color: blue;
  }
}
.some-class:extend(.bucket tr) {} // nested ruleset is recognized
 output .bucket tr,
.some-class {
  color: blue;
}
 Exact Matching with Extend Extend by default looks for exact match between selectors. It does matter whether selector uses leading star or not. It does not matter that two nth-expressions have the same meaning, they need to have to same form in order to be matched. The only exception are quotes in attribute selector, less knows they have the same meaning and matches them. .a.class,
.class.a,
.class > .a {
  color: blue;
}
.test:extend(.class) {} // this will NOT match the any selectors above
 *.class {
  color: blue;
}
.noStar:extend(.class) {} // this will NOT match the *.class selector
 link:hover:visited {
  color: blue;
}
.selector:extend(link:visited:hover) {}  // this will NOT match the link:hover:visited selector
 nth Expression :nth-child(1n+3) {
  color: blue;
}
.child:extend(:nth-child(n+3)) {}       //NOT match
 Quote type in attribute selector does not matter. All of the following are equivalent. [title=identifier] {
  color: blue;
}
[title='identifier'] {
  color: blue;
}
[title="identifier"] {
  color: blue;
}

.noQuote:extend([title=identifier]) {}
.singleQuote:extend([title='identifier']) {}
.doubleQuote:extend([title="identifier"]) {}
 output [title=identifier],
.noQuote,
.singleQuote,
.doubleQuote {
  color: blue;
}

[title='identifier'],
.noQuote,
.singleQuote,
.doubleQuote {
  color: blue;
}

[title="identifier"],
.noQuote,
.singleQuote,
.doubleQuote {
  color: blue;
}
 Extend “all” When you specify the all keyword last in an extend argument it tells Less to match that selector as part of another selector. The selector will be copied and the matched part of the selector only will then be replaced with the extend, making a new selector. .a.b.test,
.test.c {
  color: orange;
}
.test {
  &:hover {
    color: green;
  }
}

.replacement:extend(.test all) {}
 output .a.b.test,
.test.c,
.a.b.replacement,
.replacement.c {
  color: orange;
}
.test:hover,
.replacement:hover {
  color: green;
}
 Selector Interpolation with Extend Extend is NOT able to match selectors with variables. If selector contains variable, extend will ignore it. Selector with variable will not be matched @variable: .bucket;
@{variable} { // interpolated selector
  color: blue;
}
.some-class:extend(.bucket) {} // does nothing, no match is found
 extend with variable in target selector matches nothing: .bucket {
  color: blue;
}
.some-class:extend(@{variable}) {} // interpolated selector matches nothing
@variable: .bucket;
 However, :extend attached to an interpolated selector works: .bucket {
  color: blue;
}
@{variable}:extend(.bucket) {}
@variable: .selector;
 output .bucket, .selector {
  color: blue;
}
 Scoping / Extend Inside @media Extend written inside a media declaration should match only selectors inside the same media declaration: @media print {
  .screenClass:extend(.selector) {} // extend inside media
  .selector { // this will be matched - it is in the same media
    color: black;
  }
}
.selector { // ruleset on top of style sheet - extend ignores it
  color: red;
}
@media screen {
  .selector {  // ruleset inside another media - extend ignores it
    color: blue;
  }
}
 Extend written inside a media declaration does NOT match selectors inside nested declaration: @media screen {
  .screenClass:extend(.selector) {} // extend inside media
  @media (min-width: 1023px) {
    .selector {  // ruleset inside nested media - extend ignores it
      color: blue;
    }
  }
}
 Top level extend matches everything including selectors inside nested media: @media screen {
  .selector {  /* ruleset inside nested media - top level extend works */
    color: blue;
  }
  @media (min-width: 1023px) {
    .selector {  /* ruleset inside nested media - top level extend works */
      color: blue;
    }
  }
}

.topLevel:extend(.selector) {} /* top level extend matches everything */
 complies to @media screen {
  .selector,
  .topLevel { /* ruleset inside media was extended */
    color: blue;
  }
}
@media screen and (min-width: 1023px) {
  .selector,
  .topLevel { /* ruleset inside nested media was extended */
    color: blue;
  }
}
 Reducing CSS Size Mixins copy all of the properties into a selector, which can lead to unnecessary duplication. Therefore you can use extends instead of mixins to move the selector up to the properties you wish to use. with mixin .my-inline-block() {
    display: inline-block;
  font-size: 0;
}
.thing1 {
  .my-inline-block;
}
.thing2 {
  .my-inline-block;
}
 output .thing1 {
  display: inline-block;
  font-size: 0;
}
.thing2 {
  display: inline-block;
  font-size: 0;
}
 with extends .my-inline-block {
  display: inline-block;
  font-size: 0;
}
.thing1 {
  &:extend(.my-inline-block);
}
.thing2 {
  &:extend(.my-inline-block);
}
 output .my-inline-block,
.thing1,
.thing2 {
  display: inline-block;
  font-size: 0;
}
 Mixins You can mix-in class selectors and id selectors, e.g. .base-color {
  background: #0099FF;
}
#big-font {
  font-size: 36px;
}

.header {
  .base-color;
  #big-font;
}
 output .base-color {
  background: #0099FF;
}
#big-font {
  font-size: 36px;
}

.header {
  background: #0099FF;
  font-size: 36px;
}
 The () if optional, that’s means .base-color the same as .base-color() Not Outputting the Mixin If you want to create a mixin but you do not want that mixin to be output, you can put () after it. .base-color() {
  background: #0099FF;
}

.header {
  .base-color;
}
 output .header {
  background: #0099FF;
}
 Selectors in Mixins .my-hover-mixin() {
  &:hover {
    border: 1px solid red;
  }
}
button {
  .my-hover-mixin();
}
 output button:hover {
  border: 1px solid red;
}
 Namespaces #outer {
  .inner {
    color: red;
  }
}

.c {
  #outer > .inner;
}
 Both > and whitespace are optional. Guarded Namespaces If namespace have a guard, mixins defined by it are used only if guard condition returns true. the next two mixins work the same way #namespace when (@mode=huge) {
  .mixin() { /* */ }
}

#namespace {
  .mixin() when (@mode=huge) { /* */ }
}
 The !important keyword Use the !important keyword after mixin call to mark all properties inherited by it as !important: .foo (@bg: #f5f5f5, @color: #900) {
  background: @bg;
  color: @color;
}
.normal {
  .foo();
}
.important {
  .foo() !important;
}
 output .normal {
  background: #f5f5f5;
  color: #900;
}
.important {
  background: #f5f5f5 !important;
  color: #900 !important;
}
 Parametric Mixins Mixins can also take arguments, which are variables passed to the block of selectors when it is mixed in. .border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}
 Mixins with Multiple Parameters It is legal to define multiple mixins with the same name and number of parameters. .mixin(@color) {
  color-1: @color;
}
.mixin(@color; @padding: 2) {
  color-2: @color;
  padding-2: @padding;
}
.mixin(@color; @padding; @margin: 2) {
  color-3: @color;
  padding-3: @padding;
  margin: @margin @margin @margin @margin;
}
.some .selector div {
  .mixin(#008000);
}
 output .some .selector div {
  color-1: #008000;
  color-2: #008000;
  padding-2: 2;
}
 Named Parameters A mixin reference can supply parameters values by their names instead of just positions. Any parameter can be referenced by its name and they do not have to be in any special order: .mixin(@color: black; @margin: 10px; @padding: 20px) {
  color: @color;
  margin: @margin;
  padding: @padding;
}
.class1 {
  .mixin(@margin: 20px; @color: #33acfe);
}
.class2 {
  .mixin(#efca44; @padding: 40px);
}
 output .class1 {
  color: #33acfe;
  margin: 20px;
  padding: 20px;
}
.class2 {
  color: #efca44;
  margin: 10px;
  padding: 40px;
}
 The @arguments Variable @arguments has a special meaning inside mixins, it contains all the arguments passed, when the mixin was called. This is useful if you don’t want to deal with individual parameters: .box-shadow(@x: 0; @y: 0; @blur: 1px; @color: #000) {
  -webkit-box-shadow: @arguments;
     -moz-box-shadow: @arguments;
          box-shadow: @arguments;
}
.big-block {
  .box-shadow(2px; 5px);
}
 output .big-block {
  -webkit-box-shadow: 2px 5px 1px #000;
     -moz-box-shadow: 2px 5px 1px #000;
          box-shadow: 2px 5px 1px #000;
}
 Advanced Arguments and the @rest Variable .mixin(...) {        // matches 0-N arguments
.mixin() {           // matches exactly 0 arguments
.mixin(@a: 1) {      // matches 0-1 arguments
.mixin(@a: 1; ...) { // matches 0-N arguments
.mixin(@a; ...) {    // matches 1-N arguments
 .mixin(@a; @rest...) {
   // @rest is bound to arguments after @a
   // @arguments is bound to all arguments
}
 Pattern-matching define .mixin(dark; @color) {
  color: darken(@color, 10%);
}
.mixin(light; @color) {
  color: lighten(@color, 10%);
}
.mixin(@_; @color) {
  display: block;
}
 run @switch: light;

.class {
  .mixin(@switch; #888);
}
 result .class {
  color: #a2a2a2;
  display: block;
}
 Mixins as Functions Variables and mixins defined in a mixin are visible and can be used in caller’s scope. .mixin() {
  @width:  100%;
  @height: 200px;
}

.caller {
  .mixin();
  width:  @width;
  height: @height;
}
 result .caller {
  width:  100%;
  height: 200px;
}
 Thus variables defined in a mixin can act as its return values. This allows us to create a mixin that can be used almost like a function. .average(@x, @y) {
  @average: ((@x + @y) / 2);
}

div {
  .average(16px, 50px); // "call" the mixin
  padding: @average;    // use its "return" value
}
 result div {
  padding: 33px;
}
 Variables defined directly in callers scope cannot be overridden. However, variables defined in callers parent scope is not protected and will be overridden: .mixin() {
  @size: in-mixin;
  @definedOnlyInMixin: in-mixin;
}

.class {
  margin: @size @definedOnlyInMixin;
  .mixin();
}

@size: globaly-defined-value; // callers parent scope - no protection
 result .class {
  margin: in-mixin in-mixin;
}
 Finally, mixin defined in mixin acts as return value too: .unlock(@value) { // outer mixin
  .doSomething() { // nested mixin
    declaration: @value;
  }
}

#namespace {
  .unlock(5); // unlock doSomething mixin
  .doSomething(); //nested mixin was copied here and is usable
}
 result #namespace {
  declaration: 5;
}</description><link>https://houbb.github.io/2016/06/29/less</link><article>侯宾宾</article><guid/><pubDate>2016-06-29</pubDate></item><item><title>Spring Web MVC</title><description>Spring Web MVC 侯宾宾      spring mvc      Spring      2016-06-19 Web MVC Hello World Controller log Web MVC The Spring Web model-view-controller (MVC) framework is designed around a DispatcherServlet that dispatches requests to handlers, with configurable handler mappings, view resolution, locale, time zone and theme resolution as well as support for uploading files. The default handler is based on the @Controller and @RequestMapping annotations, offering a wide range of flexible handling methods. Web MVC Hello World The src files tree. |____main
| |____java
| | |____com
| | | |____ryo
| | | | |____controller
| | | | | |____HelloController.java
| |____resources
| | |____app-mvc.xml
| | |____app.xml
| | |____log4j2.xml
| |____webapp
| | |____WEB-INF
| | | |____web.xml
 pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>springmvc</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.tomcat.version>2.2</plugin.tomcat.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>

        <!-- Spring -->
        <spring.version>4.2.6.RELEASE</spring.version>
    </properties>

    <dependencies>
        <!--spring mvc-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>4.2.6.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>4.2.6.RELEASE</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${plugin.tomcat.version}</version>
                <configuration>
                    <port>8080</port>
                    <path>/</path>
                    <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
 web.xml <web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
            http://java.sun.com/xml/ns/javaee
            http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <!--装入spring配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:app.xml</param-value>
    </context-param>

    <!-- 以Listener方式启动spring -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 前端控制器的配置 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:app-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>
 app.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="app-mvc.xml"/>

</beans>
 app-mvc.xml <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描@Controller注解-->
    <context:component-scan base-package="com.ryo.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <mvc:annotation-driven/>

</beans>
 HelloController.java package com.ryo.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/** * Created by houbinbin on 16/6/19. */
@Controller
@RequestMapping("hello")
public class HelloController {

    @RequestMapping(method = RequestMethod.GET)
    @ResponseBody
    public String hello() {
        return "hello world";
    }
}
 visit http://localhost:8080/hello
 result hello world
 Controller log web pom.xml <!--log4j-->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>${log4j.version}</version>
</dependency>
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${log4j.version}</version>
</dependency>
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-web</artifactId>
    <version>${log4j.version}</version>
</dependency>
 define controller call interceptor. package com.ryo.interceptor;

import com.alibaba.fastjson.JSON;
import com.ryo.constants.SessionKeys;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.*;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.Map;

/** * Created by houbinbin on 16/6/30. * - Controller 访问日志 */
@Component
@Aspect
public class ControllerLogInterceptor {
    static Logger logger = LogManager.getLogger();

    private String requestPath = null; // 请求地址
    private String userName = null; // 用户名
    private Map<?, ?> inputParamMap = null; // 传入参数
    private Map<String, Object> outputParamMap = null; // 存放输出结果


    @Pointcut("execution(public * com.ryo.controller..*.*(..))")
    public void myPointcut() {
    }

    @Before("myPointcut()")
    public void start() {
    }

    @After("myPointcut()")
    public void end() {
        printLog();
    }

    @Around("myPointcut()")
    public Object around(ProceedingJoinPoint point) throws Throwable {
        /** * 1.获取request信息 * 2.根据request获取session * 3.从session中取出登录用户信息 */
        HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();

        // 从session中获取用户信息
        userName = (String) request.getSession().getAttribute(SessionKeys.SESSION_USERNAME);

        // 获取输入参数
        inputParamMap = request.getParameterMap();

        // 获取请求地址
        requestPath = request.getRequestURI();

        // 执行完方法的返回值：调用proceed()方法，就会触发切入点方法执行
        outputParamMap = new HashMap<String, Object>();
        Object result = point.proceed();    // result的值就是被拦截方法的返回值
        outputParamMap.put("result", result);

        return result;
    }

    private void printLog() {
        logger.info("USER：" + userName
                + " URL：" + requestPath + "\n"
                + "Param：" + JSON.toJSON(inputParamMap) + "\n" + "Result：" + JSON.toJSON(outputParamMap)+"\n");
    }
}</description><link>https://houbb.github.io/2016/06/19/springmvc</link><article>侯宾宾</article><guid/><pubDate>2016-06-19</pubDate></item><item><title>Spring Boot</title><description>Spring Boot 侯宾宾      spring boot      Spring      2016-06-19 Spring Boot You need Hello World Spring Boot Takes an opinionated view of building production-ready Spring applications. Spring Boot favors convention over configuration and is designed to get you up and running as quickly as possible. Spring Boot You need jdk1.8 or later; Maven 3.0+ Title: Hello World create->build & run: build & run->visit: visit->result: Hello World create /src/main/java/com/ryo/controller/HelloWorld.java package com.ryo.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/** * Created by houbinbin on 16/6/19. */
@RestController
@RequestMapping("hello")
public class HelloWorld {
    @RequestMapping(method = RequestMethod.GET)
    public String hello() {
        return "SUCCESS";
    }
}
 /src/main/java/com/ryo/Application.java package com.ryo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/** * Created by houbinbin on 16/6/19. */
@SpringBootApplication
public class Application {
    public static void main(String args[]) {
        SpringApplication.run(Application.class, args);
    }
}
 pom.xml <?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ryo</groupId>
    <artifactId>springboot</artifactId>
    <version>1.0.0</version>

    <properties>
        <!--spring-boot-->
        <spring-boot.version>1.3.5.RELEASE</spring-boot.version>
    </properties>

    <dependencies>
        <!--spring-boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>
        </plugins>
    </build>
</project>
 build & run $ mvn clean install
 and then, use maven projects -> Plugins -> spring-boot -> spring-boot:run
 to start spring-boot. console run info   .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2016-06-19 17:13:05.025  INFO 7555 --- [           main] com.ryo.Application                      : Starting Application on houbinbindeMacBook-Pro.local with PID 7555 (/Users/houbinbin/IT/code/springboot/target/classes started by houbinbin in /Users/houbinbin/IT/code/springboot)
2016-06-19 17:13:05.028  INFO 7555 --- [           main] com.ryo.Application                      : No active profile set, falling back to default profiles: default
2016-06-19 17:13:05.135  INFO 7555 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29724e51: startup date [Sun Jun 19 17:13:05 CST 2016]; root of context hierarchy
2016-06-19 17:13:06.088  INFO 7555 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2016-06-19 17:13:06.098  INFO 7555 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2016-06-19 17:13:06.099  INFO 7555 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.33
2016-06-19 17:13:06.162  INFO 7555 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2016-06-19 17:13:06.163  INFO 7555 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1030 ms
2016-06-19 17:13:06.351  INFO 7555 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2016-06-19 17:13:06.354  INFO 7555 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'characterEncodingFilter' to: [/*]
2016-06-19 17:13:06.354  INFO 7555 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2016-06-19 17:13:06.354  INFO 7555 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2016-06-19 17:13:06.354  INFO 7555 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'requestContextFilter' to: [/*]
2016-06-19 17:13:06.573  INFO 7555 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29724e51: startup date [Sun Jun 19 17:13:05 CST 2016]; root of context hierarchy
2016-06-19 17:13:06.621  INFO 7555 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/hello],methods=[GET]}" onto public java.lang.String com.ryo.controller.HelloWorld.hello()
2016-06-19 17:13:06.623  INFO 7555 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-06-19 17:13:06.623  INFO 7555 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-06-19 17:13:06.641  INFO 7555 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-06-19 17:13:06.641  INFO 7555 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-06-19 17:13:06.667  INFO 7555 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-06-19 17:13:06.736  INFO 7555 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2016-06-19 17:13:06.783  INFO 7555 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2016-06-19 17:13:06.786  INFO 7555 --- [           main] com.ryo.Application                      : Started Application in 1.953 seconds (JVM running for 3.939)
 visit in browser, input http://localhost:8080/hello
 result SUCCESS</description><link>https://houbb.github.io/2016/06/19/springboot</link><article>侯宾宾</article><guid/><pubDate>2016-06-19</pubDate></item><item><title>Annotation</title><description>Annotation 侯宾宾      Annotation      Java      2016-06-04 Basics Declaring an Annotation Type Predefined Annotation Types @Retention @Target Type Annotations and Pluggable Type Systems Annotations, a form of metadata, provide data about a program that is not part of the program itself. annotations doc Basics The Format of an Annotation The at sign character @ indicates to the compiler that what follows is an annotation. like the @override Where Annotations Can Be Used Annotations can be applied to declarations: declarations of classes, fields, methods, and other program elements. Declaring an Annotation Type You can define the annotation type as following public @interface AuthorInfo {
    String author() default "houbb";
    String date();
}
 And use it @AuthorInfo(date = "2016-06-04 22:58:46")
public void testAuthorInfo() {

}
 Note To make the information in @AuthorInfo appear in Javadoc-generated documentation, you must annotate the @AuthorInfo definition with the @Documented annotation. Predefined Annotation Types Annotations that apply to other annotations are called meta-annotations. There are several meta-annotation types defined in java.lang.annotation. @Retention @Retention annotation specifies how the marked annotation is stored: RetentionPolicy.SOURCE – The marked annotation is retained only in the source level and is ignored by the compiler. RetentionPolicy.CLASS – The marked annotation is retained by the compiler at compile time, but is ignored by the Java Virtual Machine (JVM). RetentionPolicy.RUNTIME – The marked annotation is retained by the JVM so it can be used by the runtime environment. @Target @Target annotation marks another annotation to restrict what kind of Java elements the annotation can be applied to. ElementType.ANNOTATION_TYPE can be applied to an annotation type. ElementType.CONSTRUCTOR can be applied to a constructor. ElementType.FIELD can be applied to a field or property. ElementType.LOCAL_VARIABLE can be applied to a local variable. ElementType.METHOD can be applied to a method-level annotation. ElementType.PACKAGE can be applied to a package declaration. ElementType.PARAMETER can be applied to the parameters of a method. ElementType.TYPE can be applied to any element of a class. Type Annotations and Pluggable Type Systems Type annotations were created to support improved analysis of Java programs way of ensuring stronger type checking. checker-framework</description><link>https://houbb.github.io/2016/06/04/Annotation</link><article>侯宾宾</article><guid/><pubDate>2016-06-04</pubDate></item><item><title>Log4j2</title><description>Log4j2 侯宾宾      log      Java      2016-05-21 slf4j log4j2 Hello world Additivity Use with junit Normal Example Architecture Log Levels Layout Slf4j slf4j The Simple Logging Facade for Java (SLF4J) serves as a simple facade or abstraction for various logging frameworks (e.g. java.util.logging, logback, log4j) allowing the end user to plug in the desired logging framework at deployment time. slf4j log4j2 Apache Log4j 2 is an upgrade to Log4j that provides significant improvements over its predecessor, Log4j 1.x, and provides many of the improvements available in Logback while fixing some inherent problems in Logback’s architecture. log4j2 Just use log4j2 instead of log4j and logback, reasons as following. Both Log4j 1.x and Logback will lose events while reconfiguring. Log4j 2 will not. In multi-threaded scenarios Asynchronous Loggers have 10 times higher throughput and orders of magnitude lower latency than Log4j 1.x and Logback. Log4j 1.x has known deadlock issues. Many of these are fixed in Logback but many Logback classes still require synchronization at a fairly high level. others… Hello world pom.xml <dependencies>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.6.1</version>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.6.1</version>
  </dependency>
</dependencies>
 App.java public class App {
    static final Logger logger = LogManager.getLogger(App.class);

    public static void main(String[] args) {
        logger.trace("Entering application.");
        Bar bar = new Bar();
        if (!bar.doIt()) {
            logger.error("Didn't do it.");
        }
        logger.trace("Exiting application.");
    }
}
 Bar.java public class Bar {
    static final Logger logger = LogManager.getLogger(Bar.class.getName());

    public boolean doIt() {
        logger.entry();
        logger.error("Did it again!");
        return logger.exit(false);
    }
}
 result ERROR StatusLogger No log4j2 configuration file found. Using default configuration: logging only errors to the console.
11:11:34.539 [main] ERROR com.ryo.logger.Bar - Did it again!
11:11:34.540 [main] ERROR com.ryo.logger.App - Didn't do it.

Process finished with exit code 0
 add log4j2.xml as following into classpath <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
    </Appenders>
    <Loggers>
        <Root level="trace">
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
 and the result is: 11:22:58.433 [main] TRACE com.ryo.logger.App - Entering application.
11:22:58.437 [main] TRACE com.ryo.logger.Bar - entry
11:22:58.438 [main] ERROR com.ryo.logger.Bar - Did it again!
11:22:58.438 [main] TRACE com.ryo.logger.Bar - exit with(false)
11:22:58.438 [main] ERROR com.ryo.logger.App - Didn't do it.
11:22:58.438 [main] TRACE com.ryo.logger.App - Exiting application.

Process finished with exit code 0
 Additivity Perhaps it is desired to eliminate all the TRACE output from everything except com.ryo.logger.Bar, the solution is to add a new logger definition to the configuration <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
  <Appenders>
    <Console name="Console" target="SYSTEM_OUT">
      <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
    </Console>
  </Appenders>
  <Loggers>
    <Logger name="com.ryo.logger.Bar" level="trace">
      <AppenderRef ref="Console"/>
    </Logger>
    <Root level="error">
      <AppenderRef ref="Console"/>
    </Root>
  </Loggers>
</Configuration>
 result 12:11:43.095 [main] TRACE com.ryo.logger.Bar - entry
12:11:43.095 [main] TRACE com.ryo.logger.Bar - entry
12:11:43.096 [main] ERROR com.ryo.logger.Bar - Did it again!
12:11:43.096 [main] ERROR com.ryo.logger.Bar - Did it again!
12:11:43.096 [main] TRACE com.ryo.logger.Bar - exit with(false)
12:11:43.096 [main] TRACE com.ryo.logger.Bar - exit with(false)
12:11:43.096 [main] ERROR com.ryo.logger.App - Didn't do it.

Process finished with exit code 0
 Notice that the trace messages from ‘com.ryo.logger.Bar’ appear twice. change <Logger name="com.ryo.logger.Bar" level="trace">
  <AppenderRef ref="Console"/>
</Logger>
 into <Logger name="com.ryo.logger.Bar" level="trace" additivity="false">
  <AppenderRef ref="Console"/>
</Logger>
 and result will be 12:16:34.921 [main] TRACE com.ryo.logger.Bar - entry
12:16:34.923 [main] ERROR com.ryo.logger.Bar - Did it again!
12:16:34.923 [main] TRACE com.ryo.logger.Bar - exit with(false)
12:16:34.923 [main] ERROR com.ryo.logger.App - Didn't do it.

Process finished with exit code 0
 Once an event reaches a logger with its additivity set to false the event will not be passed to any of its parent loggers, regardless of their additivity setting. Each enabled logging request for a given logger will be forwarded to all the appenders in that Logger’s LoggerConfig as well as the Appenders of the LoggerConfig’s parents. It is possible to override this default behavior so that Appender accumulation is no longer additive by setting additivity="false" on the Logger declaration in the configuration file. Use with junit import junit.framework.TestCase;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;


public class BaseTest extends TestCase {
    protected static final Logger logger = LogManager.getLogger(BaseTest.class);
}
 Normal Example Some article for more. summary zh_CN log4j set zh_CN 用户目录占位符: ${sys:user.home} <?xml version="1.0" encoding="UTF-8"?>
<Configuration status="off" monitorInterval="1800">
    <properties>
        <property name="LOG_HOME">src/log</property>
        <property name="BACKUP_HOME">${LOG_HOME}/backup</property>
        <property name="SERVER_NAME">global</property>

        <!--file names-->
        <property name="CONTROLLER_FILE_NAME">controller</property>
    </properties>

    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t] %logger{36}:%L - %msg%n"/>
        </Console>

        <RollingRandomAccessFile name="DevLog" fileName="${LOG_HOME}/${SERVER_NAME}"
                                 filePattern="${LOG_HOME}/${SERVER_NAME}.log-%d{yyyy-MM-dd-HH}.log">
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
        </RollingRandomAccessFile>

        <RollingRandomAccessFile name="ControllerLog"
                fileName="${LOG_HOME}/${CONTROLLER_FILE_NAME}.log"
                                 filePattern="${LOG_HOME}/$${date:yyyy-MM}/${CONTROLLER_FILE_NAME}-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout
                    pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t][%file:%L] - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="20"/>
        </RollingRandomAccessFile>
    </Appenders>

    <Loggers>
        <Logger name="com.ryo.interceptor.ControllerLogInterceptor" level="INFO" additivity="false">
            <AppenderRef ref="ControllerLog"/>
            <AppenderRef ref="Console"/>
        </Logger>

        <Root level="INFO">
            <AppenderRef ref="DevLog"/>
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
 Architecture After to know the simple way to use, let’s learn more about loj4j2. Architecture Log Levels The table below illustrates how Level filtering works. Event Level LoggerConfig Level   TRACE DEBUG INFO WARN ERROR FATAL OFF ALL YES YES YES YES YES YES NO TRACE YES NO NO NO NO NO NO DEBUG YES YES NO NO NO NO NO INFO YES YES YES NO NO NO NO WARN YES YES YES YES NO NO NO ERROR YES YES YES YES YES NO NO FATAL YES YES YES YES YES YES NO OFF NO NO NO NO NO NO NO Layout More often than not, users wish to customize not only the output destination but also the output format. For example, the PatternLayout with the conversion pattern %r [%t] %-5p %c - %m%n will output something akin to: 176 [main] INFO  org.foo.Bar - Located nearest gas station.
 The layout for various use cases such as JSON, XML, HTML, and Syslog (including the new RFC 5424 version). 参数 说明 例子 %c 列出logger名字空间的全称，如果加上{<层数>}表示列出从最内层算起的指定层数的名字空间 log4j配置文件参数举例 输出显示媒介 假设当前logger名字空间是"a.b.c" %c a.b.c %c{2} b.c %20c （若名字空间长度小于20，则左边用空格填充） %-20c （若名字空间长度小于20，则右边用空格填充） %.30c （若名字空间长度超过30，截去多余字符） %20.30c （若名字空间长度小于20，则左边用空格填充；若名字空间长度超过30，截去多余字符） %-20.30c （若名字空间长度小于20，则右边用空格填充；若名字空间长度超过30，截去多余字符） %C 列出调用logger的类的全名（包含包路径） 假设当前类是"org.apache.xyz.SomeClass" %C org.apache.xyz.SomeClass %C{1} SomeClass %d 显示日志记录时间，{<日期格式>}使用ISO8601定义的日期格式 %d{yyyy/MM/dd HH:mm:ss,SSS} 2005/10/12 22:23:30,117 %d{ABSOLUTE} 22:23:30,117 %d{DATE} 12 Oct 2005 22:23:30,117 %d{ISO8601} 2005-10-12 22:23:30,117 %F 显示调用logger的源文件名 %F MyClass.java %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数 %l MyClass.main(MyClass.java:129) %L 显示调用logger的代码行 %L 129 %m 显示输出消息 %m This is a message for debug. %M 显示调用logger的方法名 %M main %n 当前平台下的换行符 %n Windows平台下表示rn UNIX平台下表示n %p 显示该条日志的优先级 %p INFO %r 显示从程序启动时到记录该条日志时已经经过的毫秒数 %r 1215 %t 输出产生该日志事件的线程名 %t MyClass %x 按NDC（Nested Diagnostic Context，线程堆栈）顺序输出日志 假设某程序调用顺序是MyApp调用com.foo.Bar %c %x - %m%n MyApp - Call com.foo.Bar. com.foo.Bar - Log in Bar MyApp - Return to MyApp. %X 按MDC（Mapped Diagnostic Context，线程映射表）输出日志。通常用于多个客户端连接同一台服务器，方便服务器区分是那个客户端访问留下来的日志。 %X{5} （记录代号为5的客户端的日志） %% 显示一个百分号 %% % Slf4j 虽然合并会降低速度,但是有时需要支持这种标准。 Slf4j+log4j2 slf4j+log4j2 <!-- log配置：Log4j2 + Slf4j -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.2</version>
</dependency>
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.2</version>
</dependency>
<dependency> <!-- 桥接：告诉Slf4j使用Log4j2 -->
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-slf4j-impl</artifactId>
    <version>2.2</version>
</dependency>
<dependency> <!-- 桥接：告诉commons logging使用Log4j2 -->
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-jcl</artifactId>
    <version>2.2</version>
</dependency>
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>1.7.10</version>
</dependency></description><link>https://houbb.github.io/2016/05/21/Log4j2</link><article>侯宾宾</article><guid/><pubDate>2016-05-21</pubDate></item><item><title>Freemarker Advance</title><description>Freemarker Advance 侯宾宾      Freemarker      HTML      2016-05-08 Define directives Define variables Namespaces Extends Define directives Basics A macro is a template fragment associated with a variable. <#macro gray>
  <span class="text-muted">Hello Joe!</span>
</#macro>
 Info The macro directive itself does not print anything; You use user-defined directives by writing @ instead of # in the FTL tag. Use the variable name as the directive name. <@macro gray></@macro>
 or <@macro/>
 output <span class="text-muted">Hello Joe!</span>
 Parameters Let’s improve the gray macro so it can use arbitrary name, not only Joe. For this purpose you can use parameters. define & called <#macro gray name>
  <span class="text-muted">Hello ${name}!</span>
</#macro>

<@gray name="echo">
 output <span class="text-muted">Hello echo!</span>
 You can use multiple parameters, like define & called <#macro gray name size>
  <span class="text-muted" size="${size}">Hello ${name}!</span>
</#macro>

<@gray name="echo" size=14 />
 output <span class="text-muted" size="14">Hello echo!</span>
 You can give method a default value, such as define & called <#macro gray name size=14>
  <span class="text-muted" size="${size}">Hello ${name}!</span>
</#macro>

<@gray name="echo" />
 output <span class="text-muted" size="14">Hello echo!</span>
 Nested content Custom directive can have nested content, similarly as predefined directives like <#if ...>nested content</#if> can have. define & called <#macro border>
    <div class="warp">
        <#nested>
    </div>
</#macro>

<@border>Here is the nested content.</@border>
 output <div class="warp">
    Here is the nested content.
</div>
 The nested directive can be called for multiple times, for example: define & called <#macro do_three>
    <div class="warp">
        <#nested>
        <#nested>
        <#nested>
    </div>
</#macro>

<@do_three>hello world</@do_three>
 output <div class="warp">
Hello world
Hello world
Hello world
</div>
 The local variables of a macro are not visible in the nested content. Say, this: define & called <#macro repeat count>
  <#local y = "test">
  <#list 1..count as x>
    ${y} ${count}/${x}: <#nested>
  </#list>
</#macro>

<@repeat count=3>${y!"?"} ${x!"?"} ${count!"?"}</@repeat>
 output test 3/1: ? ? ?
test 3/2: ? ? ?
test 3/3: ? ? ?
 Macros with loop variables User-defined directives can also have loop variables. define & called <#macro do_three>
    <#nested 1>
    <#nested 2>
    <#nested 3>
</#macro>

<@do_three ; x> <#-- user-defined directive uses ";" instead of "as" -->
${x} Anything.
</@do_three>
 output 1 Anything.

2 Anything.

3 Anything.
 The name of the loop variable is specified in the user-defined directive open tag (<@…>) after the parameters and a semicolon. define & called <#macro repeat count>
  <#list 1..count as x>
    <#nested x, x/2, x==count>
  </#list>
</#macro>

<@repeat count=4 ; c, halfc, last>
  ${c}. ${halfc}<#if last> Last!</#if>
</@repeat>
 output 1. 0.5
2. 1
3. 1.5
4. 2 Last!
 Define variables Create and replace variables with assign define <#assign name = "echo">  <#-- create variable echo -->
${name}
<#assign name = "hello"> <#-- replace variable name -->
${name}
 output echo
hello
 Local variables hide (not overwrite) plain variables of the same name. Loop variables hide (not overwrite) local and plain variables of the same name. For example: <#assign x = "plain">
1. ${x}  <#-- we see the plain var. here -->
<@test/>
6. ${x}  <#-- the value of plain var. was not changed -->
<#list ["loop"] as x>
    7. ${x}  <#-- now the loop var. hides the plain var. -->
    <#assign x = "plain2"> <#-- replace the plain var, hiding does not mater here -->
    8. ${x}  <#-- it still hides the plain var. -->
</#list>
9. ${x}  <#-- the new value of plain var. -->

<#macro test>
  2. ${x}  <#-- we still see the plain var. here -->
  <#local x = "local">
  3. ${x}  <#-- now the local var. hides it -->
  <#list ["loop"] as x>
    4. ${x}  <#-- now the loop var. hides the local var. -->
  </#list>
  5. ${x}  <#-- now we see the local var. again -->
</#macro>
 output 1. plain
2. plain
3. local
4. loop
5. local
6. plain
7. loop
8. loop
9. plain2
 Namespaces Creating a library +add file lib.ftl <#assign mail = "houbb.echo@gmail.com">

<#macro copyright date name="Echo">
Copyright (C) ${date} ${name}. All rights reserved.
</#macro>
 define ftl <#import "lib.ftl" as my> <#-- the hash called "my" will be the "gate" -->

<@my.copyright date="1994-2016"/>
${my.mail}

<#assign mail="123456@gmail.com">
${mail}
 output Copyright (C) 1994-2016 Echo. All rights reserved.
houbb.echo@gmail.com

123456@gmail.com
 Writing the variables of imported namespaces Occasionally you may want to create or replace a variable in an imported namespace. You can do this with the assign directive, if you use its namespace parameter. For example: define <#import "lib.ftl" as my> <#-- the hash called "my" will be the "gate" -->
${my.mail}
<#assign mail="echo@other.com" in my>
${my.mail}
 output houbb.echo@gmail.com
echo@other.com
 Namespaces and data-model lib.ftl <#macro copyright date name="${name}">
Copyright (C) ${date} ${name}. All rights reserved.
</#macro>

<#assign mail = "houbb.${name}@gmail.com">
 demo.ftl <#import "lib.ftl" as my> <#-- the hash called "my" will be the "gate" -->
<@my.copyright date="1994-2016" />
${my.mail}
 data-model public class Demo {
    public static void main(String[] args) throws Exception {
        Template template = FreemarkerHelper.getTemplate("demo.ftl");

        //map build
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("name", "echo");

        FileHelper.createFile(template, "demo.html", map);
    }
}
 output Copyright (C) 1994-2016 echo. All rights reserved.
houbb.echo@gmail.com
 Life-cycle of namespaces If you try to import with the same path for multiple times, it will create the namespace and run the template specified by the path for the very first invocation of import only. The later imports with the same path will just create a gate hash to the same namespace. For example: ftl <#import "lib.ftl" as my> <#-- the hash called "my" will be the "gate" -->
<#import "lib.ftl" as foo> <#-- the hash called "foo" will be the "gate" -->
<#import "lib.ftl" as bar> <#-- the hash called "bar" will be the "gate" -->

${my.mail}
${foo.mail}
${bar.mail}

<#assign mail="echo@other.com" in my>

${my.mail}
${foo.mail}
${bar.mail}
 output houbb.echo@gmail.com
houbb.echo@gmail.com
houbb.echo@gmail.com

echo@other.com
echo@other.com
echo@other.com
 Extends Now, we extends freemarker, add three directive : @extends,@block,@override purpose Parent template define the layout, child template can override the content of layout. +add base.ftl <html>
<head>
    <@block name="head">base_head_content</@block>
</head>
<body>
    <@block name="body">base_body_content</@block>
</body>
</html>
 change demo.ftl <@override name="body">

<div class='content'>
    Powered By rapid-framework
</div>
</@override>

<@extends name="base.ftl"/>
 output <html>
<head>
base_head_content
</head>
<body>

<div class='content'>
    Powered By rapid-framework
</div>

</body>
</html>
 Before use these extends directive, you should add them into config. /** * define Configuration * @return * @throws Exception */
public static Configuration getConfiguration() throws Exception {
    if(configuration == null) {
        configuration = new Configuration();
        configuration.setDirectoryForTemplateLoading(new File(PathHelper.getWebPath()));    //path
        configuration.setObjectWrapper(new DefaultObjectWrapper());
        configuration.setSharedVariable("block", new BlockDirective());
        configuration.setSharedVariable("override", new OverrideDirective());
        configuration.setSharedVariable("extends", new ExtendsDirective());
    }

    return configuration;
}
 these directives belong to rapid-framework. rapid-framework zh_CN Or, you can also just following files into your project.In fact, it’s part of rapid-framework.jar  freemarker.zip  freemarker_manual_zh_CN.zip</description><link>https://houbb.github.io/2016/05/08/freemarker-advanced</link><article>侯宾宾</article><guid/><pubDate>2016-05-08</pubDate></item><item><title>Freemarker</title><description>Freemarker 侯宾宾      Freemarker      HTML      2016-05-07 Freemarker Getting Started Base directives Using built-ins Missing variables Freemarker Apache FreeMarker is a template engine: a Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data. freemarker zh_CN Getting Started Template + data-model = output Template <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
</head>
<body>

<h1>Welcome ${user}!</h1>
<p>Our latest product:
    <a href="${latestProduct.url}">${latestProduct.name}</a>!

</body>
</html>
 data model product class public class Product {
    private String url;
    private String name;

    public Product(String url, String name) {
        this.url = url;
        this.name = name;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
 create html class code public class Demo {
    public static void main(String[] args) throws Exception {
        Template template = FreemarkerHelper.getTemplate("demo.ftl");

        //map build
        Map<String, Object> root = new HashMap<String, Object>();
        map.put("user", "echo");
        Product product = new Product("www.google.com", "greenhouse");
        map.put("latestProduct", product);

        FileHelper.createFile(template, "demo.html", root);
    }
}
 There are some utility class as following. get path of package web which save ftl and html. public class PathHelper {
    public static final String LOCAL_WEB_PATH = "/src/main/web/";

    public static String getWebPath() {
        String rootPath = System.getProperty("user.dir");

        return rootPath + LOCAL_WEB_PATH;
    }
}
 get freemarker template WARN Do not needlessly re-create Configuration instances; it’s expensive, among others because you lose the template cache. Configuration instances meant to be application-level singletons. public class FreemarkerHelper {
    private FreemarkerHelper() {}
    private static Configuration configuration = null;

    /** * define Configuration * @return * @throws Exception */
    public static Configuration getConfiguration() throws Exception {
        if(configuration == null) {
            configuration = new Configuration();
            configuration.setDirectoryForTemplateLoading(new File(PathHelper.getWebPath()));    //path
            configuration.setObjectWrapper(new DefaultObjectWrapper());
        }

        return configuration;
    }

    /** * Get template by ftl name under web; * @param ftlName * @return * @throws Exception */
    public static Template getTemplate(String ftlName) throws Exception {
        Configuration configuration1 = getConfiguration();
        Template template = configuration1.getTemplate(ftlName, "UTF-8");       //default charset UTF-8

        return template;
    }
}
 create file public class FileHelper {
    /** * create html by template, htmlName, and modal map; * @param template * @param htmlName * @param map * @throws Exception */
    public static void createFile(Template template, String htmlName, Map<String, Object> map) throws Exception {
        File file = new File(PathHelper.getWebPath()+htmlName);
        if (!file.exists()) {
            file.createNewFile();
        }
        Writer out = new BufferedWriter(new FileWriter(file));
        template.process(map, out);
        out.flush();
    }
}
 output <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
</head>

<body>

<h1>Welcome echo!</h1>
<p>Our latest product:
    <a href="www.google.com">greenhouse</a>!

</body>

</html>
 Base directives if With the if directive you can conditionally skip a section of the template. we change the ftl like this <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <h1>Welcome ${user}!</h1>

    <#-- Here is the if directive demo -->
    <#if user == "echo">
        echo
    <#elseif user != "hello">
        not hello
    <#else>
        sb. we do not know.
    </#if>

</body>

</html>
 output <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <h1>Welcome echo!</h1>

        echo

</body>

</html>
 list The generic form of the list directive is: <#list sequence as loopVariable>repeatThis</#list>. The repeatThis part will be repeated for each item in the sequence that you have specified with sequence, one after the other, starting from the first item. change the Demo.java like this public class Demo {
    public static void main(String[] args) throws Exception {
        Template template = FreemarkerHelper.getTemplate("demo.ftl");

        //map build
        Map<String, Object> map = new HashMap<String, Object>();
        List<Product> productList = new LinkedList<Product>();

        Product product = new Product("www.google.com", "greenhouse");
        Product product2 = new Product("www.baidu.com", "bluesky");
        productList.add(product);
        productList.add(product2);
        map.put("productList", productList);

        FileHelper.createFile(template, "demo.html", map);
    }
}
 ftl like this <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <#-- Here is the list directive demo -->
    <#list productList as product>
     <a href="${product.url}">${product.name}</a>
    </#list>

</body>

</html>
 output <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

     <a href="www.google.com">greenhouse</a>
     <a href="www.baidu.com">bluesky</a>

</body>

</html>
 include With the include directive you can insert the content of another file into the template. +add file copyright_footer.ftl <i>
    Copyright (c) 2016 <a href="houbb.github.io">Echo</a>,
    <br>
    All Rights Reserved.
</i>
 change ftl like this <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <#-- Here is the include directive demo -->
    <#include "copyright_footer.ftl">

</body>

</html>
 output <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

<i>
    Copyright (c) 2016 <a href="houbb.github.io">Echo</a>,
    <br>
    All Rights Reserved.
</i>
</body>

</html>
 Using built-ins builtins Missing variables MISS A non-existent variable and a variable with null value is the same for FreeMarker, so the “missing” term used here covers both cases. what will happen if missing ? public class Demo {
    public static void main(String[] args) throws Exception {
        Template template = FreemarkerHelper.getTemplate("demo.ftl");

        //map build
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("user", "this is a long name...");

        FileHelper.createFile(template, "demo.html", map);
    }
}
 <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <#-- Here is the missing demo -->
    ${missing}

</body>

</html>
 result freemarker.core.InvalidReferenceException: Expression missing is undefined on line 10, column 7 in demo.ftl.
...
 how to solve this problem? change the ftl like this <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

    <#-- Here is the missing demo -->
    ${missing!'default value'}

    <#if missing??>
        ${missing}
    <#else>
        missing
    </#if>

</body>

</html>
 output <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>Title</title>
</head>

<body>

        default value

        missing

</body>

</html></description><link>https://houbb.github.io/2016/05/07/freemarker</link><article>侯宾宾</article><guid/><pubDate>2016-05-07</pubDate></item><item><title>Idea</title><description>Idea 侯宾宾      idea      Util      2016-05-06 Shortcut key Database JDK level Lib & Artifacts Integration Plugins Tips Shortcut key Key Desc F2 / Shift + F2 locate warn/error Alt + Enter auto fix Alt + Ins generator code Alt + ↑/↓ locate between methods Alt + ←/→ change code view Ctrl + Alt + ←/→ locate last place Alt + F7 find all usage of select element in project Ctrl + F7 find all usage of select element in current file Ctrl + B open class/method in cursor Ctrl + E recently files Ctrl + H show class struct Ctrl + F12 show methods list Ctrl + J show parameters info Ctrl + P live template Ctrl + Q show java doc Ctrl + N find class files Ctrl + Shift + N find files Ctrl + Shift + ↑/↓ code move up/down Ctrl + W selected word++ Ctrl + ALT + L format code Ctrl + ALT + T surround code in block(try…catch…) Ctrl + ALT + O auto import class package But sometimes it does not work well. Check this will be okay. Setting/Editor/General/auto import/add unambiguous imports on the fly
 Database View->Tool Windows: Tool Windows->database: note right of database: Alt+insert mysql doc zh_CN JDK level Error Information:Using javac 1.7.0_79 to compile java sources  
Information:java: javacTask: 源发行版 1.7 需要目标发行版 1.7  
Information:java: Errors occurred while compiling module 'xxx'  
Information:15/8/14 下午11:08 - Compilation completed with 1 error and 0 warnings in 1s 913ms  
Error:java: Compilation failed: internal java compiler error    
 Solve If you just want use functions no more than 1.5, right click project->maven->reImport If you want to use new features more than 1.6. open setting (ctrl+alt+s) open struts setting (ctrl+alt+s) Or you can use the maven plugin in maven project: <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>${plugin.compiler.version}</version>
    <configuration>
        <source>${compiler.level}</source>
        <target>${compiler.level}</target>
        <encoding>${project.build.sourceEncoding}</encoding>
    </configuration>
</plugin>
 Lib & Artifacts Ctrl+Alt+Shift+S open the project strut. Libraries Artifacts You need do this before put the war into tomcat. Integration Use idea with JIRA, UML, SSH, FTP and son on. zh_CN Plugins Junit Generator Download JunitGenerator from idea plugins. Find Bugs Download FindBugs-IDEA plugins lombok 无效 why Tips Refactor If you want to change the class name or var name, use shift+F6 to do this, all reference will be changed.</description><link>https://houbb.github.io/2016/05/06/Idea</link><article>侯宾宾</article><guid/><pubDate>2016-05-06</pubDate></item><item><title>Reflecting</title><description>Reflecting 侯宾宾      reflecting      Java      2016-05-02 Reflection toString() lombok Reflection getClass() Here is the jdk1.7 doc. public Class<?>[] getClasses()
 The actual result type is Class<? extends |X|> where |X| is the erasure of the static type of the expression on which getClass is called. toString() Here is a ReflectionUtil.java helps you say goodbye to toString(); package com.ryo.util;

import java.beans.IntrospectionException;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/** * Created by houbinbin on 16/5/21. */
public class ReflectionUtil {
    /** * base toString() method; * @param thisObj * @return */
    public static String toString(Object thisObj) {
        Class clazz = thisObj.getClass();

        String entityName = clazz.getSimpleName();
        Field fields[] = clazz.getDeclaredFields();

        StringBuilder stringBuilder = new StringBuilder(String.format("%s{", entityName));

        for(int i = 0; i < fields.length-1; i++) {
            Field field = fields[i];
            stringBuilder.append(buildFieldValue(thisObj, field)+",");
        }

        stringBuilder.append(buildFieldValue(thisObj, fields[fields.length-1]));
        stringBuilder.append("}");

        return stringBuilder.toString();
    }

    /** * build "field=fieldValue" * @param object * @param field * @return */
    private static String buildFieldValue(Object object, Field field) {
        final String format = isType(field, String.class) ? "%s='%s'" : "%s=%s";
        StringBuilder stringBuilder = new StringBuilder();
        Method getMethod = getGetMethod(object.getClass(), field);
        try {
            Object fieldValue = getMethod.invoke(object);
            stringBuilder = new StringBuilder(String.format(format, field.getName(), fieldValue));
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }

        return stringBuilder.toString();
    }

    /** * get the Get() of current field; * @param clazz * @param field * @return */
    private static Method getGetMethod(Class clazz, Field field) {
        PropertyDescriptor propertyDescriptor = null;
        try {
            propertyDescriptor = new PropertyDescriptor(field.getName(), clazz);
        } catch (IntrospectionException e) {
            e.printStackTrace();
        }

        return propertyDescriptor.getReadMethod();
    }

    /** * adjust just field is the type of * @param field * @param classType * @return */
    private static Boolean isType(Field field, Class classType) {
        return field.getType().equals(classType);
    }
}
 Student.java /** * Created by houbinbin on 16/5/20. */
public class Student extends Base {
    private Long id;
    private String name;
    private int score;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getScore() {
        return score;
    }

    public void setScore(int score) {
        this.score = score;
    }

    public Student() {
    }

    public Student(String name, int score) {
        this.name = name;
        this.score = score;
    }

    @Override
    public String toString() {
        return ReflectionUtil.toString(this);
    }
}
 or you can toString() in the base model in your project. StudentTest.java public class StudentTest {
    @Test
    public void testToString() {
        Student student = new Student("hello", 30);

        System.out.println(student);
    }
}

 result is Student{id=null,name='hello',score=30}

Process finished with exit code 0
 lombok By integrating into the IDE, Project Lombok is able to inject code that is immediately available to the developer. lombok doc add jar <dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>1.16.8</version>
</dependency>
 install plugin in idea. IntelliJ IDEA->Prefercence->plugins
 search for lombok, install and restart.</description><link>https://houbb.github.io/2016/05/02/refelecting</link><article>侯宾宾</article><guid/><pubDate>2016-05-02</pubDate></item><item><title>UML</title><description>UML 侯宾宾      UML      Util      2016-05-01 UML Sequence UML UML is the Unified Modeling Language. UML zh_CN If you want to design your UML, StarUML is an awesome choice. UseCase Class Relationship Activity Sequence State chart Component Deployment Sequence Download->Define: Define->Usage: The js-sequence-diagrams helps you turns text into UML sequence diagrams. And the flowchart Download js-sequence-diagrams depends on Raphaël and Underscore.js Define <uml>
    Title: UML Test
    A->B: Normal line
    B-->C: Dashed line
    C->>D: Open arrow
    D-->>A: Dashed open arrow
</uml>
 Usage 1、Import the js file <script src="raphael-min.js"></script>
<script src="underscore-min.js"></script>
<script src="sequence-diagram-min.js"></script>
 2、Define this in jQuery: $("UML, uml").sequenceDiagram({theme: 'hand'});
 and you can see: Title: UML Test A->B: Normal line B-->C: Dashed line C->>D: Open arrow D-->>A: Dashed open arrow</description><link>https://houbb.github.io/2016/05/01/UML</link><article>侯宾宾</article><guid/><pubDate>2016-05-01</pubDate></item><item><title>JUnit</title><description>JUnit 侯宾宾      test      Tools      2016-04-26 JUnit Simple Demo Usage JUnitGenerator Mockito PowerMock JUnit JUnit is a simple framework to write repeatable tests. It is an instance of the xUnit architecture for unit testing frameworks. What to test? Need Desc Right 结果是否正确 B 边界条件是否满足 I 能反向关联吗 C 有其他手段交叉检查吗 E 是否可以强制异常发生 P 性能问题 Simple Demo We create a test class for student; public class StudentTest extends TestCase {
    public void testCreate() {
        Student student =  new Student("Mike");
    }
}
 Student class public class Student {
    private String name;

    public Student(String name) {
        this.name = name;
    }

    public String getName() {
        return "ryo";
    }

    public void setName(String name) {
        this.name = name;
    }
}
 when we run StudentTest. then, we change the test code. public class StudentTest extends TestCase {
    public void testCreate() {
        Student student =  new Student("Mike");
        String name = student.getName();

        assertEquals("Mike", name);
    }
}
 result Usage Add jars in IDEA File --> Project Structure  [crtl+alt+shift+s] --> Libraries --> "+"---> "Attach Files or Directories"
 setUp() Now we add a new class Course. public class Course {
    private String name;
    private int num;

    public Course(String name, int num) {
        this.name = name;
        this.num = num;
    }

    public String getName() {
        return name;
    }

    public int getNum() {
        return num;
    }
}
 test class like this… public class CourseTest extends TestCase {
    public void testCreateNum() {
        Course course = new Course("Math", 1);
        assertEquals(1, course.getNum());
    }

    public void testCreateName() {
        Course course = new Course("Math", 1);
        assertEquals("Helo", course.getName());
    }
}
 You may find Course course = new Course("Math", 1);
 we have write it twice, can it be easier? Now, we can use setUp() to help us to do it easier; things in setUp() will be called before each test method. public class CourseTest extends TestCase {
    private Course course;
    public void setUp() {
        course = new Course("Math", 1);
    }

    public void testCreateNum() {
        assertEquals(1, course.getNum());
    }

    public void testCreateName() {
        assertEquals("Helo", course.getName());
    }
}
 tearDown() Also, tearDown() will be called after each test method. @Before Method annotated with @Before executed before every test; also, @After after… @BeforeClass Just run one time, and is unique. JUnitGenerator This plugin generates JUnit tests from right click ‘Generate…’ menu while focused on a java class. The unit test output code can be customized using a provided velocity template to format the code based on the origin class. If a unit test is created where one already exists, the user is prompted for overwrite or merge operation. The merge operation allows the user to selectively create the target file content. set the output path ${SOURCEPATH}/../../test/java/${PACKAGE}/${FILENAME}
 set the junit4 template ########################################################################################
##
## Available variables:
##         $entryList.methodList - List of method composites
##         $entryList.privateMethodList - List of private method composites
##         $entryList.fieldList - ArrayList of class scope field names
##         $entryList.className - class name
##         $entryList.packageName - package name
##         $today - Todays date in MM/dd/yyyy format
##
##            MethodComposite variables:
##                $method.name - Method Name
##                $method.signature - Full method signature in String form
##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods)
##                $method.paramNames - List of Strings representing the method's parameters' names
##                $method.paramClasses - List of Strings representing the method's parameters' classes
##
## You can configure the output class name using "testClass" variable below.
## Here are some examples:
## Test${entry.ClassName} - will produce TestSomeClass
## ${entry.className}Test - will produce SomeClassTest
##
########################################################################################
##
#macro (cap $strIn)$strIn.valueOf($strIn.charAt(0)).toUpperCase()$strIn.substring(1)#end
## Iterate through the list and generate testcase for every entry.
#foreach ($entry in $entryList)
#set( $testClass="${entry.className}Test")
##
package $entry.packageName;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

/**
* ${entry.className} Tester.
*
* @author houbinbin
* @since $today
* @version 1.0
*/
public class $testClass {

    @Before
    public void before() throws Exception {
    }

    @After
    public void after() throws Exception {
    }

    #foreach($method in $entry.methodList)
/**
    *
    * Method: $method.signature
    *
    */
    @Test
    public void ${method.name}Test() throws Exception {
    }

    #end

    #foreach($method in $entry.privateMethodList)
/**
    *
    * Method: $method.signature
    *
    */
    @Test
    public void ${method.name}Test() throws Exception {
    #foreach($string in $method.reflectionCode)
    $string
    #end
}

#end
}
#end
 test template with Mockito ########################################################################################
##
## Available variables:
##         $entryList.methodList - List of method composites
##         $entryList.privateMethodList - List of private method composites
##         $entryList.fieldList - ArrayList of class scope field names
##         $entryList.className - class name
##         $entryList.packageName - package name
##         $today - Todays date in MM/dd/yyyy format
##
##            MethodComposite variables:
##                $method.name - Method Name
##                $method.signature - Full method signature in String form
##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods)
##                $method.paramNames - List of Strings representing the method's parameters' names
##                $method.paramClasses - List of Strings representing the method's parameters' classes
##
## You can configure the output class name using "testClass" variable below.
## Here are some examples:
## Test${entry.ClassName} - will produce TestSomeClass
## ${entry.className}Test - will produce SomeClassTest
##
########################################################################################
##
#macro (cap $strIn)$strIn.valueOf($strIn.charAt(0)).toUpperCase()$strIn.substring(1)#end
#macro (uncap $strIn)$strIn.valueOf($strIn.charAt(0)).toLowerCase()$strIn.substring(1)#end
## Iterate through the list and generate testcase for every entry.
#foreach ($entry in $entryList)
#set( $testClass="${entry.className}Test")
##
package $entry.packageName;

import org.junit.Test;
import org.junit.Before;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;

/**
* ${entry.className} Tester.
*
* @author houbinbin
* @since $today
* @version 1.0
*/
public class $testClass {

    @InjectMocks
    private ${entry.className} #uncap(${entry.className});

    @Before
    public void init() {
     MockitoAnnotations.initMocks(this);
    }

    #foreach($method in $entry.methodList)
/**
    *
    * Method: $method.signature
    *
    */
    @Test
    public void ${method.name}Test() throws Exception {
    }

    #end

    #foreach($method in $entry.privateMethodList)
/**
    *
    * Method: $method.signature
    *
    */
    @Test
    public void ${method.name}Test() throws Exception {
    #foreach($string in $method.reflectionCode)
    $string
    #end
}

#end
}
#end
 Mockito Mockito is a mocking framework that tastes really good. It lets you write beautiful tests with a clean & simple API. Mockito doesn’t give you hangover because the tests are very readable and they produce clean verification errors. If you want to test classA as following, you need create class BCD at first. classA->classB: classB->classC: classB->classD: When you use mock, things will be like classA->classBMock: Hello World maven jar <dependency>
  <groupId>org.mockito</groupId>
  <artifactId>mockito-all</artifactId>
  <version>1.8.4</version>
</dependency>
 hello world @Test
public void testMock() {
  List<String> mockedList = mock(List.class);

  // stubbing appears before the actual execution
  when(mockedList.get(0)).thenReturn("hello");

  String result = mockedList.get(0);

  //verify has called get(0)
  verify(mockedList).get(0);

  assertEquals("hello", result);
}
 Mock demo public class UserServiceTest {
  @InjectMocks
  private UserService userService;

  @Mock
  private UserDao userDao;

  @Before
  public void init(){
      MockitoAnnotations.initMocks(this);

      //mock the method
      User user = new User();
      Mockito.when(this.UserDao.selectUser(Mockito.anyString()))
          .thenReturn(user);
  }

  @Test
  public void testGetUser() {

  }
}
 PowerMock https://github.com/jayway/powermock</description><link>https://houbb.github.io/2016/04/26/JUnit</link><article>侯宾宾</article><guid/><pubDate>2016-04-26</pubDate></item><item><title>gem+jekyll+git</title><description>gem+jekyll+git 侯宾宾      jekyll      jekyll      2016-04-13 Gem Jekyll Git Problem TOC Gem Install ruby, here is the download address. Jekyll Jekyll is a simple, blog-aware, static site generator. jekyll doc zh_CN Use command to install jekyll as following. $ gem install jekyll
 You may need use Proxy Software in China. Then, wait and learn how to use it. Or you can use rails instead of jekyll. If you are use mac, use this. $ sudo gem install jekyll

 Git You need know how to use Git. Git doc Problem Error: Permission denied - bind(2) for 127.0.0.1:4000 bind localhost:4000 failed use     $ netstat -ano
    $ tasklist /svc /FI "PID eq ${pid}"
 pid is the result of thread who occupy localhost:4000; Use task manager to kill this thread; Please add the following to your Gemfile to avoid polling for changes: gem ‘wdm’, ‘>= 0.1.0’ if Gem.win_platform? gem ‘wdm’, ‘>= 0.1.0’ if Gem.win_platform? I have tried times, but also failed. Luckily, jekyll is still work well. jekyll-paginate Configuration file: /Users/houbinbin/blog/houbb.github.io/_config.yml
  Dependency Error: Yikes! It looks like you don't have jekyll-paginate or one of its dependencies installed. In order to use Jekyll as currently configured, you'll need to install this gem. The full error message from Ruby is: 'cannot load such file -- jekyll-paginate' If you run into trouble, you can find helpful resources at http://jekyllrb.com/help/!
jekyll 3.1.3 | Error:  jekyll-paginate
 solve method. $ sudo gem install jekyll-paginate

 TOC TOC add these code in your file. * any list
{:toc}</description><link>https://houbb.github.io/2016/04/13/jekyll</link><article>侯宾宾</article><guid/><pubDate>2016-04-13</pubDate></item></channel></rss>

Process finished with exit code 0
